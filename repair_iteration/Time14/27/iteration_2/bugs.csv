bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(instant  ==  0  ||  months  >=  iChronology.getMillisOfYear(instant))  {  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  >=  iChronology.getMillisOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months  >=  iChronology.getMillisOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMillisOfYear(instant))    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
2	[BUG]  [BUGGY]  if(instant  ==  0  ||  months!=  iChronology.getMillisOfYear(instant))  {  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months!=  iChronology.getMillisOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months!=  iChronology.getMillisOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMillisOfYear(instant))    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
3	[BUG]  [BUGGY]  if(months  ==  0  ||  instant!=  iChronology.getMillisOfYear(instant))  {  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant!=  iChronology.getMillisOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant!=  iChronology.getMillisOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMillisOfYear(instant))    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
4	[BUG]  [BUGGY]  if(instant  ==  0  ||  months  >>  iChronology.getMillisOfYear(instant))  {  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  >>  iChronology.getMillisOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months  >>  iChronology.getMillisOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMillisOfYear(instant))    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
5	[BUG]  [BUGGY]  if(instant  >=  0  ||  months  >=  iChronology.getMillisOfYear(instant))  {  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  >=  iChronology.getMillisOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months  >=  iChronology.getMillisOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMillisOfYear(instant))    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
6	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >>  iChronology.getMillisOfYear(instant))  {  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >>  iChronology.getMillisOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >>  iChronology.getMillisOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMillisOfYear(instant))    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
7	[BUG]  [BUGGY]  if(instant  >=  0  ||  months!=  iChronology.getMillisOfYear(instant))  {  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months!=  iChronology.getMillisOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months!=  iChronology.getMillisOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMillisOfYear(instant))    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
8	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMillisOfYear(instant,  months))  {  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMillisOfYear(instant,  months))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >=  iChronology.getMillisOfYear(instant,  months))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMillisOfYear(instant))    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
9	[BUG]  [BUGGY]  int  months  =  iChronology.getMillisOfYear(instant,  months);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMillisOfYear(instant,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMillisOfYear(instant,  months);	      int    months    =    iChronology.getMillisOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]  long  months  =  iChronology.getMillisOfYear(instant);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  long  months  =  iChronology.getMillisOfYear(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	long  months  =  iChronology.getMillisOfYear(instant);	      int    months    =    iChronology.getMillisOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
11	[BUG]  [BUGGY]  int  months  =  iChronology.getMillisOfMonth(instant);  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMillisOfMonth(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMillisOfMonth(instant);	      int    months    =    iChronology.getMillisOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
12	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  >=  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months  >=  0)  {	  if(months!=    0)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	14	13	replace
13	[BUG]  [BUGGY]  if(months  >=  0)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  >=  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  >=  0)  {	  if(months!=    0)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	14	13	replace
14	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant,  months))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant,  months))  {	  if(months!=    0)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	14	15	replace
15	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant,  months))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant,  months))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant,  months))  {	  if(months!=    0)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	14	15	replace
16	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMillisOfDay(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months  ==  0  ||  instant  >=  iChronology.getMillisOfDay(instant))  {	  if(months!=    0)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	14	15	replace
17	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMillisOfDay(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMillisOfDay(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >=  iChronology.getMillisOfDay(instant))  {	  if(months!=    0)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	14	15	replace
18	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMillisOfYearDateTime())  {  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMillisOfYearDateTime())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >=  iChronology.getMillisOfYearDateTime())  {	  if(months!=    0)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
19	[BUG]  [BUGGY]  if(instant  ==  0  ||  months!=  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months!=  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months!=  iChronology.getDayOfMonth())  {	  if(months    ==    0    ||    instant!=    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	28	None	replace
20	[BUG]  [BUGGY]  if(instant  ==  0  ||  months  >=  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  >=  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months  >=  iChronology.getDayOfMonth())  {	  if(months    ==    0    ||    instant!=    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	28	None	replace
21	[BUG]  [BUGGY]  if(instant  >=  0  ||  months!=  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months!=  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months!=  iChronology.getDayOfMonth())  {	  if(months    ==    0    ||    instant!=    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	28	None	replace
22	[BUG]  [BUGGY]  if(instant  ==  0  ||  months  >>  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  >>  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months  >>  iChronology.getDayOfMonth())  {	  if(months    ==    0    ||    instant!=    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	28	None	replace
23	[BUG]  [BUGGY]  if(instant!=  0  ||  months!=  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant!=  0  ||  months!=  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant!=  0  ||  months!=  iChronology.getDayOfMonth())  {	  if(months    ==    0    ||    instant!=    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	28	None	replace
24	[BUG]  [BUGGY]  if(instant  >>  0  ||  months!=  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >>  0  ||  months!=  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >>  0  ||  months!=  iChronology.getDayOfMonth())  {	  if(months    ==    0    ||    instant!=    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	28	None	replace
25	[BUG]  [BUGGY]  if(instant  >=  0  ||  months  ==  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  ==  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months  ==  iChronology.getDayOfMonth())  {	  if(months    ==    0    ||    instant!=    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	28	None	replace
26	[BUG]  [BUGGY]  if(months!=  0)  {  if(months!=  0)  {  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0)  {  if(months!=  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=    0)    {    if(months!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
27	[BUG]  [BUGGY]  if(months!=  0)  {  if(months  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0)  {  if(months  >=  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=    0)    {    if(months  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
28	[BUG]  [BUGGY]  if(months!=  0)  {  if(months  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0)  {  if(months  ==  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=    0)    {    if(months  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
29	[BUG]  [BUGGY]  if(months!=  0)  {  if(months  >>  0)  {  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0)  {  if(months  >>  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=    0)    {    if(months  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
30	[BUG]  [BUGGY]  if(months!=  0)  {  if(months  [BUGGY]  0)  {  [CE]  ')'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0)  {  if(months  [BUGGY]  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=    0)    {    if(months  [BUGGY]  0)  {	  	non-compiled	[CE]  ')'  expected	13	None	add
31	[BUG]  [BUGGY]  if(months!=  0)  {  if(months  [Delete]  0)  {  [CE]  ')'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0)  {  if(months  [Delete]  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=    0)    {    if(months  [Delete]  0)  {	  	non-compiled	[CE]  ')'  expected	13	None	add
32	[BUG]  [BUGGY]  if(months!=  0)  {  if(months  [PATCH]  0)  {  [CE]  ')'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0)  {  if(months  [PATCH]  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=    0)    {    if(months  [PATCH]  0)  {	  	non-compiled	[CE]  ')'  expected	13	None	add
33	[BUG]  [BUGGY]  if(months!=  0)  {  if(months  [BUG]  0)  {  [CE]  ')'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0)  {  if(months  [BUG]  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=    0)    {    if(months  [BUG]  0)  {	  	non-compiled	[CE]  ')'  expected	13	None	add
34	[BUG]  [BUGGY]  if(months!=  0)  {  If(months!=  0)  {  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0)  {  If(months!=  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=    0)    {    If(months!=  0)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
35	[BUG]  [BUGGY]  if(months  ==  1  &&  iChronology.getMillisOfYear(instant)!=  thisYear)  {  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1  &&  iChronology.getMillisOfYear(instant)!=  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  1  &&  iChronology.getMillisOfYear(instant)!=  thisYear)  {	  if(months    ==    1)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
36	[BUG]  [BUGGY]  if(months  ==  1  &&  iChronology.getMonthOfYear(instant)!=  thisYear)  {  [CE]  cannot  find  symbol  thisYear  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1  &&  iChronology.getMonthOfYear(instant)!=  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  1  &&  iChronology.getMonthOfYear(instant)!=  thisYear)  {	  if(months    ==    1)    {    	non-compiled	[CE]  cannot  find  symbol  thisYear	12	None	replace
37	[BUG]  [BUGGY]  if(months  ==  1  &&  iChronology.getMillisOfYear(instant)!=  iLeapMonth)  {  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1  &&  iChronology.getMillisOfYear(instant)!=  iLeapMonth)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  1  &&  iChronology.getMillisOfYear(instant)!=  iLeapMonth)  {	  if(months    ==    1)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
38	[BUG]  [BUGGY]  if(months  ==  1  &&  iChronology.getMillisOfDay(instant)!=  thisYear)  {  [CE]  cannot  find  symbol  thisYear  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1  &&  iChronology.getMillisOfDay(instant)!=  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  1  &&  iChronology.getMillisOfDay(instant)!=  thisYear)  {	  if(months    ==    1)    {    	non-compiled	[CE]  cannot  find  symbol  thisYear	12	None	replace
39	[BUG]  [BUGGY]  if(months  ==  1  &&  iChronology.getMillisOfYear(instant)!=  months)  {  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1  &&  iChronology.getMillisOfYear(instant)!=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  1  &&  iChronology.getMillisOfYear(instant)!=  months)  {	  if(months    ==    1)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
40	[BUG]  [BUGGY]  if(months  ==  1  &&  iChronology.getDayOfMonth(instant)!=  thisYear)  {  [CE]  cannot  find  symbol  thisYear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1  &&  iChronology.getDayOfMonth(instant)!=  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  1  &&  iChronology.getDayOfMonth(instant)!=  thisYear)  {	  if(months    ==    1)    {    	non-compiled	[CE]  cannot  find  symbol  thisYear	12	None	replace
41	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  instant  >=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  ==  0  ||  instant  >=  months)  {	  if(months    ==    0    ||    instant    >=    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	15	replace
42	[BUG]  [BUGGY]  if(instant  ==  0  ||  instant  >=  months)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  instant  >=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  instant  >=  months)  {	  if(months    ==    0    ||    instant    >=    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	15	replace
43	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  instant!=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  ==  0  ||  instant!=  months)  {	  if(months    ==    0    ||    instant    >=    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	15	replace
44	[BUG]  [BUGGY]  if(instant  ==  0  ||  instant!=  months)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  instant!=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  instant!=  months)  {	  if(months    ==    0    ||    instant    >=    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	15	replace
45	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months!=  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  ==  0  ||  months!=  0)  {	  if(months    ==    0    ||    instant    >=    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	15	replace
46	[BUG]  [BUGGY]  if(instant  ==  0  ||  months!=  0)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months!=  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months!=  0)  {	  if(months    ==    0    ||    instant    >=    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	15	replace
47	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  >=  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  ==  0  ||  months  >=  0)  {	  if(months    ==    0    ||    instant    >=    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	13	replace
48	[BUG]  [BUGGY]  if(instant  ==  0  ||  months  >=  0)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  >=  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months  >=  0)  {	  if(months    ==    0    ||    instant    >=    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	13	replace
49	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months!=  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  >=  0  ||  months!=  0)  {	  if(months    ==    0    ||    instant    >=    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	15	replace
50	[BUG]  [BUGGY]  if(instant  >=  0  ||  months!=  0)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months!=  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months!=  0)  {	  if(months    ==    0    ||    instant    >=    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	15	replace
51	[BUG]  [BUGGY]  if(instant  ==  0  ||  months!=  thisYear)  {  [CE]  cannot  find  symbol  thisYear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months!=  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months!=  thisYear)  {	  if(months    ==    0    ||    instant    >=    months)    {    	non-compiled	[CE]  cannot  find  symbol  thisYear	16	None	replace
52	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  instant  >=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  >=  0  ||  instant  >=  months)  {	  if(months    ==    0    ||    instant    >=    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	15	replace
53	[BUG]  [BUGGY]  if(instant  >=  0  ||  instant  >=  months)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  instant  >=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  instant  >=  months)  {	  if(months    ==    0    ||    instant    >=    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	15	replace
54	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  instant!=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  >=  0  ||  instant!=  months)  {	  if(months    ==    0    ||    instant    >=    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	15	replace
55	[BUG]  [BUGGY]  if(instant  >=  0  ||  instant!=  months)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  instant!=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  instant!=  months)  {	  if(months    ==    0    ||    instant    >=    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	15	replace
56	[BUG]  [BUGGY]  if(instant  ==  0  ||  instant  >>  months)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  instant  >>  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  instant  >>  months)  {	  if(months    ==    0    ||    instant    >=    months)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	16	None	replace
57	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant,  months)!=  thisYear)  {  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant,  months)!=  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant,  months)!=  thisYear)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    months)    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
58	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant),  months)  {  [CE]  ')'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant),  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant),  months)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    months)    {    	non-compiled	[CE]  ')'  expected	40	None	replace
59	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant,  months)!=  1)  {  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant,  months)!=  1)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant,  months)!=  1)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    months)    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
60	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant,  months)!=  iChronology)  {  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant,  months)!=  iChronology)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant,  months)!=  iChronology)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    months)    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
61	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)  >=  months)  {  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)  >=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)  >=  months)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    months)    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
62	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant,  months)!=  null)  {  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant,  months)!=  null)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant,  months)!=  null)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    months)    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
63	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMillisOfYear(instant)!=  months)  {  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMillisOfYear(instant)!=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMillisOfYear(instant)!=  months)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    months)    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
64	[BUG]  [BUGGY]  int  months  =  getMonthOfYear(instant,  months);  [CE]  illegal  start  of  type  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  getMonthOfYear(instant,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  getMonthOfYear(instant,  months);	      int    months    =    getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
65	[BUG]  [BUGGY]  int  months  =  getMillisOfYear(instant);  [CE]  illegal  start  of  type  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  getMillisOfYear(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  getMillisOfYear(instant);	      int    months    =    getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
66	[BUG]  [BUGGY]  int  months  =  getMonthOfYear(instant),  months);  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  getMonthOfYear(instant),  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  getMonthOfYear(instant),  months);	      int    months    =    getMonthOfYear(instant);    	non-compiled	[CE]  ';'  expected	7	None	replace
67	[BUG]  [BUGGY]  int  months  =  getMonthOfYear(instant)-  1;  [CE]  illegal  start  of  type  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  getMonthOfYear(instant)-  1;  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  getMonthOfYear(instant)-  1;	      int    months    =    getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
68	[BUG]  [BUGGY]  int  months  =  getMonthOfYear(instant),  months;  [CE]  illegal  start  of  type  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  getMonthOfYear(instant),  months;  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  getMonthOfYear(instant),  months;	      int    months    =    getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
69	[BUG]  [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  thisMonth)  {  [CE]  cannot  find  symbol  thisMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  thisMonth)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  thisMonth)  {	  if(months    ==    0    ||    iChronology.getMonthOfYear(instant)!=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol  thisMonth	41	None	replace
70	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  iLeapMonth)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  iLeapMonth)  {	  if(months    ==    0    ||    iChronology.getMonthOfYear(instant)!=    thisYear)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	41	15	replace
71	[BUG]  [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  iLeapMonth)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  iLeapMonth)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  iLeapMonth)  {	  if(months    ==    0    ||    iChronology.getMonthOfYear(instant)!=    thisYear)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	41	15	replace
72	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  months)  {	  if(months    ==    0    ||    iChronology.getMonthOfYear(instant)!=    thisYear)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	41	15	replace
73	[BUG]  [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  months)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  months)  {	  if(months    ==    0    ||    iChronology.getMonthOfYear(instant)!=    thisYear)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	41	15	replace
74	[BUG]  [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant,  months)!=  thisYear)  {  [CE]  cannot  find  symbol  thisYear  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant,  months)!=  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  iChronology.getMonthOfYear(instant,  months)!=  thisYear)  {	  if(months    ==    0    ||    iChronology.getMonthOfYear(instant)!=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol  thisYear	41	None	replace
75	[BUG]  [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  days)  {  [CE]  cannot  find  symbol  days  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  days)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  days)  {	  if(months    ==    0    ||    iChronology.getMonthOfYear(instant)!=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol  days	41	None	replace
76	[BUG]  [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  thisDay)  {  [CE]  cannot  find  symbol  thisDay  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  thisDay)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  thisDay)  {	  if(months    ==    0    ||    iChronology.getMonthOfYear(instant)!=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol  thisDay	41	None	replace
77	[BUG]  [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  thisMillis)  {  [CE]  cannot  find  symbol  thisMillis  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  thisMillis)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  thisMillis)  {	  if(months    ==    0    ||    iChronology.getMonthOfYear(instant)!=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol  thisMillis	41	None	replace
78	[BUG]  [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  timePart)  {  [CE]  cannot  find  symbol  timePart  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  timePart)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  timePart)  {	  if(months    ==    0    ||    iChronology.getMonthOfYear(instant)!=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol  timePart	41	None	replace
79	[BUG]  [BUGGY]  if(months  ==  0  ||  isYear(instant,  months))  {  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  isYear(instant,  months))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  isYear(instant,  months))  {	  if(months    ==    0    ||    isYear(instant))    {    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
80	[BUG]  [BUGGY]  if(instant  ==  0  ||  isYear(months))  {  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  isYear(months))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  isYear(months))  {	  if(months    ==    0    ||    isYear(instant))    {    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
81	[BUG]  [BUGGY]  if(months  ==  0  ||  isDayOfMonth(instant))  {  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  isDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  isDayOfMonth(instant))  {	  if(months    ==    0    ||    isYear(instant))    {    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
82	[BUG]  [BUGGY]  if(months  ==  0  ||  isChronology(instant))  {  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  isChronology(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  isChronology(instant))  {	  if(months    ==    0    ||    isYear(instant))    {    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
83	[BUG]  [BUGGY]  if(months  ==  0  ||  isMonthOfYear(instant))  {  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  isMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  isMonthOfYear(instant))  {	  if(months    ==    0    ||    isYear(instant))    {    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
84	[BUG]  [BUGGY]  if(months  ==  0  ||  isWeekMonth(instant))  {  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  isWeekMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  isWeekMonth(instant))  {	  if(months    ==    0    ||    isYear(instant))    {    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
85	[BUG]  [BUGGY]  if(months  ==  0  ||  isYearDay(instant))  {  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  isYearDay(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  isYearDay(instant))  {	  if(months    ==    0    ||    isYear(instant))    {    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
86	[BUG]  [BUGGY]  if(months  ==  0  &&  isYear(instant))  {  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  &&  isYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  &&  isYear(instant))  {	  if(months    ==    0    ||    isYear(instant))    {    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
87	[BUG]  [BUGGY]  int  months  =  iChronology.getYearMonthOfYear(instant,  months);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getYearMonthOfYear(instant,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getYearMonthOfYear(instant,  months);	      int    months    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
88	[BUG]  [BUGGY]  long  months  =  iChronology.getYearMonthOfYear(instant);  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  long  months  =  iChronology.getYearMonthOfYear(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	long  months  =  iChronology.getYearMonthOfYear(instant);	      int    months    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
89	[BUG]  [BUGGY]  int  months  =  iChronology.getYearMonthOfDay(instant);  [CE]  illegal  start  of  type  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getYearMonthOfDay(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getYearMonthOfDay(instant);	      int    months    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
90	[BUG]  [BUGGY]  int  months  =  iChronology.getYearMonthMillis(instant,  months);  [CE]  illegal  start  of  type  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getYearMonthMillis(instant,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getYearMonthMillis(instant,  months);	      int    months    =    iChronology.getYearMonthMillis(instant);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
91	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthMillis(instant);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthMillis(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthMillis(instant);	      int    months    =    iChronology.getYearMonthMillis(instant);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
92	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthMillis(instant,  months);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthMillis(instant,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthMillis(instant,  months);	      int    months    =    iChronology.getYearMonthMillis(instant);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
93	[BUG]  [BUGGY]  int  months  =  iChronology.getDayOfMonthMillis(instant);  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getDayOfMonthMillis(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getDayOfMonthMillis(instant);	      int    months    =    iChronology.getYearMonthMillis(instant);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
94	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYearMillis(instant);  [CE]  illegal  start  of  type  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfYearMillis(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfYearMillis(instant);	      int    months    =    iChronology.getYearMonthMillis(instant);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
95	[BUG]  [BUGGY]  int  months  =  iChronology.getDaysMonthMillis(instant);  [CE]  illegal  start  of  type  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getDaysMonthMillis(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getDaysMonthMillis(instant);	      int    months    =    iChronology.getYearMonthMillis(instant);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
96	[BUG]  [BUGGY]  long  months  =  iChronology.getYearMonthMillis(instant);  [CE]  illegal  start  of  type  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  long  months  =  iChronology.getYearMonthMillis(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	long  months  =  iChronology.getYearMonthMillis(instant);	      int    months    =    iChronology.getYearMonthMillis(instant);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
97	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  <  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months  <  0)  {	  if(months    <    =    0)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	18	10	replace
98	[BUG]  [BUGGY]  if(months  <  0)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  <  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  <  0)  {	  if(months    <    =    0)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	18	10	replace
99	[BUG]  [BUGGY]  if(months  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  <  =  1)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  <  =  1)  {	  if(months    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
100	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  >  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months  >  0)  {	  if(months    <    =    0)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	18	13	replace
101	[BUG]  [BUGGY]  if(months  >  0)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  >  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  >  0)  {	  if(months    <    =    0)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	18	13	replace
102	[BUG]  [BUGGY]  if(months  <  =  0  ||  instant  >=  months)  {  [CE]  illegal  start  of  expression  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  <  =  0  ||  instant  >=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  <  =  0  ||  instant  >=  months)  {	  if(months    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
103	[BUG]  [BUGGY]  if(months  >>  0)  {  [CE]  incompatible  types  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  >>  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  >>  0)  {	  if(months    <    =    0)    {    	non-compiled	[CE]  incompatible  types	18	None	replace
104	[BUG]  [BUGGY]  if(months  <  =  0  ||  instant  ==  months)  {  [CE]  illegal  start  of  expression  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  <  =  0  ||  instant  ==  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  <  =  0  ||  instant  ==  months)  {	  if(months    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
105	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  >=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  ==  0  ||  months  >=  iChronology.getDayOfMonth(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	30	9	replace
106	[BUG]  [BUGGY]  if(instant  ==  0  ||  months  >=  iChronology.getDayOfMonth(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  >=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months  >=  iChronology.getDayOfMonth(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	30	9	replace
107	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  >=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  >=  0  ||  months  >=  iChronology.getDayOfMonth(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	30	15	replace
108	[BUG]  [BUGGY]  if(instant  >=  0  ||  months  >=  iChronology.getDayOfMonth(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  >=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months  >=  iChronology.getDayOfMonth(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	30	15	replace
109	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months!=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  ==  0  ||  months!=  iChronology.getDayOfMonth(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	30	15	replace
110	[BUG]  [BUGGY]  if(instant  ==  0  ||  months!=  iChronology.getDayOfMonth(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months!=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months!=  iChronology.getDayOfMonth(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	30	15	replace
111	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months!=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  >=  0  ||  months!=  iChronology.getDayOfMonth(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	30	15	replace
112	[BUG]  [BUGGY]  if(instant  >=  0  ||  months!=  iChronology.getDayOfMonth(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months!=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months!=  iChronology.getDayOfMonth(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	30	15	replace
113	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	30	15	replace
114	[BUG]  [BUGGY]  if(instant  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	30	15	replace
115	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant!=  0  ||  months  >=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant!=  0  ||  months  >=  iChronology.getDayOfMonth(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	30	15	replace
116	[BUG]  [BUGGY]  if(instant!=  0  ||  months  >=  iChronology.getDayOfMonth(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant!=  0  ||  months  >=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant!=  0  ||  months  >=  iChronology.getDayOfMonth(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	30	15	replace
117	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  >=  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	30	15	replace
118	[BUG]  [BUGGY]  if(instant  >=  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	30	15	replace
119	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  ==  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  >=  0  ||  months  ==  iChronology.getDayOfMonth(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	30	15	replace
120	[BUG]  [BUGGY]  if(instant  >=  0  ||  months  ==  iChronology.getDayOfMonth(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  ==  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months  ==  iChronology.getDayOfMonth(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	30	15	replace
121	[BUG]  [BUGGY]  if(instant  ==  0  ||  months  >>  iChronology.getDayOfMonth(instant))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  >>  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months  >>  iChronology.getDayOfMonth(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	30	None	replace
122	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
123	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  if(months  ==  0  ||  instant!=  iChronology.getDayOfMonth(instant))  {  [CE]  illegal  start  of  expression  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  if(months  ==  0  ||  instant!=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    if(months  ==  0  ||  instant!=  iChronology.getDayOfMonth(instant))  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
124	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  if(months  ==  0  ||  instant  >>  iChronology.getDayOfMonth(instant))  {  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  if(months  ==  0  ||  instant  >>  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    if(months  ==  0  ||  instant  >>  iChronology.getDayOfMonth(instant))  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
125	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  if(months!=  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  if(months!=  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    if(months!=  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
126	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  if(months  ==  0  ||  instant  [Delete]  iChronology.getDayOfMonth(instant))  {  [CE]  ')'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  if(months  ==  0  ||  instant  [Delete]  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    if(months  ==  0  ||  instant  [Delete]  iChronology.getDayOfMonth(instant))  {	  	non-compiled	[CE]  ')'  expected	29	None	add
127	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  if(months  >=  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  if(months  >=  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    if(months  >=  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
128	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
129	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  if(months  ==  0  ||  instant  [BUGGY]  iChronology.getDayOfMonth(instant))  {  [CE]  ')'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  if(months  ==  0  ||  instant  [BUGGY]  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    if(months  ==  0  ||  instant  [BUGGY]  iChronology.getDayOfMonth(instant))  {	  	non-compiled	[CE]  ')'  expected	29	None	add
130	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  If(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  If(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    If(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {	  	non-compiled	[CE]  ';'  expected	29	None	add
131	[BUG]  [BUGGY]  int  months  =  iChronology.getYearMillis(instant,  months);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getYearMillis(instant,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getYearMillis(instant,  months);	      int    months    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
132	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYearMillis(instant,  months);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfYearMillis(instant,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfYearMillis(instant,  months);	      int    months    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
133	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iMax)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months  ==  0  ||  instant  >=  iMax)  {	  if(months    ==    0    ||    instant    >=    thisYear)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	17	15	replace
134	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iMax)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iMax)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >=  iMax)  {	  if(months    ==    0    ||    instant    >=    thisYear)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	17	15	replace
135	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  thisMonth)  {  [CE]  cannot  find  symbol  thisMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  thisMonth)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >=  thisMonth)  {	  if(months    ==    0    ||    instant    >=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol  thisMonth	17	None	replace
136	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iLeapMonth)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months  ==  0  ||  instant  >=  iLeapMonth)  {	  if(months    ==    0    ||    instant    >=    thisYear)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	17	15	replace
137	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iLeapMonth)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iLeapMonth)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >=  iLeapMonth)  {	  if(months    ==    0    ||    instant    >=    thisYear)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	17	15	replace
138	[BUG]  [BUGGY]  if(months  ==  0  ||  instant!=  thisMonth)  {  [CE]  cannot  find  symbol  thisMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant!=  thisMonth)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant!=  thisMonth)  {	  if(months    ==    0    ||    instant    >=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol  thisMonth	17	None	replace
139	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant!=  iLeapMonth)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months  ==  0  ||  instant!=  iLeapMonth)  {	  if(months    ==    0    ||    instant    >=    thisYear)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	17	15	replace
140	[BUG]  [BUGGY]  if(months  ==  0  ||  instant!=  iLeapMonth)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant!=  iLeapMonth)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant!=  iLeapMonth)  {	  if(months    ==    0    ||    instant    >=    thisYear)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	17	15	replace
141	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant!=  iMax)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months  ==  0  ||  instant!=  iMax)  {	  if(months    ==    0    ||    instant    >=    thisYear)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	17	15	replace
142	[BUG]  [BUGGY]  if(months  ==  0  ||  instant!=  iMax)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant!=  iMax)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant!=  iMax)  {	  if(months    ==    0    ||    instant    >=    thisYear)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	17	15	replace
143	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  MIN)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months  ==  0  ||  instant  >=  MIN)  {	  if(months    ==    0    ||    instant    >=    thisYear)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	17	15	replace
144	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  MIN)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  MIN)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >=  MIN)  {	  if(months    ==    0    ||    instant    >=    thisYear)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	17	15	replace
145	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant!=  MIN)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months  ==  0  ||  instant!=  MIN)  {	  if(months    ==    0    ||    instant    >=    thisYear)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	17	15	replace
146	[BUG]  [BUGGY]  if(months  ==  0  ||  instant!=  MIN)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant!=  MIN)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant!=  MIN)  {	  if(months    ==    0    ||    instant    >=    thisYear)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	17	15	replace
147	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  months);  [CE]  illegal  start  of  type  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  months);	      int    months    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
148	[BUG]  [BUGGY]  long  months  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  illegal  start  of  type  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  long  months  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	long  months  =  iChronology.getMonthOfYear(instant,  thisYear);	      int    months    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
149	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisDay,  months);  [CE]  illegal  start  of  type  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisDay,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  thisDay,  months);	      int    months    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
150	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  years);  [CE]  illegal  start  of  type  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  years);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  years);	      int    months    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
151	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear),  months);  [CE]  ';'  expected  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear),  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  thisYear),  months);	      int    months    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  ';'  expected	9	None	replace
152	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfDay(instant,  thisYear);  [CE]  illegal  start  of  type  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfDay(instant,  thisYear);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfDay(instant,  thisYear);	      int    months    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
153	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  months);  [CE]  illegal  start  of  type  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant,  months);	      int    monthToUse    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
154	[BUG]  [BUGGY]  long  monthToUse  =  iChronology.getMonthOfYear(instant);  [CE]  illegal  start  of  type  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  long  monthToUse  =  iChronology.getMonthOfYear(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	long  monthToUse  =  iChronology.getMonthOfYear(instant);	      int    monthToUse    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
155	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.monthOfYear(instant,  months);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  monthToUse  =  iChronology.monthOfYear(instant,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  monthToUse  =  iChronology.monthOfYear(instant,  months);	      int    monthToUse    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
156	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfDay(instant);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfDay(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  monthToUse  =  iChronology.getMonthOfDay(instant);	      int    monthToUse    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
157	[BUG]  [BUGGY]  int  yearToUse  =  iChronology.getMonthOfYear(instant);  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  yearToUse  =  iChronology.getMonthOfYear(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  yearToUse  =  iChronology.getMonthOfYear(instant);	      int    monthToUse    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
158	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  illegal  start  of  type  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);	      int    monthToUse    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
159	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant);  [CE]  illegal  start  of  type  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  monthToUse  =  iChronology.getDayOfMonth(instant);	      int    monthToUse    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
160	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  months)  {  if(months  ==  0  ||  instant!=  months)  {  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  months)  {  if(months  ==  0  ||  instant!=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    months)    {    if(months  ==  0  ||  instant!=  months)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
161	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  months)  {  if(months  ==  0  ||  instant  >=  months)  {  [CE]  illegal  start  of  expression  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  months)  {  if(months  ==  0  ||  instant  >=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    months)    {    if(months  ==  0  ||  instant  >=  months)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
162	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  months)  {  if(months  ==  0  ||  instant  >>  months)  {  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  months)  {  if(months  ==  0  ||  instant  >>  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    months)    {    if(months  ==  0  ||  instant  >>  months)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
163	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  months)  {  if(months  ==  0  ||  instant  [Delete]  months)  {  [CE]  ')'  expected  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  months)  {  if(months  ==  0  ||  instant  [Delete]  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    months)    {    if(months  ==  0  ||  instant  [Delete]  months)  {	  	non-compiled	[CE]  ')'  expected	15	None	add
164	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  months)  {  if(months  ==  0  ||  instant  [BUGGY]  months)  {  [CE]  ')'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  months)  {  if(months  ==  0  ||  instant  [BUGGY]  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    months)    {    if(months  ==  0  ||  instant  [BUGGY]  months)  {	  	non-compiled	[CE]  ')'  expected	15	None	add
165	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  months)  {  if(months!=  0  ||  instant  >=  months)  {  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  months)  {  if(months!=  0  ||  instant  >=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    months)    {    if(months!=  0  ||  instant  >=  months)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
166	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  months)  {  if(months!=  0  ||  instant!=  months)  {  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  months)  {  if(months!=  0  ||  instant!=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    months)    {    if(months!=  0  ||  instant!=  months)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
167	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  months)  {  if(months  >=  0  ||  instant!=  months)  {  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  months)  {  if(months  >=  0  ||  instant!=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    months)    {    if(months  >=  0  ||  instant!=  months)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
168	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)  ==  0)  {  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)  ==  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)  ==  0)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)    <    =    0)    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
169	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)!=  0)  {  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)!=  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)!=  0)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)    <    =    0)    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
170	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant,  months)  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant,  months)  <  =  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant,  months)  <  =  0)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
171	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)  >=  0)  {  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)  >=  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)  >=  0)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)    <    =    0)    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
172	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getDayOfMonth(instant)  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getDayOfMonth(instant)  <  =  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getDayOfMonth(instant)  <  =  0)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
173	[BUG]  [BUGGY]  if(months  ==  0  &&  DateTimeUtils.getMonthOfYear(instant)  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  &&  DateTimeUtils.getMonthOfYear(instant)  <  =  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  &&  DateTimeUtils.getMonthOfYear(instant)  <  =  0)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
174	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMillisOfYear(instant)  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMillisOfYear(instant)  <  =  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMillisOfYear(instant)  <  =  0)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
175	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant),  months  <  =  0)  {  [CE]  ')'  expected  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant),  months  <  =  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant),  months  <  =  0)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)    <    =    0)    {    	non-compiled	[CE]  ')'  expected	42	None	replace
176	[BUG]  [BUGGY]  if(instant  ==  0  ||  DateTimeUtils.getMonthOfYear(months)  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  DateTimeUtils.getMonthOfYear(months)  <  =  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  DateTimeUtils.getMonthOfYear(months)  <  =  0)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
177	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  months,  1);  [CE]  illegal  start  of  type  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  months,  1);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  months,  1);	      int    months    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
178	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  months,  thisYear);  [CE]  illegal  start  of  type  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  months,  thisYear);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  months,  thisYear);	      int    months    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
179	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  days);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  days);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  days);	      int    months    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
180	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  months,  dayOfMonth);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  months,  dayOfMonth);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  months,  dayOfMonth);	      int    months    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
181	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  months,  iMax);  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  months,  iMax);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  months,  iMax);	      int    months    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
182	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  if(months  ==  0  ||  instant  <  months)  {  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  if(months  ==  0  ||  instant  <  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    <    months)    {    if(months  ==  0  ||  instant  <  months)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
183	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  if(months!=  0  ||  instant  <  months)  {  [CE]  illegal  start  of  expression  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  if(months!=  0  ||  instant  <  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    <    months)    {    if(months!=  0  ||  instant  <  months)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
184	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  if(months  >=  0  ||  instant  <  months)  {  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  if(months  >=  0  ||  instant  <  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    <    months)    {    if(months  >=  0  ||  instant  <  months)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
185	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  if(months  ==  0  ||  instant  >=  months)  {  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  if(months  ==  0  ||  instant  >=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    <    months)    {    if(months  ==  0  ||  instant  >=  months)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
186	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  If(months  ==  0  ||  instant  <  months)  {  [CE]  ';'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  If(months  ==  0  ||  instant  <  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    <    months)    {    If(months  ==  0  ||  instant  <  months)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
187	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  if(months  >>  0  ||  instant  <  months)  {  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  if(months  >>  0  ||  instant  <  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    <    months)    {    if(months  >>  0  ||  instant  <  months)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
188	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  if(months  [BUGGY]  0  ||  instant  <  months)  {  [CE]  ')'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  if(months  [BUGGY]  0  ||  instant  <  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    <    months)    {    if(months  [BUGGY]  0  ||  instant  <  months)  {	  	non-compiled	[CE]  ')'  expected	19	None	add
189	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  if(months  [Delete]  0  ||  instant  <  months)  {  [CE]  ')'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  if(months  [Delete]  0  ||  instant  <  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    <    months)    {    if(months  [Delete]  0  ||  instant  <  months)  {	  	non-compiled	[CE]  ')'  expected	19	None	add
190	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  if(months  ==  0  ||  Instant  <  months)  {  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  if(months  ==  0  ||  Instant  <  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    <    months)    {    if(months  ==  0  ||  Instant  <  months)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
191	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  ==  0  ||  months  >=  iChronology.getMonthOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	9	replace
192	[BUG]  [BUGGY]  if(instant  ==  0  ||  months  >=  iChronology.getMonthOfYear(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months  >=  iChronology.getMonthOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	9	replace
193	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  >=  0  ||  months  >=  iChronology.getMonthOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	15	replace
194	[BUG]  [BUGGY]  if(instant  >=  0  ||  months  >=  iChronology.getMonthOfYear(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months  >=  iChronology.getMonthOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	15	replace
195	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months!=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  ==  0  ||  months!=  iChronology.getMonthOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	15	replace
196	[BUG]  [BUGGY]  if(instant  ==  0  ||  months!=  iChronology.getMonthOfYear(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months!=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months!=  iChronology.getMonthOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	15	replace
197	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months!=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  >=  0  ||  months!=  iChronology.getMonthOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	15	replace
198	[BUG]  [BUGGY]  if(instant  >=  0  ||  months!=  iChronology.getMonthOfYear(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months!=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months!=  iChronology.getMonthOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	15	replace
199	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant!=  0  ||  months  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant!=  0  ||  months  >=  iChronology.getMonthOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	15	replace
200	[BUG]  [BUGGY]  if(instant!=  0  ||  months  >=  iChronology.getMonthOfYear(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant!=  0  ||  months  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant!=  0  ||  months  >=  iChronology.getMonthOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	15	replace
201	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  ==  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  >=  0  ||  months  ==  iChronology.getMonthOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	15	replace
202	[BUG]  [BUGGY]  if(instant  >=  0  ||  months  ==  iChronology.getMonthOfYear(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  ==  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months  ==  iChronology.getMonthOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	15	replace
203	[BUG]  [BUGGY]  if(instant  >>  0  ||  months  >=  iChronology.getMonthOfYear(instant))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >>  0  ||  months  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >>  0  ||  months  >=  iChronology.getMonthOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	27	None	replace
204	[BUG]  [BUGGY]  if(instant  ==  0  ||  months  >>  iChronology.getMonthOfYear(instant))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  >>  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months  >>  iChronology.getMonthOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	27	None	replace
205	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	15	replace
206	[BUG]  [BUGGY]  if(instant  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	15	replace
207	[BUG]  [BUGGY]  if(instant  >=  0  ||  instant  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  instant  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  instant  <  =  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
208	[BUG]  [BUGGY]  if(instant  >=  0  ||  months  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months  <  =  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
209	[BUG]  [BUGGY]  if(instant  ==  0  ||  instant  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  instant  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  instant  <  =  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
210	[BUG]  [BUGGY]  if(instant  ==  0  ||  months  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months  <  =  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
211	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  instant  >=  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  ==  0  ||  instant  >=  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	34	15	replace
212	[BUG]  [BUGGY]  if(instant  ==  0  ||  instant  >=  DateTimeConstants.MILLIS_PER_DAY)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  instant  >=  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  instant  >=  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	34	15	replace
213	[BUG]  [BUGGY]  if(instant  <  0  ||  months  >=  =  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  <  0  ||  months  >=  =  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  <  0  ||  months  >=  =  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
214	[BUG]  [BUGGY]  if(instant!=  0  ||  instant  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant!=  0  ||  instant  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant!=  0  ||  instant  <  =  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
215	[BUG]  [BUGGY]  if(instant!=  0  ||  months  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant!=  0  ||  months  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant!=  0  ||  months  <  =  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
216	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months  ==  0  ||  instant  >=  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	34	15	replace
217	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  DateTimeConstants.MILLIS_PER_DAY)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >=  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	34	15	replace
218	[BUG]  [BUGGY]  int  months  =  iChronology.getMillisOfDay(instant,  months);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMillisOfDay(instant,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMillisOfDay(instant,  months);	      int    months    =    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
219	[BUG]  [BUGGY]  int  months  =  iChronology.getMillisOfYearDate(instant,  months);  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMillisOfYearDate(instant,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMillisOfYearDate(instant,  months);	      int    months    =    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
220	[BUG]  [BUGGY]  int  months  =  iChronology.getMillisOfYearDate(instant);  [CE]  illegal  start  of  type  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMillisOfYearDate(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMillisOfYearDate(instant);	      int    months    =    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
221	[BUG]  [BUGGY]  int  months  =  iChronology.getMillisOfYearDateTime(instant);  [CE]  illegal  start  of  type  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMillisOfYearDateTime(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMillisOfYearDateTime(instant);	      int    months    =    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
222	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
223	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  if(months  ==  0  ||  instant!=  iChronology.getMonthOfYear(instant))  {  [CE]  illegal  start  of  expression  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  if(months  ==  0  ||  instant!=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    if(months  ==  0  ||  instant!=  iChronology.getMonthOfYear(instant))  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
224	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  if(months  ==  0  ||  instant  >>  iChronology.getMonthOfYear(instant))  {  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  if(months  ==  0  ||  instant  >>  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    if(months  ==  0  ||  instant  >>  iChronology.getMonthOfYear(instant))  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
225	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  if(months!=  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  if(months!=  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    if(months!=  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
226	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  if(months  ==  0  ||  instant  [Delete]  iChronology.getMonthOfYear(instant))  {  [CE]  ')'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  if(months  ==  0  ||  instant  [Delete]  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    if(months  ==  0  ||  instant  [Delete]  iChronology.getMonthOfYear(instant))  {	  	non-compiled	[CE]  ')'  expected	26	None	add
227	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  if(months  >=  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  if(months  >=  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    if(months  >=  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
228	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  if(months  ==  0  ||  instant  >=  iChronology.getMillisOfYear(instant))  {  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  if(months  ==  0  ||  instant  >=  iChronology.getMillisOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    if(months  ==  0  ||  instant  >=  iChronology.getMillisOfYear(instant))  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
229	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  if(months  ==  0  ||  instant  [BUGGY]  iChronology.getMonthOfYear(instant))  {  [CE]  ')'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  if(months  ==  0  ||  instant  [BUGGY]  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    if(months  ==  0  ||  instant  [BUGGY]  iChronology.getMonthOfYear(instant))  {	  	non-compiled	[CE]  ')'  expected	26	None	add
230	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  If(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  If(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    If(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {	  	non-compiled	[CE]  ';'  expected	26	None	add
231	[BUG]  [BUGGY]  if(thisYear  ==  0  ||  months  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(thisYear  ==  0  ||  months  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(thisYear  ==  0  ||  months  <  =  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    thisYear    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
232	[BUG]  [BUGGY]  if(months  ==  0  ||  thisYear!=  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  cannot  find  symbol  thisYear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  thisYear!=  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  thisYear!=  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    thisYear    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  cannot  find  symbol  thisYear	37	None	replace
233	[BUG]  [BUGGY]  if(months  ==  0  ||  thisYear  ==  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  cannot  find  symbol  thisYear  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  thisYear  ==  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  thisYear  ==  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    thisYear    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  cannot  find  symbol  thisYear	37	None	replace
234	[BUG]  [BUGGY]  if(months  ==  0  ||  thisYear  >=  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  cannot  find  symbol  thisYear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  thisYear  >=  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  thisYear  >=  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    thisYear    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  cannot  find  symbol  thisYear	37	None	replace
235	[BUG]  [BUGGY]  if(thisYear  >=  0  ||  months  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(thisYear  >=  0  ||  months  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(thisYear  >=  0  ||  months  <  =  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    thisYear    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
236	[BUG]  [BUGGY]  if(thisYear  ==  0  ||  thisMonth  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(thisYear  ==  0  ||  thisMonth  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(thisYear  ==  0  ||  thisMonth  <  =  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    thisYear    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
237	[BUG]  [BUGGY]  if(months  ==  0  ||  thisMonth  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  thisMonth  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  thisMonth  <  =  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    thisYear    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
238	[BUG]  [BUGGY]  if(months  ==  0  ||  thisYear  <  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  cannot  find  symbol  thisYear  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  thisYear  <  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  thisYear  <  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    thisYear    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  cannot  find  symbol  thisYear	37	None	replace
239	[BUG]  [BUGGY]  int  months  =  getChronology().dayOfMonth().add(instant,  thisYear);  [CE]  illegal  start  of  type  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  getChronology().dayOfMonth().add(instant,  thisYear);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  getChronology().dayOfMonth().add(instant,  thisYear);	      int    months    =    getChronology().months().add(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
240	[BUG]  [BUGGY]  int  months  =  getChronology().months().add(instant,  months);  [CE]  illegal  start  of  type  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  getChronology().months().add(instant,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  getChronology().months().add(instant,  months);	      int    months    =    getChronology().months().add(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
241	[BUG]  [BUGGY]  int  months  =  getChronology().months().add(instant,  thisYear,  months);  [CE]  illegal  start  of  type  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  getChronology().months().add(instant,  thisYear,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  getChronology().months().add(instant,  thisYear,  months);	      int    months    =    getChronology().months().add(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
242	[BUG]  [BUGGY]  int  months  =  getChronology().days().add(instant,  thisYear);  [CE]  illegal  start  of  type  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  getChronology().days().add(instant,  thisYear);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  getChronology().days().add(instant,  thisYear);	      int    months    =    getChronology().months().add(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
243	[BUG]  [BUGGY]  int  months  =  getChronology().dayOfMonth().add(instant,  months);  [CE]  illegal  start  of  type  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  getChronology().dayOfMonth().add(instant,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  getChronology().dayOfMonth().add(instant,  months);	      int    months    =    getChronology().months().add(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
244	[BUG]  [BUGGY]  int  months  =  getChronology().months().add(instant,  thisMonth);  [CE]  illegal  start  of  type  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  getChronology().months().add(instant,  thisMonth);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  getChronology().months().add(instant,  thisMonth);	      int    months    =    getChronology().months().add(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
245	[BUG]  [BUGGY]  int  months  =  iChronology().months().add(instant,  thisYear);  [CE]  illegal  start  of  type  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology().months().add(instant,  thisYear);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology().months().add(instant,  thisYear);	      int    months    =    getChronology().months().add(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
246	[BUG]  [BUGGY]  int  months  =  getChronology().weeks().add(instant,  thisYear);  [CE]  illegal  start  of  type  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  getChronology().weeks().add(instant,  thisYear);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  getChronology().weeks().add(instant,  thisYear);	      int    months    =    getChronology().months().add(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
247	[BUG]  [BUGGY]  int  months  =  getChronology().years().add(instant,  thisYear);  [CE]  illegal  start  of  type  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  getChronology().years().add(instant,  thisYear);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  getChronology().years().add(instant,  thisYear);	      int    months    =    getChronology().months().add(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
248	[BUG]  [BUGGY]  long  months  =  iChronology.getMonthOfYear(instant,  months);  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  long  months  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	long  months  =  iChronology.getMonthOfYear(instant,  months);	      long    months    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
249	[BUG]  [BUGGY]  Integer  months  =  iChronology.getMonthOfYear(instant);  [CE]  illegal  start  of  type  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  Integer  months  =  iChronology.getMonthOfYear(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	Integer  months  =  iChronology.getMonthOfYear(instant);	      long    months    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
250	[BUG]  [BUGGY]  short  months  =  iChronology.getMonthOfYear(instant);  [CE]  illegal  start  of  type  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  short  months  =  iChronology.getMonthOfYear(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	short  months  =  iChronology.getMonthOfYear(instant);	      long    months    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
251	[BUG]  [BUGGY]  for(int  months  =  iChronology.getMonthOfYear(instant);  months  >  0;  [CE]  illegal  start  of  expression  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  for(int  months  =  iChronology.getMonthOfYear(instant);  months  >  0;  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	for(int  months  =  iChronology.getMonthOfYear(instant);  months  >  0;	      long    months    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
252	[BUG]  [BUGGY]  Long  months  =  iChronology.getMonthOfYear(instant,  months);  [CE]  illegal  start  of  type  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  Long  months  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	Long  months  =  iChronology.getMonthOfYear(instant,  months);	      long    months    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
253	[BUG]  [BUGGY]  long  months  =  iChronology.getMonthOfYear(instant),  months);  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  long  months  =  iChronology.getMonthOfYear(instant),  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	long  months  =  iChronology.getMonthOfYear(instant),  months);	      long    months    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  ';'  expected	5	None	replace
254	[BUG]  [BUGGY]  if(months  ==  1)  {  if(months  ==  1)  {  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1)  {  if(months  ==  1)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    1)    {    if(months  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
255	[BUG]  [BUGGY]  if(months  ==  1)  {  if(months!=  1)  {  [CE]  illegal  start  of  expression  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1)  {  if(months!=  1)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    1)    {    if(months!=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
256	[BUG]  [BUGGY]  if(months  ==  1)  {  if(months  >=  1)  {  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1)  {  if(months  >=  1)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    1)    {    if(months  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
257	[BUG]  [BUGGY]  if(months  ==  1)  {  if(months  >>  1)  {  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1)  {  if(months  >>  1)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    1)    {    if(months  >>  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
258	[BUG]  [BUGGY]  if(months  ==  1)  {  If(months  ==  1)  {  [CE]  ';'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1)  {  If(months  ==  1)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    1)    {    If(months  ==  1)  {	  	non-compiled	[CE]  ';'  expected	11	None	add
259	[BUG]  [BUGGY]  if(months  ==  1)  {  if(months  ==  2)  {  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1)  {  if(months  ==  2)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    1)    {    if(months  ==  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
260	[BUG]  [BUGGY]  if(months  ==  1)  {  if(months  [BUGGY]  1)  {  [CE]  ')'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1)  {  if(months  [BUGGY]  1)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    1)    {    if(months  [BUGGY]  1)  {	  	non-compiled	[CE]  ')'  expected	11	None	add
261	[BUG]  [BUGGY]  if(months  ==  1)  {  if(months  [PATCH]  1)  {  [CE]  ')'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1)  {  if(months  [PATCH]  1)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    1)    {    if(months  [PATCH]  1)  {	  	non-compiled	[CE]  ')'  expected	11	None	add
262	[BUG]  [BUGGY]  if(months  ==  1)  {  if(months  [Delete]  1)  {  [CE]  ')'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1)  {  if(months  [Delete]  1)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    1)    {    if(months  [Delete]  1)  {	  	non-compiled	[CE]  ')'  expected	11	None	add
263	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  ==  0  ||  months  >  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	36	8	replace
264	[BUG]  [BUGGY]  if(instant  ==  0  ||  months  >  DateTimeConstants.MILLIS_PER_DAY)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months  >  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	36	8	replace
265	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  >=  0  ||  months  >  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	36	15	replace
266	[BUG]  [BUGGY]  if(instant  >=  0  ||  months  >  DateTimeConstants.MILLIS_PER_DAY)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months  >  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	36	15	replace
267	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	36	15	replace
268	[BUG]  [BUGGY]  if(instant  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	36	15	replace
269	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  >=  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  ==  0  ||  months  >=  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	36	8	replace
270	[BUG]  [BUGGY]  if(instant  ==  0  ||  months  >=  DateTimeConstants.MILLIS_PER_DAY)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  >=  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months  >=  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	36	8	replace
271	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  <  0  ||  months  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  <  0  ||  months  >  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	36	8	replace
272	[BUG]  [BUGGY]  if(instant  <  0  ||  months  >  DateTimeConstants.MILLIS_PER_DAY)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  <  0  ||  months  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  <  0  ||  months  >  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	36	8	replace
273	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant!=  0  ||  months  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant!=  0  ||  months  >  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	36	15	replace
274	[BUG]  [BUGGY]  if(instant!=  0  ||  months  >  DateTimeConstants.MILLIS_PER_DAY)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant!=  0  ||  months  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant!=  0  ||  months  >  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	36	15	replace
275	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  >=  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	36	15	replace
276	[BUG]  [BUGGY]  if(instant  >=  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	36	15	replace
277	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  <  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  ==  0  ||  months  <  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	36	15	replace
278	[BUG]  [BUGGY]  if(instant  ==  0  ||  months  <  DateTimeConstants.MILLIS_PER_DAY)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  <  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months  <  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	36	15	replace
279	[BUG]  [BUGGY]  int  months  =  iChronology.getDayOfMonth(instant,  months);  [CE]  illegal  start  of  type  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getDayOfMonth(instant,  months);	      int    months    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
280	[BUG]  [BUGGY]  int  months  =  iChronology.getDayOfMonth(instant,  thisYear,  months);  [CE]  illegal  start  of  type  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getDayOfMonth(instant,  thisYear,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getDayOfMonth(instant,  thisYear,  months);	      int    months    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
281	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfDay(instant,  months);  [CE]  illegal  start  of  type  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfDay(instant,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfDay(instant,  months);	      int    months    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
282	[BUG]  [BUGGY]  long  months  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  illegal  start  of  type  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  long  months  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	long  months  =  iChronology.getDayOfMonth(instant,  thisYear);	      int    months    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
283	[BUG]  [BUGGY]  int  months  =  iChronology.getDaysInYearMonth(instant,  months);  [CE]  illegal  start  of  type  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getDaysInYearMonth(instant,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getDaysInYearMonth(instant,  months);	      int    months    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
284	[BUG]  [BUGGY]  if(instant  ==  0  ||  months  <  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  <  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months  <  iChronology.getDayOfMonth())  {	  if(months    ==    0    ||    instant    <    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	31	None	replace
285	[BUG]  [BUGGY]  if(instant  >=  0  ||  months  <  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  <  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months  <  iChronology.getDayOfMonth())  {	  if(months    ==    0    ||    instant    <    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	31	None	replace
286	[BUG]  [BUGGY]  if(instant  ==  0  ||  instant  <  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  instant  <  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  instant  <  iChronology.getDayOfMonth())  {	  if(months    ==    0    ||    instant    <    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	31	None	replace
287	[BUG]  [BUGGY]  if(instant  ==  0  ||  months  <  =  iChronology.getDayOfMonth())  {  [CE]  illegal  start  of  expression  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  <  =  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months  <  =  iChronology.getDayOfMonth())  {	  if(months    ==    0    ||    instant    <    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
288	[BUG]  [BUGGY]  if(instant!=  0  ||  months  <  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant!=  0  ||  months  <  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant!=  0  ||  months  <  iChronology.getDayOfMonth())  {	  if(months    ==    0    ||    instant    <    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	31	None	replace
289	[BUG]  [BUGGY]  if(instant  >=  0  ||  instant  <  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  instant  <  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  instant  <  iChronology.getDayOfMonth())  {	  if(months    ==    0    ||    instant    <    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	31	None	replace
290	[BUG]  [BUGGY]  if(instant  >>  0  ||  months  <  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >>  0  ||  months  <  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >>  0  ||  months  <  iChronology.getDayOfMonth())  {	  if(months    ==    0    ||    instant    <    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	31	None	replace
291	[BUG]  [BUGGY]  if(instant  <  0  ||  months  <  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  <  0  ||  months  <  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  <  0  ||  months  <  iChronology.getDayOfMonth())  {	  if(months    ==    0    ||    instant    <    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	31	None	replace
292	[BUG]  [BUGGY]  if(instant  >=  0  ||  months  >=  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  >=  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months  >=  iChronology.getDayOfMonth())  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	25	None	replace
293	[BUG]  [BUGGY]  if(instant!=  0  ||  months  >=  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant!=  0  ||  months  >=  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant!=  0  ||  months  >=  iChronology.getDayOfMonth())  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	25	None	replace
294	[BUG]  [BUGGY]  if(instant  >>  0  ||  months  >=  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >>  0  ||  months  >=  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >>  0  ||  months  >=  iChronology.getDayOfMonth())  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	25	None	replace
295	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthsInYearMonth(instant);  [CE]  illegal  start  of  type  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthsInYearMonth(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthsInYearMonth(instant);	      int    months    =    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
296	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYearMonth(instant);  [CE]  illegal  start  of  type  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfYearMonth(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfYearMonth(instant);	      int    months    =    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
297	[BUG]  [BUGGY]  long  months  =  iChronology.getDaysInYearMonth(instant);  [CE]  illegal  start  of  type  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  long  months  =  iChronology.getDaysInYearMonth(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	long  months  =  iChronology.getDaysInYearMonth(instant);	      int    months    =    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
298	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthsInYearMonth(instant,  months);  [CE]  illegal  start  of  type  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthsInYearMonth(instant,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthsInYearMonth(instant,  months);	      int    months    =    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
299	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant),  months!=  thisYear)  {  [CE]  ')'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant),  months!=  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant),  months!=  thisYear)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    thisYear)    {    	non-compiled	[CE]  ')'  expected	39	None	replace
300	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getDayOfMonth(instant)!=  thisYear)  {  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getDayOfMonth(instant)!=  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getDayOfMonth(instant)!=  thisYear)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
301	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)!=  thisYear,  months)  {  [CE]  ')'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)!=  thisYear,  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)!=  thisYear,  months)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    thisYear)    {    	non-compiled	[CE]  ')'  expected	39	None	replace
302	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMillisOfYear(instant)!=  thisYear)  {  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMillisOfYear(instant)!=  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMillisOfYear(instant)!=  thisYear)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
303	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant),  months  >=  thisYear)  {  [CE]  ')'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant),  months  >=  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant),  months  >=  thisYear)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    thisYear)    {    	non-compiled	[CE]  ')'  expected	39	None	replace
304	[BUG]  [BUGGY]  if(months!=  0  ||  DateTimeUtils.getMonthOfYear(instant,  months)!=  thisYear)  {  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0  ||  DateTimeUtils.getMonthOfYear(instant,  months)!=  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=  0  ||  DateTimeUtils.getMonthOfYear(instant,  months)!=  thisYear)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
305	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant,  months)  >=  thisYear)  {  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant,  months)  >=  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant,  months)  >=  thisYear)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
306	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant),  months);  [CE]  ';'  expected  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant),  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfYear(instant),  months);	      int    months    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  ';'  expected	1	None	replace
307	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
308	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  if(months!=  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  if(months!=  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    if(months!=  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
309	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  if(months  >=  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  if(months  >=  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    if(months  >=  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
310	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  If(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  ';'  expected  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  If(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    If(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {	  	non-compiled	[CE]  ';'  expected	35	None	add
311	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  if(months  >>  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  if(months  >>  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    if(months  >>  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
312	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_MONTH)  {  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_MONTH)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_MONTH)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
313	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_Day)  {  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_Day)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_Day)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
314	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  if(months  [BUGGY]  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  ')'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  if(months  [BUGGY]  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    if(months  [BUGGY]  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {	  	non-compiled	[CE]  ')'  expected	35	None	add
315	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  instant  <  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  ==  0  ||  instant  <  months)  {	  if(months    ==    0    ||    instant    <    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	20	8	replace
316	[BUG]  [BUGGY]  if(instant  ==  0  ||  instant  <  months)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  instant  <  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  instant  <  months)  {	  if(months    ==    0    ||    instant    <    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	20	8	replace
317	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  instant  <  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  >=  0  ||  instant  <  months)  {	  if(months    ==    0    ||    instant    <    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	20	15	replace
318	[BUG]  [BUGGY]  if(instant  >=  0  ||  instant  <  months)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  instant  <  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  instant  <  months)  {	  if(months    ==    0    ||    instant    <    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	20	15	replace
319	[BUG]  [BUGGY]  if(instant  ==  0  ||  months  <  =  iChronology.getMonthOfYear(instant))  {  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  <  =  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months  <  =  iChronology.getMonthOfYear(instant))  {	  if(months    ==    0    ||    instant    <    months)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
320	[BUG]  [BUGGY]  if(instant  ==  0  ||  months  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  <  =  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months  <  =  0)  {	  if(months    ==    0    ||    instant    <    months)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
321	[BUG]  [BUGGY]  if(instant  ==  0  ||  months  <  =  thisYear)  {  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  <  =  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months  <  =  thisYear)  {	  if(months    ==    0    ||    instant    <    months)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
322	[BUG]  [BUGGY]  if(instant  ==  0  ||  months  <  =  iChronology.getMonthOfYear())  {  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  <  =  iChronology.getMonthOfYear())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months  <  =  iChronology.getMonthOfYear())  {	  if(months    ==    0    ||    instant    <    months)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
323	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  <  0  ||  months  ==  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  <  0  ||  months  ==  0)  {	  if(months    ==    0    ||    instant    <    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	20	8	replace
324	[BUG]  [BUGGY]  if(instant  <  0  ||  months  ==  0)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  <  0  ||  months  ==  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  <  0  ||  months  ==  0)  {	  if(months    ==    0    ||    instant    <    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	20	8	replace
325	[BUG]  [BUGGY]  if(instant  ==  0  ||  months  <  =  iChronology.getMillisOfDay())  {  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  <  =  iChronology.getMillisOfDay())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months  <  =  iChronology.getMillisOfDay())  {	  if(months    ==    0    ||    instant    <    months)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
326	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfDay(instant);  [CE]  illegal  start  of  type  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfDay(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfDay(instant);	      int    months    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
327	[BUG]  [BUGGY]  int  months  =  iChronology.getYearMonth(instant);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getYearMonth(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getYearMonth(instant);	      int    months    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
328	[BUG]  [BUGGY]  long  months  =  iChronology.getDayOfMonth(instant);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  long  months  =  iChronology.getDayOfMonth(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	long  months  =  iChronology.getDayOfMonth(instant);	      int    months    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
329	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)  <  0)  {  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)  <  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)  <  0)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)    <    =    0)    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
330	[BUG]  [BUGGY]  int  months  =  iChronology.getYearOfMonth(instant,  months);  [CE]  illegal  start  of  type  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getYearOfMonth(instant,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getYearOfMonth(instant,  months);	      int    months    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
331	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant);)  {  [CE]  ')'  expected  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant);)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant);)  {	  	non-compiled	[CE]  ')'  expected	26	None	add
332	[BUG]  [BUGGY]  if(instant  ==  0  ||  months  <  iChronology.getMonthOfYear())  {  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  <  iChronology.getMonthOfYear())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months  <  iChronology.getMonthOfYear())  {	  if(months    ==    0    ||    instant    <    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	31	None	replace
333	[BUG]  [BUGGY]  int  months  =  iChronology.getYearMillisOfDay(instant);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getYearMillisOfDay(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getYearMillisOfDay(instant);	      int    months    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
334	[BUG]  [BUGGY]  long  months  =  iChronology.getYearMillis(instant);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  long  months  =  iChronology.getYearMillis(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	long  months  =  iChronology.getYearMillis(instant);	      int    months    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
335	[BUG]  [BUGGY]  if(instant!=  0  ||  months  >=  iChronology.getMillisOfYear(instant))  {  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant!=  0  ||  months  >=  iChronology.getMillisOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant!=  0  ||  months  >=  iChronology.getMillisOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMillisOfYear(instant))    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
336	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  ==  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  >=  0  ||  months  ==  0)  {	  if(months    ==    0    ||    instant    <    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	20	15	replace
337	[BUG]  [BUGGY]  if(instant  >=  0  ||  months  ==  0)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  ==  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months  ==  0)  {	  if(months    ==    0    ||    instant    <    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	20	15	replace
338	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  ==  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  ==  0  ||  months  ==  0)  {	  if(months    ==    0    ||    instant    <    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	20	8	replace
339	[BUG]  [BUGGY]  if(instant  ==  0  ||  months  ==  0)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  ==  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months  ==  0)  {	  if(months    ==    0    ||    instant    <    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	20	8	replace
340	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  <  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  ==  0  ||  months  <  0)  {	  if(months    ==    0    ||    instant    <    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	20	10	replace
341	[BUG]  [BUGGY]  if(instant  ==  0  ||  months  <  0)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months  <  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months  <  0)  {	  if(months    ==    0    ||    instant    <    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	20	10	replace
342	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  <  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  >=  0  ||  months  <  0)  {	  if(months    ==    0    ||    instant    <    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	20	15	replace
343	[BUG]  [BUGGY]  if(instant  >=  0  ||  months  <  0)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  <  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months  <  0)  {	  if(months    ==    0    ||    instant    <    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	20	15	replace
344	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  if(months  ==  0  ||  instant  >=  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  if(months  ==  0  ||  instant  >=  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    if(months  ==  0  ||  instant  >=  DateTimeConstants.MILLIS_PER_DAY)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
345	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  if(months  ==  0  ||  instant  <  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  if(months  ==  0  ||  instant  <  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    if(months  ==  0  ||  instant  <  DateTimeConstants.MILLIS_PER_DAY)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
346	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  if(months  ==  0  ||  Instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  if(months  ==  0  ||  Instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    if(months  ==  0  ||  Instant  >  DateTimeConstants.MILLIS_PER_DAY)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
347	[BUG]  [BUGGY]  int  months  =  iChronology.getYearMonthOfYear(instant  +  months);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getYearMonthOfYear(instant  +  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getYearMonthOfYear(instant  +  months);	      int    months    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
348	[BUG]  [BUGGY]  Integer  months  =  iChronology.getYearMonthOfYear(instant);  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  Integer  months  =  iChronology.getYearMonthOfYear(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	Integer  months  =  iChronology.getYearMonthOfYear(instant);	      int    months    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
349	[BUG]  [BUGGY]  int  months  =  iChronology.getYearMonthOfYear(thisYear,  months);  [CE]  illegal  start  of  type  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getYearMonthOfYear(thisYear,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getYearMonthOfYear(thisYear,  months);	      int    months    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
350	[BUG]  [BUGGY]  if(instant  ==  0  ||  isYear(instant))  {  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  isYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  isYear(instant))  {	  if(months    ==    0    ||    isYear(instant))    {    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
351	[BUG]  [BUGGY]  if(months  ==  0  ||  isYear(instant)||  isMonthOfYear(instant))  {  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  isYear(instant)||  isMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  isYear(instant)||  isMonthOfYear(instant))  {	  if(months    ==    0    ||    isYear(instant))    {    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
352	[BUG]  [BUGGY]  if(months  ==  0  ||  isYear(instant)&&  isMonthOfYear(instant))  {  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  isYear(instant)&&  isMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  isYear(instant)&&  isMonthOfYear(instant))  {	  if(months    ==    0    ||    isYear(instant))    {    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
353	[BUG]  [BUGGY]  if(months  ==  1  &&  iChronology.getYear(instant)!=  getMonthOfYear(instant))  {  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1  &&  iChronology.getYear(instant)!=  getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  1  &&  iChronology.getYear(instant)!=  getMonthOfYear(instant))  {	  if(months    ==    1)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
354	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1  &&  iChronology.getMonthOfYear(instant,  months)!=  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months  ==  1  &&  iChronology.getMonthOfYear(instant,  months)!=  0)  {	  if(months    ==    1)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	12	11	replace
355	[BUG]  [BUGGY]  if(months  ==  1  &&  iChronology.getMonthOfYear(instant,  months)!=  0)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1  &&  iChronology.getMonthOfYear(instant,  months)!=  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  1  &&  iChronology.getMonthOfYear(instant,  months)!=  0)  {	  if(months    ==    1)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	12	11	replace
356	[BUG]  [BUGGY]  if(months  ==  1  &&  iChronology.getYear(instant)!=  thisYear)  {  [CE]  cannot  find  symbol  thisYear  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1  &&  iChronology.getYear(instant)!=  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  1  &&  iChronology.getYear(instant)!=  thisYear)  {	  if(months    ==    1)    {    	non-compiled	[CE]  cannot  find  symbol  thisYear	12	None	replace
357	[BUG]  [BUGGY]  if(instant  >=  0  ||  months  >>  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  >>  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months  >>  iChronology.getDayOfMonth())  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	25	None	replace
358	[BUG]  [BUGGY]  Integer  months  =  iChronology.getMonthOfYear(instant,  months);  [CE]  illegal  start  of  type  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  Integer  months  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	Integer  months  =  iChronology.getMonthOfYear(instant,  months);	      int    months    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
359	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(thisYear,  months);  [CE]  illegal  start  of  type  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfYear(thisYear,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfYear(thisYear,  months);	      int    months    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
360	[BUG]  [BUGGY]  float  months  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  illegal  start  of  type  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  float  months  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	float  months  =  iChronology.getMonthOfYear(instant,  thisYear);	      int    months    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
361	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  months)  {  If(months  ==  0  ||  instant  >=  months)  {  [CE]  ';'  expected  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  months)  {  If(months  ==  0  ||  instant  >=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    months)    {    If(months  ==  0  ||  instant  >=  months)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
362	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  months)  {  if(months  >=  0  ||  instant  >=  months)  {  [CE]  illegal  start  of  expression  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  months)  {  if(months  >=  0  ||  instant  >=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    months)    {    if(months  >=  0  ||  instant  >=  months)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
363	[BUG]  [BUGGY]  if(instant  >>  0  ||  months  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >>  0  ||  months  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >>  0  ||  months  <  =  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
364	[BUG]  [BUGGY]  if(instant  <  0  ||  months  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  <  0  ||  months  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  <  0  ||  months  <  =  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
365	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  ==  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  >=  0  ||  months  ==  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	34	15	replace
366	[BUG]  [BUGGY]  if(instant  >=  0  ||  months  ==  DateTimeConstants.MILLIS_PER_DAY)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  ==  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months  ==  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	34	15	replace
367	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  ==  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months  ==  0  ||  instant  ==  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	34	8	replace
368	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  ==  DateTimeConstants.MILLIS_PER_DAY)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  ==  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  ==  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	34	8	replace
369	[BUG]  [BUGGY]  if(months!=  0)  {  when(months!=  0)  {  [CE]  ';'  expected  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0)  {  when(months!=  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=    0)    {    when(months!=  0)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
370	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  if(months  {  0  ||  instant  <  months)  {  [CE]  ')'  expected  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  if(months  {  0  ||  instant  <  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    <    months)    {    if(months  {  0  ||  instant  <  months)  {	  	non-compiled	[CE]  ')'  expected	19	None	add
371	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  if(months  ==  0  ||  instant  <  weeks)  {  [CE]  illegal  start  of  expression  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  if(months  ==  0  ||  instant  <  weeks)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    <    months)    {    if(months  ==  0  ||  instant  <  weeks)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
372	[BUG]  [BUGGY]  int  months  =  iChronology.getYearMonthMillisOfDay(instant);  [CE]  illegal  start  of  type  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getYearMonthMillisOfDay(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getYearMonthMillisOfDay(instant);	      int    months    =    iChronology.getYearMonthMillis(instant);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
373	[BUG]  [BUGGY]  int  months  =  iChronology.getYearMonthMillis(thisYear,  months);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getYearMonthMillis(thisYear,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getYearMonthMillis(thisYear,  months);	      int    months    =    iChronology.getYearMonthMillis(instant);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
374	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  months)-  1;  [CE]  illegal  start  of  type  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  months)-  1;  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  months)-  1;	      int    months    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
375	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  months)+  1;  [CE]  illegal  start  of  type  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  months)+  1;  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  months)+  1;	      int    months    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
376	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  months  +  1);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  months  +  1);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  months  +  1);	      int    months    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
377	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant  +  months);  [CE]  illegal  start  of  type  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant  +  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfYear(instant  +  months);	      int    months    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
378	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  iMax)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  iMax)  {	  if(months    ==    0    ||    iChronology.getMonthOfYear(instant)!=    thisYear)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	41	15	replace
379	[BUG]  [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  iMax)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  iMax)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  iMax)  {	  if(months    ==    0    ||    iChronology.getMonthOfYear(instant)!=    thisYear)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	41	15	replace
380	[BUG]  [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  thisWeekMonth)  {  [CE]  cannot  find  symbol  thisWeekMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  thisWeekMonth)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  thisWeekMonth)  {	  if(months    ==    0    ||    iChronology.getMonthOfYear(instant)!=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol  thisWeekMonth	41	None	replace
381	[BUG]  [BUGGY]  if(instant  >>  0  ||  months  >  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >>  0  ||  months  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >>  0  ||  months  >  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	36	None	replace
382	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >=  iChronology)  {	  if(months    ==    0    ||    instant    >=    thisYear)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	17	None	replace
383	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iDayOfMonth)  {  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iDayOfMonth)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >=  iDayOfMonth)  {	  if(months    ==    0    ||    instant    >=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	17	None	replace
384	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.dayOfMonth)  {  [CE]  cannot  find  symbol  dayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.dayOfMonth)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >=  iChronology.dayOfMonth)  {	  if(months    ==    0    ||    instant    >=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	17	None	replace
385	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear())  {  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear())  {	  if(months    ==    0    ||    instant    >=    thisYear)    {    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	17	None	replace
386	[BUG]  [BUGGY]  Integer  months  =  iChronology.getMillisOfYear(instant);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  Integer  months  =  iChronology.getMillisOfYear(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	Integer  months  =  iChronology.getMillisOfYear(instant);	      int    months    =    iChronology.getMillisOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
387	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months!=  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {	  if(months!=    0)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	14	15	replace
388	[BUG]  [BUGGY]  if(months!=  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {	  if(months!=    0)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	14	15	replace
389	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months!=  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {	  if(months!=    0)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	14	15	replace
390	[BUG]  [BUGGY]  if(months!=  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {	  if(months!=    0)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	14	15	replace
391	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0  ||  instant  >=  iChronology.getMonthOfYear(instant,  months))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months!=  0  ||  instant  >=  iChronology.getMonthOfYear(instant,  months))  {	  if(months!=    0)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	14	15	replace
392	[BUG]  [BUGGY]  if(months!=  0  ||  instant  >=  iChronology.getMonthOfYear(instant,  months))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0  ||  instant  >=  iChronology.getMonthOfYear(instant,  months))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=  0  ||  instant  >=  iChronology.getMonthOfYear(instant,  months))  {	  if(months!=    0)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	14	15	replace
393	[BUG]  [BUGGY]  if(months!=  0  ||  instant  >=  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0  ||  instant  >=  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=  0  ||  instant  >=  iChronology.getDayOfMonth())  {	  if(months!=    0)    {    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	14	None	replace
394	[BUG]  [BUGGY]  if(months!=  0  ||  instant  >=  iChronology.getMillisOfYear(instant))  {  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0  ||  instant  >=  iChronology.getMillisOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=  0  ||  instant  >=  iChronology.getMillisOfYear(instant))  {	  if(months!=    0)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
395	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0  ||  instant  >=  iChronology.getDayOfMonth(instant,  months))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months!=  0  ||  instant  >=  iChronology.getDayOfMonth(instant,  months))  {	  if(months!=    0)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	14	15	replace
396	[BUG]  [BUGGY]  if(months!=  0  ||  instant  >=  iChronology.getDayOfMonth(instant,  months))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0  ||  instant  >=  iChronology.getDayOfMonth(instant,  months))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=  0  ||  instant  >=  iChronology.getDayOfMonth(instant,  months))  {	  if(months!=    0)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	14	15	replace
397	[BUG]  [BUGGY]  if(instant  >>  0  ||  months  >=  iChronology.getDayOfMonth(instant))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >>  0  ||  months  >=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >>  0  ||  months  >=  iChronology.getDayOfMonth(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	30	None	replace
398	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  <  0  ||  months  >=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  <  0  ||  months  >=  iChronology.getDayOfMonth(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	30	9	replace
399	[BUG]  [BUGGY]  if(instant  <  0  ||  months  >=  iChronology.getDayOfMonth(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  <  0  ||  months  >=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  <  0  ||  months  >=  iChronology.getDayOfMonth(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	30	9	replace
400	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  <  0  ||  months  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  <  0  ||  months  >=  iChronology.getMonthOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	9	replace
401	[BUG]  [BUGGY]  if(instant  <  0  ||  months  >=  iChronology.getMonthOfYear(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  <  0  ||  months  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  <  0  ||  months  >=  iChronology.getMonthOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	9	replace
402	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  >=  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	15	replace
403	[BUG]  [BUGGY]  if(instant  >=  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	15	replace
404	[BUG]  [BUGGY]  if(instant  >>  0  ||  months  ==  0)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >>  0  ||  months  ==  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >>  0  ||  months  ==  0)  {	  if(months    ==    0    ||    instant    >=    months)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	16	None	replace
405	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant!=  0  ||  months  ==  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant!=  0  ||  months  ==  0)  {	  if(months    ==    0    ||    instant    >=    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	15	replace
406	[BUG]  [BUGGY]  if(instant!=  0  ||  months  ==  0)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant!=  0  ||  months  ==  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant!=  0  ||  months  ==  0)  {	  if(months    ==    0    ||    instant    >=    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	15	replace
407	[BUG]  [BUGGY]  if(instant  ==  0  ||  months!=  iChronology.getMonthOfYear())  {  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  ==  0  ||  months!=  iChronology.getMonthOfYear())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  ==  0  ||  months!=  iChronology.getMonthOfYear())  {	  if(months    ==    0    ||    instant!=    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	28	None	replace
408	[BUG]  [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getMonthOfYear(instant);  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getMonthOfYear(instant);  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    1)    {    int  months  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
409	[BUG]  [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getMonthOfYear(instant,  months);  [CE]  illegal  start  of  expression  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    1)    {    int  months  =  iChronology.getMonthOfYear(instant,  months);	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
410	[BUG]  [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getMillisOfYear(instant);  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getMillisOfYear(instant);  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    1)    {    int  months  =  iChronology.getMillisOfYear(instant);	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
411	[BUG]  [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getMillisOfYearDateTime(instant);  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getMillisOfYearDateTime(instant);  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    1)    {    int  months  =  iChronology.getMillisOfYearDateTime(instant);	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
412	[BUG]  [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getYearMonthOfYear(instant);  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getYearMonthOfYear(instant);  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    1)    {    int  months  =  iChronology.getYearMonthOfYear(instant);	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
413	[BUG]  [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getMonthOfYearDateTime(instant);  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getMonthOfYearDateTime(instant);  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    1)    {    int  months  =  iChronology.getMonthOfYearDateTime(instant);	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
414	[BUG]  [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getYearMonthMillis(instant);  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getYearMonthMillis(instant);  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    1)    {    int  months  =  iChronology.getYearMonthMillis(instant);	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
415	[BUG]  [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getMonthOfYearDateTime(instant,  months);  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getMonthOfYearDateTime(instant,  months);  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    1)    {    int  months  =  iChronology.getMonthOfYearDateTime(instant,  months);	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
416	[BUG]  [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getMonthOfYear(instant).months;  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getMonthOfYear(instant).months;  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    1)    {    int  months  =  iChronology.getMonthOfYear(instant).months;	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
417	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getYear(instant)!=  thisYear)  {  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getYear(instant)!=  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getYear(instant)!=  thisYear)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
418	[BUG]  [BUGGY]  if(months  ==  0  &&  DateTimeUtils.getMonthOfYear(instant)!=  thisYear)  {  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  &&  DateTimeUtils.getMonthOfYear(instant)!=  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  &&  DateTimeUtils.getMonthOfYear(instant)!=  thisYear)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
419	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  if(months  ==  0  ||  instant  >=  iChronology.getDayOfYear(instant))  {  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  if(months  ==  0  ||  instant  >=  iChronology.getDayOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    if(months  ==  0  ||  instant  >=  iChronology.getDayOfYear(instant))  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
420	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant);)  {  [CE]  ')'  expected  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant);)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant);)  {	  	non-compiled	[CE]  ')'  expected	29	None	add
421	[BUG]  [BUGGY]  if(months  ==  0)  {  long  months  =  iChronology.getMonthOfYear(instant);  }  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0)  {  long  months  =  iChronology.getMonthOfYear(instant);  }  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0)  {  long  months  =  iChronology.getMonthOfYear(instant);  }	      long    months    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
422	[BUG]  [BUGGY]  if(months  ==  0)  {  long  months  =  iChronology.getMonthOfYear(instant);  }  else  {  add(instant,  months);  }  [CE]  illegal  start  of  type  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0)  {  long  months  =  iChronology.getMonthOfYear(instant);  }  else  {  add(instant,  months);  }  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0)  {  long  months  =  iChronology.getMonthOfYear(instant);  }  else  {  add(instant,  months);  }	      long    months    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
423	[BUG]  [BUGGY]  if(months  ==  0)  {  long  months  =  iChronology.getMonthOfYear(instant);  }  else  {  int  months  =  iChronology.getMonthOfYear(instant,  months);  }  [CE]  illegal  start  of  type  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0)  {  long  months  =  iChronology.getMonthOfYear(instant);  }  else  {  int  months  =  iChronology.getMonthOfYear(instant,  months);  }  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0)  {  long  months  =  iChronology.getMonthOfYear(instant);  }  else  {  int  months  =  iChronology.getMonthOfYear(instant,  months);  }	      long    months    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
424	[BUG]  [BUGGY]  if(months  ==  0)  {  long  months  =  iChronology.getMonthOfYear(instant);  }  else  {  return  months;  }  [CE]  illegal  start  of  type  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0)  {  long  months  =  iChronology.getMonthOfYear(instant);  }  else  {  return  months;  }  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0)  {  long  months  =  iChronology.getMonthOfYear(instant);  }  else  {  return  months;  }	      long    months    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
425	[BUG]  [BUGGY]  if(months  ==  0  &&  thisYear  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  &&  thisYear  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  &&  thisYear  <  =  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    thisYear    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
426	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant,  months)!=  months)  {  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant,  months)!=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant,  months)!=  months)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    months)    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
427	[BUG]  [BUGGY]  if(months  ==  0  &&  DateTimeUtils.getMonthOfYear(instant)!=  months)  {  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  &&  DateTimeUtils.getMonthOfYear(instant)!=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  &&  DateTimeUtils.getMonthOfYear(instant)!=  months)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    months)    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
428	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant  +  months)!=  months)  {  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant  +  months)!=  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant  +  months)!=  months)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    months)    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
429	[BUG]  [BUGGY]  if(months  <  =  0  ||  instant  >  iChronology.getMonthOfYear(instant))  {  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  <  =  0  ||  instant  >  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  <  =  0  ||  instant  >  iChronology.getMonthOfYear(instant))  {	  if(months    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
430	[BUG]  [BUGGY]  if(months  <  =  0  ||  instant  >  iChronology.getDayOfMonth(instant))  {  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  <  =  0  ||  instant  >  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  <  =  0  ||  instant  >  iChronology.getDayOfMonth(instant))  {	  if(months    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
431	[BUG]  [BUGGY]  if(months  <  =  0  ||  instant  >=  iChronology.getDayOfMonth())  {  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  <  =  0  ||  instant  >=  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  <  =  0  ||  instant  >=  iChronology.getDayOfMonth())  {	  if(months    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
432	[BUG]  [BUGGY]  if(months  <  =  0  ||  instant  >  iChronology.getDayOfMonth(instant,  months))  {  [CE]  illegal  start  of  expression  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  <  =  0  ||  instant  >  iChronology.getDayOfMonth(instant,  months))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  <  =  0  ||  instant  >  iChronology.getDayOfMonth(instant,  months))  {	  if(months    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
433	[BUG]  [BUGGY]  if(months  <  =  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [CE]  illegal  start  of  expression  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  <  =  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  <  =  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {	  if(months    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
434	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYearMonth(instant,  months);  [CE]  illegal  start  of  type  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfYearMonth(instant,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfYearMonth(instant,  months);	      int    months    =    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
435	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYearDate(instant);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfYearDate(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfYearDate(instant);	      int    months    =    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
436	[BUG]  [BUGGY]  Integer  monthToUse  =  iChronology.getMonthOfYear(instant);  [CE]  illegal  start  of  type  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  Integer  monthToUse  =  iChronology.getMonthOfYear(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	Integer  monthToUse  =  iChronology.getMonthOfYear(instant);	      int    monthToUse    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
437	[BUG]  [BUGGY]  int  months  =  getMonthOfYear(instant  +  months);  [CE]  illegal  start  of  type  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  getMonthOfYear(instant  +  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  getMonthOfYear(instant  +  months);	      int    months    =    getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
438	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYearLength(instant);  [CE]  illegal  start  of  type  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfYearLength(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfYearLength(instant);	      int    months    =    getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
439	[BUG]  [BUGGY]  int  months  =  getMonthOfYear(instant  -  months);  [CE]  illegal  start  of  type  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  getMonthOfYear(instant  -  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  getMonthOfYear(instant  -  months);	      int    months    =    getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
440	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iMinute)  {  [CE]  cannot  find  symbol  iMinute  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iMinute)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >=  iMinute)  {	  if(months    ==    0    ||    instant    >=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol  iMinute	17	None	replace
441	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  datePart)  {  [CE]  cannot  find  symbol  datePart  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  datePart)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >=  datePart)  {	  if(months    ==    0    ||    instant    >=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol  datePart	17	None	replace
442	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iJoinMonth)  {  [CE]  cannot  find  symbol  iJoinMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iJoinMonth)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >=  iJoinMonth)  {	  if(months    ==    0    ||    instant    >=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol  iJoinMonth	17	None	replace
443	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iMonth)  {  [CE]  cannot  find  symbol  iMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iMonth)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >=  iMonth)  {	  if(months    ==    0    ||    instant    >=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol  iMonth	17	None	replace
444	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  years);  [CE]  illegal  start  of  type  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  years);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  years);	      int    months    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
445	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  days);  [CE]  illegal  start  of  type  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  days);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  days);	      int    months    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
446	[BUG]  [BUGGY]  if(instant  >=  0  ||  months  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  <  =  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months  <  =  0)  {	  if(months    ==    0    ||    instant    <    months)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
447	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  <  1)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  >=  0  ||  months  <  1)  {	  if(months    ==    0    ||    instant    <    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	20	15	replace
448	[BUG]  [BUGGY]  if(instant  >=  0  ||  months  <  1)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  <  1)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months  <  1)  {	  if(months    ==    0    ||    instant    <    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	20	15	replace
449	[BUG]  [BUGGY]  if(instant  >=  0  ||  months  <  =  thisYear)  {  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  <  =  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months  <  =  thisYear)  {	  if(months    ==    0    ||    instant    <    months)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
450	[BUG]  [BUGGY]  if(instant  >=  0  ||  months  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  <  =  1)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months  <  =  1)  {	  if(months    ==    0    ||    instant    <    months)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
451	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  <  0  ||  months  >=  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  <  0  ||  months  >=  0)  {	  if(months    ==    0    ||    instant    <    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	20	13	replace
452	[BUG]  [BUGGY]  if(instant  <  0  ||  months  >=  0)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  <  0  ||  months  >=  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  <  0  ||  months  >=  0)  {	  if(months    ==    0    ||    instant    <    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	20	13	replace
453	[BUG]  [BUGGY]  if(months  ==  0  ||  isYear(instant)&&  isYear(instant))  {  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  isYear(instant)&&  isYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  isYear(instant)&&  isYear(instant))  {	  if(months    ==    0    ||    isYear(instant))    {    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
454	[BUG]  [BUGGY]  if(months  ==  0  ||  isLeapMonth(instant))  {  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  isLeapMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  isLeapMonth(instant))  {	  if(months    ==    0    ||    isYear(instant))    {    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
455	[BUG]  [BUGGY]  int  months  =  getChronology().months().add(instant,  thisMonth,  thisYear);  [CE]  illegal  start  of  type  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  getChronology().months().add(instant,  thisMonth,  thisYear);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  getChronology().months().add(instant,  thisMonth,  thisYear);	      int    months    =    getChronology().months().add(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
456	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYearDateTime(instant);  [CE]  illegal  start  of  type  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthOfYearDateTime(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthOfYearDateTime(instant);	      int    months    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
457	[BUG]  [BUGGY]  if(instant  <  0  ||  months!=  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  <  0  ||  months!=  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  <  0  ||  months!=  iChronology.getDayOfMonth())  {	  if(months    ==    0    ||    instant!=    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	28	None	replace
458	[BUG]  [BUGGY]  if(instant  [Delete]  0  ||  months!=  iChronology.getDayOfMonth())  {  [CE]  ')'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  [Delete]  0  ||  months!=  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  [Delete]  0  ||  months!=  iChronology.getDayOfMonth())  {	  if(months    ==    0    ||    instant!=    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  ')'  expected	28	None	replace
459	[BUG]  [BUGGY]  if(instant  <  0  ||  months  ==  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  <  0  ||  months  ==  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  <  0  ||  months  ==  iChronology.getDayOfMonth())  {	  if(months    ==    0    ||    instant!=    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	28	None	replace
460	[BUG]  [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  iDayOfMonth)  {  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  iDayOfMonth)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  iDayOfMonth)  {	  if(months    ==    0    ||    iChronology.getMonthOfYear(instant)!=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	41	None	replace
461	[BUG]  [BUGGY]  if(months  <  0  ||  DateTimeUtils.getMonthOfYear(instant)  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  <  0  ||  DateTimeUtils.getMonthOfYear(instant)  <  =  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  <  0  ||  DateTimeUtils.getMonthOfYear(instant)  <  =  0)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
462	[BUG]  [BUGGY]  if(months  <  =  0  ||  DateTimeUtils.getMonthOfYear(instant)  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  <  =  0  ||  DateTimeUtils.getMonthOfYear(instant)  <  =  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  <  =  0  ||  DateTimeUtils.getMonthOfYear(instant)  <  =  0)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
463	[BUG]  [BUGGY]  if(months!=  0  ||  DateTimeUtils.getMonthOfYear(instant)  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0  ||  DateTimeUtils.getMonthOfYear(instant)  <  =  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=  0  ||  DateTimeUtils.getMonthOfYear(instant)  <  =  0)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
464	[BUG]  [BUGGY]  int  months  =  getMonthOfYear(instant,  thisYear);  [CE]  illegal  start  of  type  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  getMonthOfYear(instant,  thisYear);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  getMonthOfYear(instant,  thisYear);	      int    months    =    getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
465	[BUG]  [BUGGY]  long  months  =  getMonthOfYear(instant);  [CE]  illegal  start  of  type  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  long  months  =  getMonthOfYear(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	long  months  =  getMonthOfYear(instant);	      int    months    =    getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
466	[BUG]  [BUGGY]  int  months  =  iChronology.getYearMonthOfYear(instant,  thisYear);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getYearMonthOfYear(instant,  thisYear);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getYearMonthOfYear(instant,  thisYear);	      int    months    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
467	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthMillisOfDay(instant);  [CE]  illegal  start  of  type  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getMonthMillisOfDay(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getMonthMillisOfDay(instant);	      int    months    =    iChronology.getYearMonthMillis(instant);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
468	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getDayOfMonth(instant,  months)!=  thisYear)  {  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getDayOfMonth(instant,  months)!=  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getDayOfMonth(instant,  months)!=  thisYear)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
469	[BUG]  [BUGGY]  if(months!=  0  ||  DateTimeUtils.getMonthOfYear(instant)!=  thisYear)  {  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0  ||  DateTimeUtils.getMonthOfYear(instant)!=  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=  0  ||  DateTimeUtils.getMonthOfYear(instant)!=  thisYear)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
470	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.currentTimeMillis()!=  thisYear)  {  [CE]  cannot  find  symbol  thisYear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.currentTimeMillis()!=  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.currentTimeMillis()!=  thisYear)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    thisYear)    {    	non-compiled	[CE]  cannot  find  symbol  thisYear	39	None	replace
471	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  if(months  ==  0  ||  instant  >=  iChronology.getYearOfYear(instant))  {  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  if(months  ==  0  ||  instant  >=  iChronology.getYearOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    if(months  ==  0  ||  instant  >=  iChronology.getYearOfYear(instant))  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
472	[BUG]  [BUGGY]  int  months  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  illegal  start  of  type  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getDaysInYearMonth(instant,  thisYear);	      int    months    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
473	[BUG]  [BUGGY]  int  months  =  iChronology.getDaysOfMonth(instant,  thisYear,  months);  [CE]  illegal  start  of  type  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  int  months  =  iChronology.getDaysOfMonth(instant,  thisYear,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	int  months  =  iChronology.getDaysOfMonth(instant,  thisYear,  months);	      int    months    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
474	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  <  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  <  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	36	15	replace
475	[BUG]  [BUGGY]  if(instant  <  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  <  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  <  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	36	15	replace
476	[BUG]  [BUGGY]  if(months!=  0  ||  iChronology.getMonthOfYear(instant)  ==  thisYear)  {  [CE]  cannot  find  symbol  thisYear  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0  ||  iChronology.getMonthOfYear(instant)  ==  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=  0  ||  iChronology.getMonthOfYear(instant)  ==  thisYear)  {	  if(months!=    0)    {    	non-compiled	[CE]  cannot  find  symbol  thisYear	14	None	replace
477	[BUG]  [BUGGY]  if(months!=  0  ||  iChronology.getMonthOfYear(instant)!=  thisYear)  {  [CE]  cannot  find  symbol  thisYear  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0  ||  iChronology.getMonthOfYear(instant)!=  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=  0  ||  iChronology.getMonthOfYear(instant)!=  thisYear)  {	  if(months!=    0)    {    	non-compiled	[CE]  cannot  find  symbol  thisYear	14	None	replace
478	[BUG]  [BUGGY]  if(months!=  0  ||  iChronology.getMonthOfYear(instant)  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0  ||  iChronology.getMonthOfYear(instant)  <  =  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=  0  ||  iChronology.getMonthOfYear(instant)  <  =  0)  {	  if(months!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
479	[BUG]  [BUGGY]  if(months!=  0  &&  iChronology.getMonthOfYear(instant)  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0  &&  iChronology.getMonthOfYear(instant)  <  =  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=  0  &&  iChronology.getMonthOfYear(instant)  <  =  0)  {	  if(months!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
480	[BUG]  [BUGGY]  if(months!=  0  &&  iChronology.getMonthOfYear(instant,  months)  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0  &&  iChronology.getMonthOfYear(instant,  months)  <  =  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=  0  &&  iChronology.getMonthOfYear(instant,  months)  <  =  0)  {	  if(months!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
481	[BUG]  [BUGGY]  if(months!=  0  &&  iChronology.getMonthOfYear(instant)!=  thisYear)  {  [CE]  cannot  find  symbol  thisYear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0  &&  iChronology.getMonthOfYear(instant)!=  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=  0  &&  iChronology.getMonthOfYear(instant)!=  thisYear)  {	  if(months!=    0)    {    	non-compiled	[CE]  cannot  find  symbol  thisYear	14	None	replace
482	[BUG]  [BUGGY]  if(months!=  0  &&  iChronology.getMonthOfYear(instant)  ==  thisYear)  {  [CE]  cannot  find  symbol  thisYear  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months!=  0  &&  iChronology.getMonthOfYear(instant)  ==  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=  0  &&  iChronology.getMonthOfYear(instant)  ==  thisYear)  {	  if(months!=    0)    {    	non-compiled	[CE]  cannot  find  symbol  thisYear	14	None	replace
483	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  <  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  <  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	30	15	replace
484	[BUG]  [BUGGY]  if(instant  <  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  <  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  <  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	30	15	replace
485	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  <  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  <  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	15	replace
486	[BUG]  [BUGGY]  if(instant  <  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  <  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  <  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMonthOfYear(instant))    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	15	replace
487	[BUG]  [BUGGY]  byte  months  =  iChronology.getMonthOfYear(instant);  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  byte  months  =  iChronology.getMonthOfYear(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	byte  months  =  iChronology.getMonthOfYear(instant);	      long    months    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
488	[BUG]  [BUGGY]  long  months  =  iChronology.getYearMonthOfYear(instant,  months);  [CE]  illegal  start  of  type  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  long  months  =  iChronology.getYearMonthOfYear(instant,  months);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	long  months  =  iChronology.getYearMonthOfYear(instant,  months);	      long    months    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
489	[BUG]  [BUGGY]  if(instant  <  0  ||  months  >=  iChronology.getMillisOfYear(instant))  {  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  <  0  ||  months  >=  iChronology.getMillisOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  <  0  ||  months  >=  iChronology.getMillisOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMillisOfYear(instant))    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
490	[BUG]  [BUGGY]  if(instant  >>  0  ||  months  >=  iChronology.getMillisOfYear(instant))  {  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >>  0  ||  months  >=  iChronology.getMillisOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >>  0  ||  months  >=  iChronology.getMillisOfYear(instant))  {	  if(months    ==    0    ||    instant    >=    iChronology.getMillisOfYear(instant))    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
491	[BUG]  [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    1)    {    int  months  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
492	[BUG]  [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getMonthOfYear(instant).months();  [CE]  illegal  start  of  expression  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getMonthOfYear(instant).months();  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    1)    {    int  months  =  iChronology.getMonthOfYear(instant).months();	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
493	[BUG]  [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getDaysInYearMonth(instant);  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getDaysInYearMonth(instant);  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    1)    {    int  months  =  iChronology.getDaysInYearMonth(instant);	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
494	[BUG]  [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getYearsInYearMonth(instant);  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1)  {  int  months  =  iChronology.getYearsInYearMonth(instant);  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    1)    {    int  months  =  iChronology.getYearsInYearMonth(instant);	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
495	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)!=  28)  {  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)!=  28)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)!=  28)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    months)    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
496	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)!=  12)  {  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)!=  12)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)!=  12)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    months)    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
497	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)!=  31)  {  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)!=  31)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)!=  31)  {	  if(months    ==    0    ||    DateTimeUtils.getMonthOfYear(instant)!=    months)    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
498	[BUG]  [BUGGY]  if(months  ==  0  ||  months  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  months  <  =  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  months  <  =  0)  {	  if(months    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
499	[BUG]  [BUGGY]  if(months  <  =  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  <  =  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  <  =  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
500	[BUG]  [BUGGY]  if(months  <  =  0  ||  instant  >  DateTimeUtils.getMonthOfYear(instant))  {  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  <  =  0  ||  instant  >  DateTimeUtils.getMonthOfYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  <  =  0  ||  instant  >  DateTimeUtils.getMonthOfYear(instant))  {	  if(months    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
501	[BUG]  [BUGGY]  if(months  <  =  0  ||  instant  >  DateTimeUtils.getMonthOfYear(instant,  months))  {  [CE]  illegal  start  of  expression  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  <  =  0  ||  instant  >  DateTimeUtils.getMonthOfYear(instant,  months))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  <  =  0  ||  instant  >  DateTimeUtils.getMonthOfYear(instant,  months))  {	  if(months    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
502	[BUG]  [BUGGY]  if(months  <  =  0  ||  instant  >  DateTimeUtils.currentTimeMillis())  {  [CE]  illegal  start  of  expression  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  <  =  0  ||  instant  >  DateTimeUtils.currentTimeMillis())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  <  =  0  ||  instant  >  DateTimeUtils.currentTimeMillis())  {	  if(months    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
503	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  >=  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  >=  0  ||  months  >=  0)  {	  if(months    ==    0    ||    instant    >=    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	15	replace
504	[BUG]  [BUGGY]  if(instant  >=  0  ||  months  >=  0)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  >=  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months  >=  0)  {	  if(months    ==    0    ||    instant    >=    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	15	replace
505	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  >=  1)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  >=  0  ||  months  >=  1)  {	  if(months    ==    0    ||    instant    >=    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	15	replace
506	[BUG]  [BUGGY]  if(instant  >=  0  ||  months  >=  1)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  >=  1)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months  >=  1)  {	  if(months    ==    0    ||    instant    >=    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	15	replace
507	[BUG]  [BUGGY]  if(instant  >=  0  ||  months  >>  0)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months  >>  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months  >>  0)  {	  if(months    ==    0    ||    instant    >=    months)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	16	None	replace
508	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months!=  1)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(instant  >=  0  ||  months!=  1)  {	  if(months    ==    0    ||    instant    >=    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	15	replace
509	[BUG]  [BUGGY]  if(instant  >=  0  ||  months!=  1)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months!=  1)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months!=  1)  {	  if(months    ==    0    ||    instant    >=    months)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	15	replace
510	[BUG]  [BUGGY]  if(instant  >=  0  ||  months!=  )  {  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >=  0  ||  months!=  )  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >=  0  ||  months!=  )  {	  if(months    ==    0    ||    instant    >=    months)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
511	[BUG]  [BUGGY]  if(instant  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  <  =  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
512	[BUG]  [BUGGY]  if(instant  >>  0  ||  instant  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  >>  0  ||  instant  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  >>  0  ||  instant  <  =  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    instant    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
513	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  if(months  ==  0  ||  instant  >  DateTimeConstants.MIN_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  if(months  ==  0  ||  instant  >  DateTimeConstants.MIN_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    >    DateTimeConstants.MILLIS_PER_DAY)    {    if(months  ==  0  ||  instant  >  DateTimeConstants.MIN_PER_DAY)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
514	[BUG]  [BUGGY]  if(months  ==  1  &&  iChronology.getMonthOfYear(instant)  <  =  thisYear)  {  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1  &&  iChronology.getMonthOfYear(instant)  <  =  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  1  &&  iChronology.getMonthOfYear(instant)  <  =  thisYear)  {	  if(months    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
515	[BUG]  [BUGGY]  if(months  ==  1  &&  iChronology.getMonthOfYear(instant)!=  getYear(instant))  {  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1  &&  iChronology.getMonthOfYear(instant)!=  getYear(instant))  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  1  &&  iChronology.getMonthOfYear(instant)!=  getYear(instant))  {	  if(months    ==    1)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
516	[BUG]  [BUGGY]  if(months  ==  1  &&  iChronology.getMillisOfYear(instant)  <  =  thisYear)  {  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1  &&  iChronology.getMillisOfYear(instant)  <  =  thisYear)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  1  &&  iChronology.getMillisOfYear(instant)  <  =  thisYear)  {	  if(months    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
517	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1  &&  iChronology.getMonthOfYear(instant,  months)>  iMax)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months  ==  1  &&  iChronology.getMonthOfYear(instant,  months)>  iMax)  {	  if(months    ==    1)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	12	8	replace
518	[BUG]  [BUGGY]  if(months  ==  1  &&  iChronology.getMonthOfYear(instant,  months)>  iMax)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1  &&  iChronology.getMonthOfYear(instant,  months)>  iMax)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  1  &&  iChronology.getMonthOfYear(instant,  months)>  iMax)  {	  if(months    ==    1)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	12	8	replace
519	[BUG]  [BUGGY]  if(months  ==  1  &&  iChronology.getMonthOfYear(instant)  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  1  &&  iChronology.getMonthOfYear(instant)  <  =  0)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  1  &&  iChronology.getMonthOfYear(instant)  <  =  0)  {	  if(months    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
520	[BUG]  [BUGGY]  if(instant  <  0  ||  months  >=  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  <  0  ||  months  >=  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  <  0  ||  months  >=  iChronology.getDayOfMonth())  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	25	None	replace
521	[BUG]  [BUGGY]  if(instant  [Delete]  0  ||  months  >=  iChronology.getDayOfMonth())  {  [CE]  ')'  expected  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(instant  [Delete]  0  ||  months  >=  iChronology.getDayOfMonth())  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(instant  [Delete]  0  ||  months  >=  iChronology.getDayOfMonth())  {	  if(months    ==    0    ||    instant    >=    iChronology.getDayOfMonth())    {    	non-compiled	[CE]  ')'  expected	25	None	replace
522	[BUG]  [BUGGY]  if(months  <  =  0  ||  thisYear  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  <  =  0  ||  thisYear  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  <  =  0  ||  thisYear  <  =  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    thisYear    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
523	[BUG]  [BUGGY]  if(thisYear  <  =  0  ||  months  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(thisYear  <  =  0  ||  months  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(thisYear  <  =  0  ||  months  <  =  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    thisYear    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
524	[BUG]  [BUGGY]  if(months  >=  0  ||  thisYear  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  >=  0  ||  thisYear  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  >=  0  ||  thisYear  <  =  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    thisYear    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
525	[BUG]  [BUGGY]  if(months  >=  0  ||  thisYear  ==  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  cannot  find  symbol  thisYear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  >=  0  ||  thisYear  ==  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  >=  0  ||  thisYear  ==  DateTimeConstants.MILLIS_PER_DAY)  {	  if(months    ==    0    ||    thisYear    <    =    DateTimeConstants.MILLIS_PER_DAY)    {    	non-compiled	[CE]  cannot  find  symbol  thisYear	37	None	replace
526	[BUG]  [BUGGY]  long  months  =  iChronology.getMillisOfDay(instant);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  long  months  =  iChronology.getMillisOfDay(instant);  [BUGGY]    if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	long  months  =  iChronology.getMillisOfDay(instant);	      int    months    =    iChronology.getMillisOfDay(instant);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
527	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  when(months  ==  0  ||  instant  <  months)  {  [CE]  ';'  expected  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {    [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  when(months  ==  0  ||  instant  <  months)  {  [BUGGY]    return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months    ==    0    ||    instant    <    months)    {    when(months  ==  0  ||  instant  <  months)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
