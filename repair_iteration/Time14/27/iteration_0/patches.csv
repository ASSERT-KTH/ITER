bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    int  months  =  iChronology.getMonthOfYear(instant);  [CE]  variable  months  is  already  defined  in  method  add(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]    int  months  =  iChronology.getMonthOfYear(instant);  [BUGGY]  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	    int  months  =  iChronology.getMonthOfYear(instant);		non-compiled	[CE]  variable  months  is  already  defined  in  method  add(long,int)	54	None	add
2	[BUG]  [BUGGY]    int  months  =  iChronology.getDayOfMonth(instant);  [CE]  variable  months  is  already  defined  in  method  add(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]    int  months  =  iChronology.getDayOfMonth(instant);  [BUGGY]  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	    int  months  =  iChronology.getDayOfMonth(instant);		non-compiled	[CE]  variable  months  is  already  defined  in  method  add(long,int)	54	None	add
3	[BUG]  [BUGGY]    int  months  =  iChronology.getMillisOfYear(instant);  [CE]  variable  months  is  already  defined  in  method  add(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]    int  months  =  iChronology.getMillisOfYear(instant);  [BUGGY]  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	    int  months  =  iChronology.getMillisOfYear(instant);		non-compiled	[CE]  variable  months  is  already  defined  in  method  add(long,int)	54	None	add
4	[BUG]  [BUGGY]    int  months  =  iChronology.getMillisOfDay(instant);  [CE]  variable  months  is  already  defined  in  method  add(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]    int  months  =  iChronology.getMillisOfDay(instant);  [BUGGY]  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	    int  months  =  iChronology.getMillisOfDay(instant);		non-compiled	[CE]  variable  months  is  already  defined  in  method  add(long,int)	54	None	add
5	[BUG]  [BUGGY]    long  months  =  iChronology.getMonthOfYear(instant);  [CE]  variable  months  is  already  defined  in  method  add(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]    long  months  =  iChronology.getMonthOfYear(instant);  [BUGGY]  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	    long  months  =  iChronology.getMonthOfYear(instant);		non-compiled	[CE]  variable  months  is  already  defined  in  method  add(long,int)	54	None	add
6	[BUG]  [BUGGY]    int  months  =  iChronology.getDaysInYearMonth(instant);  [CE]  variable  months  is  already  defined  in  method  add(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]    int  months  =  iChronology.getDaysInYearMonth(instant);  [BUGGY]  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	    int  months  =  iChronology.getDaysInYearMonth(instant);		non-compiled	[CE]  variable  months  is  already  defined  in  method  add(long,int)	54	None	add
7	[BUG]  [BUGGY]    int  months  =  getMonthOfYear(instant);  [CE]  variable  months  is  already  defined  in  method  add(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]    int  months  =  getMonthOfYear(instant);  [BUGGY]  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	    int  months  =  getMonthOfYear(instant);		non-compiled	[CE]  variable  months  is  already  defined  in  method  add(long,int)	54	None	add
8	[BUG]  [BUGGY]    int  months  =  getChronology().months().add(instant,  thisYear);  [CE]  variable  months  is  already  defined  in  method  add(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]    int  months  =  getChronology().months().add(instant,  thisYear);  [BUGGY]  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	    int  months  =  getChronology().months().add(instant,  thisYear);		non-compiled	[CE]  variable  months  is  already  defined  in  method  add(long,int)	54	None	add
9	[BUG]  [BUGGY]    int  months  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  months  is  already  defined  in  method  add(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]    int  months  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	    int  months  =  iChronology.getMonthOfYear(instant,  thisYear);		non-compiled	[CE]  variable  months  is  already  defined  in  method  add(long,int)	54	None	add
10	[BUG]  [BUGGY]    int  months  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  months  is  already  defined  in  method  add(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]    int  months  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	    int  months  =  iChronology.getDayOfMonth(instant,  thisYear);		non-compiled	[CE]  variable  months  is  already  defined  in  method  add(long,int)	54	None	add
11	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  ==  1)  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months  ==  1)  {	if  (months  ==  0)  {  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	53	11	replace
12	[BUG]  [BUGGY]  if(months  ==  1)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  ==  1)  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  1)  {	if  (months  ==  0)  {  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	53	11	replace
13	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months!=  0)  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months!=  0)  {	if  (months  ==  0)  {  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	53	15	replace
14	[BUG]  [BUGGY]  if(months!=  0)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months!=  0)  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months!=  0)  {	if  (months  ==  0)  {  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	53	15	replace
15	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  ==  0  ||  instant  >=  months)  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months  ==  0  ||  instant  >=  months)  {	if  (months  ==  0)  {  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	53	15	replace
16	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  months)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  ==  0  ||  instant  >=  months)  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >=  months)  {	if  (months  ==  0)  {  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	53	15	replace
17	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  thisYear)  {  [CE]  cannot  find  symbol  thisYear  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  ==  0  ||  instant  >=  thisYear)  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >=  thisYear)  {	if  (months  ==  0)  {  	non-compiled	[CE]  cannot  find  symbol  thisYear	53	None	replace
18	[BUG]  [BUGGY]  if(months  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  <  =  0)  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  <  =  0)  {	if  (months  ==  0)  {  	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
19	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months  ==  0  ||  instant  <  months)  {	if  (months  ==  0)  {  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	53	8	replace
20	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  ==  0  ||  instant  <  months)  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  <  months)  {	if  (months  ==  0)  {  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	53	8	replace
21	[BUG]  [BUGGY]    int  months  =  iChronology.getMonthOfYear(instant,  months);  [CE]  variable  months  is  already  defined  in  method  add(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]    int  months  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	    int  months  =  iChronology.getMonthOfYear(instant,  months);		non-compiled	[CE]  variable  months  is  already  defined  in  method  add(long,int)	54	None	add
22	[BUG]  [BUGGY]    int  months  =  iChronology.getYearMonthMillis(instant);  [CE]  variable  months  is  already  defined  in  method  add(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]    int  months  =  iChronology.getYearMonthMillis(instant);  [BUGGY]  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	    int  months  =  iChronology.getYearMonthMillis(instant);		non-compiled	[CE]  variable  months  is  already  defined  in  method  add(long,int)	54	None	add
23	[BUG]  [BUGGY]    int  months  =  iChronology.getYearMillis(instant);  [CE]  variable  months  is  already  defined  in  method  add(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]    int  months  =  iChronology.getYearMillis(instant);  [BUGGY]  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	    int  months  =  iChronology.getYearMillis(instant);		non-compiled	[CE]  variable  months  is  already  defined  in  method  add(long,int)	54	None	add
24	[BUG]  [BUGGY]    int  months  =  iChronology.getYearMonthOfYear(instant);  [CE]  variable  months  is  already  defined  in  method  add(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]    int  months  =  iChronology.getYearMonthOfYear(instant);  [BUGGY]  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	    int  months  =  iChronology.getYearMonthOfYear(instant);		non-compiled	[CE]  variable  months  is  already  defined  in  method  add(long,int)	54	None	add
25	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth())  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth())  {	if  (months  ==  0)  {  	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	53	None	replace
26	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {	if  (months  ==  0)  {  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	53	15	replace
27	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >=  iChronology.getMonthOfYear(instant))  {	if  (months  ==  0)  {  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	53	15	replace
28	[BUG]  [BUGGY]  if(months  ==  0  ||  instant!=  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  ==  0  ||  instant!=  iChronology.getDayOfMonth())  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant!=  iChronology.getDayOfMonth())  {	if  (months  ==  0)  {  	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	53	None	replace
29	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {	if  (months  ==  0)  {  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	53	15	replace
30	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >=  iChronology.getDayOfMonth(instant))  {	if  (months  ==  0)  {  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	53	15	replace
31	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  <  iChronology.getDayOfMonth())  {  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  ==  0  ||  instant  <  iChronology.getDayOfMonth())  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  <  iChronology.getDayOfMonth())  {	if  (months  ==  0)  {  	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	53	None	replace
32	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMillisOfYear(instant))  {  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  ==  0  ||  instant  >=  iChronology.getMillisOfYear(instant))  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >=  iChronology.getMillisOfYear(instant))  {	if  (months  ==  0)  {  	non-compiled	[CE]  cannot  find  symbol	53	None	replace
33	[BUG]  [BUGGY]    int  monthToUse  =  iChronology.getMonthOfYear(instant);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]    int  monthToUse  =  iChronology.getMonthOfYear(instant);  [BUGGY]  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	    int  monthToUse  =  iChronology.getMonthOfYear(instant);		non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	54	None	add
34	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  ==  0  ||  instant  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  <  =  DateTimeConstants.MILLIS_PER_DAY)  {	if  (months  ==  0)  {  	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
35	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	add	if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {	if  (months  ==  0)  {  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	53	15	replace
36	[BUG]  [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  instant  >  DateTimeConstants.MILLIS_PER_DAY)  {	if  (months  ==  0)  {  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	53	15	replace
37	[BUG]  [BUGGY]  if(months  ==  0  ||  thisYear  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  ==  0  ||  thisYear  <  =  DateTimeConstants.MILLIS_PER_DAY)  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  thisYear  <  =  DateTimeConstants.MILLIS_PER_DAY)  {	if  (months  ==  0)  {  	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
38	[BUG]  [BUGGY]  if(months  ==  0  ||  isYear(instant))  {  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  ==  0  ||  isYear(instant))  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  isYear(instant))  {	if  (months  ==  0)  {  	non-compiled	[CE]  cannot  find  symbol	53	None	replace
39	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)!=  thisYear)  {  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)!=  thisYear)  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)!=  thisYear)  {	if  (months  ==  0)  {  	non-compiled	[CE]  cannot  find  symbol	53	None	replace
40	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)!=  months)  {  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)!=  months)  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)!=  months)  {	if  (months  ==  0)  {  	non-compiled	[CE]  cannot  find  symbol	53	None	replace
41	[BUG]  [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  thisYear)  {  [CE]  cannot  find  symbol  thisYear  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  thisYear)  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  iChronology.getMonthOfYear(instant)!=  thisYear)  {	if  (months  ==  0)  {  	non-compiled	[CE]  cannot  find  symbol  thisYear	53	None	replace
42	[BUG]  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  [BUGGY]  if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)  <  =  0)  {  [BUGGY]  return  instant;  //  the  easy  case  }    long  timePart  =  iChronology.getMillisOfDay(instant);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	92	92	8	replace	if(months  ==  0  ||  DateTimeUtils.getMonthOfYear(instant)  <  =  0)  {	if  (months  ==  0)  {  	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
