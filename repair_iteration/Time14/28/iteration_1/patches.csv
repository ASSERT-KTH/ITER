bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  timePart  =  iChronology.getMillisOfDay(instant);  int  timePart  =  iChronology.getMillisOfDay(instant);  [CE]  variable  timePart  is  already  defined  in  method  add(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  timePart  =  iChronology.getMillisOfDay(instant);  int  timePart  =  iChronology.getMillisOfDay(instant);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int    timePart    =    iChronology.getMillisOfDay(instant);    int  timePart  =  iChronology.getMillisOfDay(instant);	  	non-compiled	[CE]  variable  timePart  is  already  defined  in  method  add(long,int)	3	None	add
2	[BUG]  [BUGGY]  int  timePart  =  iChronology.getMillisOfDay(instant);  int  timePart  =  iChronology.getMillisOfDay(instant);  thisYear  =  iChronology.getMonthOfYear(instant,  months);  [CE]  variable  timePart  is  already  defined  in  method  add(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  timePart  =  iChronology.getMillisOfDay(instant);  int  timePart  =  iChronology.getMillisOfDay(instant);  thisYear  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int    timePart    =    iChronology.getMillisOfDay(instant);    int  timePart  =  iChronology.getMillisOfDay(instant);  thisYear  =  iChronology.getMonthOfYear(instant,  months);	  	non-compiled	[CE]  variable  timePart  is  already  defined  in  method  add(long,int)	3	None	add
3	[BUG]  [BUGGY]  int  timePart  =  iChronology.getMillisOfDay(instant);  int  timePart  =  iChronology.getMillisOfDay(instant);  thisMonth  =  iChronology.getMillisOfDay(instant);  [CE]  variable  timePart  is  already  defined  in  method  add(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  timePart  =  iChronology.getMillisOfDay(instant);  int  timePart  =  iChronology.getMillisOfDay(instant);  thisMonth  =  iChronology.getMillisOfDay(instant);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int    timePart    =    iChronology.getMillisOfDay(instant);    int  timePart  =  iChronology.getMillisOfDay(instant);  thisMonth  =  iChronology.getMillisOfDay(instant);	  	non-compiled	[CE]  variable  timePart  is  already  defined  in  method  add(long,int)	3	None	add
4	[BUG]  [BUGGY]  int  timePart  =  iChronology.getMillisOfDay(instant);  int  timePart  =  iChronology.getMillisOfDay(instant);  Integer  timePart  =  iChronology.getMillisOfDay(instant);  [CE]  variable  timePart  is  already  defined  in  method  add(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  timePart  =  iChronology.getMillisOfDay(instant);  int  timePart  =  iChronology.getMillisOfDay(instant);  Integer  timePart  =  iChronology.getMillisOfDay(instant);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int    timePart    =    iChronology.getMillisOfDay(instant);    int  timePart  =  iChronology.getMillisOfDay(instant);  Integer  timePart  =  iChronology.getMillisOfDay(instant);	  	non-compiled	[CE]  variable  timePart  is  already  defined  in  method  add(long,int)	3	None	add
5	[BUG]  [BUGGY]  int  timePart  =  iChronology.getMillisOfDay(instant);  int  timePart  =  iChronology.getMillisOfDay(instant);  thisYear  =  iChronology.getLeapMonthOfDay(instant,  months);  [CE]  variable  timePart  is  already  defined  in  method  add(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  timePart  =  iChronology.getMillisOfDay(instant);  int  timePart  =  iChronology.getMillisOfDay(instant);  thisYear  =  iChronology.getLeapMonthOfDay(instant,  months);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int    timePart    =    iChronology.getMillisOfDay(instant);    int  timePart  =  iChronology.getMillisOfDay(instant);  thisYear  =  iChronology.getLeapMonthOfDay(instant,  months);	  	non-compiled	[CE]  variable  timePart  is  already  defined  in  method  add(long,int)	3	None	add
6	[BUG]  [BUGGY]  int  timePart  =  iChronology.getMillisOfDay(instant);  int  timePart  =  iChronology.getMillisOfDay(instant);  thisYear  =  iChronology.getDayOfMonth(instant,  months);  [CE]  variable  timePart  is  already  defined  in  method  add(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  timePart  =  iChronology.getMillisOfDay(instant);  int  timePart  =  iChronology.getMillisOfDay(instant);  thisYear  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int    timePart    =    iChronology.getMillisOfDay(instant);    int  timePart  =  iChronology.getMillisOfDay(instant);  thisYear  =  iChronology.getDayOfMonth(instant,  months);	  	non-compiled	[CE]  variable  timePart  is  already  defined  in  method  add(long,int)	3	None	add
7	[BUG]  [BUGGY]  int  timePart  =  iChronology.getMillisOfDay(instant);  int  timePart  =  iChronology.getMillisOfDay(instant);  instant  =  iChronology.getMillisOfDay(instant);  [CE]  variable  timePart  is  already  defined  in  method  add(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  timePart  =  iChronology.getMillisOfDay(instant);  int  timePart  =  iChronology.getMillisOfDay(instant);  instant  =  iChronology.getMillisOfDay(instant);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int    timePart    =    iChronology.getMillisOfDay(instant);    int  timePart  =  iChronology.getMillisOfDay(instant);  instant  =  iChronology.getMillisOfDay(instant);	  	non-compiled	[CE]  variable  timePart  is  already  defined  in  method  add(long,int)	3	None	add
8	[BUG]  [BUGGY]  int  timePart  =  iChronology.getMillisOfDay(instant);  int  hourPart  =  iChronology.getMillisOfDay(instant);  [CE]  variable  timePart  is  already  defined  in  method  add(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  timePart  =  iChronology.getMillisOfDay(instant);  int  hourPart  =  iChronology.getMillisOfDay(instant);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int    timePart    =    iChronology.getMillisOfDay(instant);    int  hourPart  =  iChronology.getMillisOfDay(instant);	  	non-compiled	[CE]  variable  timePart  is  already  defined  in  method  add(long,int)	3	None	add
9	[BUG]  [BUGGY]  int  timePart  =  iChronology.getMillisOfDay(instant);  int  minutePart  =  iChronology.getMillisOfDay(instant);  [CE]  variable  timePart  is  already  defined  in  method  add(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  timePart  =  iChronology.getMillisOfDay(instant);  int  minutePart  =  iChronology.getMillisOfDay(instant);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int    timePart    =    iChronology.getMillisOfDay(instant);    int  minutePart  =  iChronology.getMillisOfDay(instant);	  	non-compiled	[CE]  variable  timePart  is  already  defined  in  method  add(long,int)	3	None	add
10	[BUG]  [BUGGY]  int  timePart  =  iChronology.getMillisOfDay(instant);  Integer  timePart  =  iChronology.getMillisOfDay(instant);  [CE]  variable  timePart  is  already  defined  in  method  add(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  timePart  =  iChronology.getMillisOfDay(instant);  Integer  timePart  =  iChronology.getMillisOfDay(instant);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int    timePart    =    iChronology.getMillisOfDay(instant);    Integer  timePart  =  iChronology.getMillisOfDay(instant);	  	non-compiled	[CE]  variable  timePart  is  already  defined  in  method  add(long,int)	3	None	add
11	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months,  thisYear);  [CE]  cannot  find  symbol  thisYear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months,  thisYear);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  months,  thisYear);	      int    thisMonth    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisYear	19	None	replace
12	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months,  1);  [CE]  variable  thisMonth  is  already  defined  in  method  add(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months,  1);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  months,  1);	      int    thisMonth    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  add(long,int)	19	None	replace
13	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months,  thisLeapMonth);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  months,  thisLeapMonth);	      int    thisMonth    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	19	None	replace
14	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months,  thisHeapMonth);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  months,  thisHeapMonth);	      int    thisMonth    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	19	None	replace
15	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months  +  1);  [CE]  variable  thisMonth  is  already  defined  in  method  add(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months  +  1);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  months  +  1);	      int    thisMonth    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  add(long,int)	19	None	replace
16	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months,  timePart);  [CE]  cannot  find  symbol  timePart  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months,  timePart);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  months,  timePart);	      int    thisMonth    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  timePart	19	None	replace
17	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months,  2);  [CE]  variable  thisMonth  is  already  defined  in  method  add(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months,  2);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  months,  2);	      int    thisMonth    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  add(long,int)	19	None	replace
18	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months,  iLeapMonth);  [CE]  variable  thisMonth  is  already  defined  in  method  add(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months,  iLeapMonth);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  months,  iLeapMonth);	      int    thisMonth    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  add(long,int)	19	None	replace
19	[BUG]  [BUGGY]  int  yearToUse  =  iChronology.getDayOfMonth(instant,  months,  thisYear);  [CE]  cannot  find  symbol  thisYear  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  yearToUse  =  iChronology.getDayOfMonth(instant,  months,  thisYear);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  yearToUse  =  iChronology.getDayOfMonth(instant,  months,  thisYear);	      int    yearToUse    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisYear	20	None	replace
20	[BUG]  [BUGGY]  int  yearToUse  =  iChronology.getDayOfMonth(instant,  months,  1);  [CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  yearToUse  =  iChronology.getDayOfMonth(instant,  months,  1);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  yearToUse  =  iChronology.getDayOfMonth(instant,  months,  1);	      int    yearToUse    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)	20	None	replace
21	[BUG]  [BUGGY]  int  yearToUse  =  iChronology.getDayOfMonth(instant,  months,  iLeapMonth);  [CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  yearToUse  =  iChronology.getDayOfMonth(instant,  months,  iLeapMonth);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  yearToUse  =  iChronology.getDayOfMonth(instant,  months,  iLeapMonth);	      int    yearToUse    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)	20	None	replace
22	[BUG]  [BUGGY]  int  yearToUse  =  iChronology.getDayOfMonth(instant,  months,  iMax);  [CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  yearToUse  =  iChronology.getDayOfMonth(instant,  months,  iMax);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  yearToUse  =  iChronology.getDayOfMonth(instant,  months,  iMax);	      int    yearToUse    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)	20	None	replace
23	[BUG]  [BUGGY]  int  yearToUse  =  iChronology.getDayOfMonth(instant,  months,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  yearToUse  =  iChronology.getDayOfMonth(instant,  months,  thisMonth);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  yearToUse  =  iChronology.getDayOfMonth(instant,  months,  thisMonth);	      int    yearToUse    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	20	None	replace
24	[BUG]  [BUGGY]  int  yearToUse  =  iChronology.getDayOfMonth(instant,  months,  days);  [CE]  cannot  find  symbol  days  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  yearToUse  =  iChronology.getDayOfMonth(instant,  months,  days);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  yearToUse  =  iChronology.getDayOfMonth(instant,  months,  days);	      int    yearToUse    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  days	20	None	replace
25	[BUG]  [BUGGY]  int  yearToUse  =  iChronology.getDayOfMonth(instant,  months,  months);  [CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  yearToUse  =  iChronology.getDayOfMonth(instant,  months,  months);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  yearToUse  =  iChronology.getDayOfMonth(instant,  months,  months);	      int    yearToUse    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)	20	None	replace
26	[BUG]  [BUGGY]  int  yearToUse  =  iChronology.getDayOfMonth(instant,  months,  dayToUse);  [CE]  cannot  find  symbol  dayToUse  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  yearToUse  =  iChronology.getDayOfMonth(instant,  months,  dayToUse);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  yearToUse  =  iChronology.getDayOfMonth(instant,  months,  dayToUse);	      int    yearToUse    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	20	None	replace
27	[BUG]  [BUGGY]  long  timePart  =  iChronology.getMillisOfYear(instant,  months,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  long  timePart  =  iChronology.getMillisOfYear(instant,  months,  thisMonth);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long  timePart  =  iChronology.getMillisOfYear(instant,  months,  thisMonth);	  long    timePart    =    iChronology.getMillisOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	14	None	replace
28	[BUG]  [BUGGY]  long  timePart  =  iChronology.getMillisOfYear(instant,  months,  thisYear);  [CE]  cannot  find  symbol  thisYear  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  long  timePart  =  iChronology.getMillisOfYear(instant,  months,  thisYear);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long  timePart  =  iChronology.getMillisOfYear(instant,  months,  thisYear);	  long    timePart    =    iChronology.getMillisOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisYear	14	None	replace
29	[BUG]  [BUGGY]  long  timePart  =  iChronology.getMillisOfYear(instant,  months,  1);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  long  timePart  =  iChronology.getMillisOfYear(instant,  months,  1);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long  timePart  =  iChronology.getMillisOfYear(instant,  months,  1);	  long    timePart    =    iChronology.getMillisOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
30	[BUG]  [BUGGY]  long  timePart  =  iChronology.getMillisOfYear(instant,  months,  iMax);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  long  timePart  =  iChronology.getMillisOfYear(instant,  months,  iMax);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long  timePart  =  iChronology.getMillisOfYear(instant,  months,  iMax);	  long    timePart    =    iChronology.getMillisOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
31	[BUG]  [BUGGY]  long  timePart  =  iChronology.getMillisOfYear(instant,  months,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  long  timePart  =  iChronology.getMillisOfYear(instant,  months,  thisDay);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long  timePart  =  iChronology.getMillisOfYear(instant,  months,  thisDay);	  long    timePart    =    iChronology.getMillisOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisDay	14	None	replace
32	[BUG]  [BUGGY]  long  timePart  =  iChronology.getMillisOfYear(instant,  months,  false);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  long  timePart  =  iChronology.getMillisOfYear(instant,  months,  false);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long  timePart  =  iChronology.getMillisOfYear(instant,  months,  false);	  long    timePart    =    iChronology.getMillisOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
33	[BUG]  [BUGGY]  long  timePart  =  iChronology.getMillisOfYear(instant,  months,  days);  [CE]  cannot  find  symbol  days  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  long  timePart  =  iChronology.getMillisOfYear(instant,  months,  days);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long  timePart  =  iChronology.getMillisOfYear(instant,  months,  days);	  long    timePart    =    iChronology.getMillisOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  days	14	None	replace
34	[BUG]  [BUGGY]  long  timePart  =  iChronology.getMillisOfYear(instant,  months,  date);  [CE]  cannot  find  symbol  date  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  long  timePart  =  iChronology.getMillisOfYear(instant,  months,  date);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long  timePart  =  iChronology.getMillisOfYear(instant,  months,  date);	  long    timePart    =    iChronology.getMillisOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  date	14	None	replace
35	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfDay(instant,  months);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  monthToUse  =  iChronology.getMonthOfDay(instant,  months);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  monthToUse  =  iChronology.getMonthOfDay(instant,  months);	      int    monthToUse    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
36	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  months);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant,  months);	      int    monthToUse    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	31	None	replace
37	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  months,  thisYear);  [CE]  cannot  find  symbol  thisYear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  months,  thisYear);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  monthToUse  =  iChronology.getDayOfMonth(instant,  months,  thisYear);	      int    monthToUse    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisYear	31	None	replace
38	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  months,  iLeapMonth);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  months,  iLeapMonth);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  monthToUse  =  iChronology.getDayOfMonth(instant,  months,  iLeapMonth);	      int    monthToUse    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	31	None	replace
39	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  months,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  months,  thisMonth);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  monthToUse  =  iChronology.getDayOfMonth(instant,  months,  thisMonth);	      int    monthToUse    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	31	None	replace
40	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  months,  iMax);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  months,  iMax);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  monthToUse  =  iChronology.getDayOfMonth(instant,  months,  iMax);	      int    monthToUse    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	31	None	replace
41	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  months,  1);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  months,  1);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  monthToUse  =  iChronology.getDayOfMonth(instant,  months,  1);	      int    monthToUse    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	31	None	replace
42	[BUG]  [BUGGY]  long  monthToUse  =  iChronology.getDayOfMonth(instant,  months);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  long  monthToUse  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long  monthToUse  =  iChronology.getDayOfMonth(instant,  months);	      int    monthToUse    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	31	None	replace
43	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant);	      int    monthToUse    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	30	None	replace
44	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfDay(instant);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  monthToUse  =  iChronology.getMonthOfDay(instant);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  monthToUse  =  iChronology.getMonthOfDay(instant);	      int    monthToUse    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
45	[BUG]  [BUGGY]  long  monthToUse  =  iChronology.getDayOfMonth(instant);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  long  monthToUse  =  iChronology.getDayOfMonth(instant);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long  monthToUse  =  iChronology.getDayOfMonth(instant);	      int    monthToUse    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	30	None	replace
46	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisYear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	thisYear  =  iChronology.getMonthOfYear(instant);	      thisYear    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	22	None	replace
47	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant  +  months);  [CE]  cannot  find  symbol  thisYear  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant  +  months);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	thisYear  =  iChronology.getDayOfMonth(instant  +  months);	      thisYear    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	22	None	replace
48	[BUG]  [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  months);  [CE]  cannot  find  symbol  thisYear  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  thisYear  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	thisYear  =  iChronology.getMonthOfYear(instant,  months);	      thisYear    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	22	None	replace
49	[BUG]  [BUGGY]  iYear  =  iChronology.getDayOfMonth(instant);  [CE]  cannot  find  symbol  iYear  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  iYear  =  iChronology.getDayOfMonth(instant);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	iYear  =  iChronology.getDayOfMonth(instant);	      thisYear    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  iYear	22	None	replace
50	[BUG]  [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  [CE]  variable  timePart  is  already  defined  in  method  add(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long    timePart    =    iChronology.getDayOfMonth(instant,    months);    long  timePart  =  iChronology.getDayOfMonth(instant,  months);	  	non-compiled	[CE]  variable  timePart  is  already  defined  in  method  add(long,int)	8	None	add
51	[BUG]  [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  int  months  =  iChronology.getMonthOfYear(instant,  months);  [CE]  variable  months  is  already  defined  in  method  add(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  int  months  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long    timePart    =    iChronology.getDayOfMonth(instant,    months);    int  months  =  iChronology.getMonthOfYear(instant,  months);	  	non-compiled	[CE]  variable  months  is  already  defined  in  method  add(long,int)	8	None	add
52	[BUG]  [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  int  months  =  iChronology.getDayOfMonth(instant,  months);  [CE]  variable  months  is  already  defined  in  method  add(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  int  months  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long    timePart    =    iChronology.getDayOfMonth(instant,    months);    int  months  =  iChronology.getDayOfMonth(instant,  months);	  	non-compiled	[CE]  variable  months  is  already  defined  in  method  add(long,int)	8	None	add
53	[BUG]  [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  int  monthToUse  =  iChronology.getDayOfMonth(instant,  months);  [CE]  variable  timePart  is  already  defined  in  method  add(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  int  monthToUse  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long    timePart    =    iChronology.getDayOfMonth(instant,    months);    int  monthToUse  =  iChronology.getDayOfMonth(instant,  months);	  	non-compiled	[CE]  variable  timePart  is  already  defined  in  method  add(long,int)	8	None	add
54	[BUG]  [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  int  monthToUse  =  iChronology.getMonthOfYear(instant,  months);  [CE]  variable  timePart  is  already  defined  in  method  add(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  int  monthToUse  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long    timePart    =    iChronology.getDayOfMonth(instant,    months);    int  monthToUse  =  iChronology.getMonthOfYear(instant,  months);	  	non-compiled	[CE]  variable  timePart  is  already  defined  in  method  add(long,int)	8	None	add
55	[BUG]  [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  int  days  =  iChronology.getDayOfMonth(instant,  months);  [CE]  variable  timePart  is  already  defined  in  method  add(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  int  days  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long    timePart    =    iChronology.getDayOfMonth(instant,    months);    int  days  =  iChronology.getDayOfMonth(instant,  months);	  	non-compiled	[CE]  variable  timePart  is  already  defined  in  method  add(long,int)	8	None	add
56	[BUG]  [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months);  [CE]  variable  timePart  is  already  defined  in  method  add(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long    timePart    =    iChronology.getDayOfMonth(instant,    months);    int  thisMonth  =  iChronology.getDayOfMonth(instant,  months);	  	non-compiled	[CE]  variable  timePart  is  already  defined  in  method  add(long,int)	8	None	add
57	[BUG]  [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  long  months  =  iChronology.getDayOfMonth(instant,  months);  [CE]  variable  months  is  already  defined  in  method  add(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  long  months  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long    timePart    =    iChronology.getDayOfMonth(instant,    months);    long  months  =  iChronology.getDayOfMonth(instant,  months);	  	non-compiled	[CE]  variable  months  is  already  defined  in  method  add(long,int)	8	None	add
58	[BUG]  [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  iChronology.getDayOfMonth(instant,  months);  [CE]  variable  timePart  is  already  defined  in  method  add(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  iChronology.getDayOfMonth(instant,  months);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long    timePart    =    iChronology.getDayOfMonth(instant,    months);    iChronology.getDayOfMonth(instant,  months);	  	non-compiled	[CE]  variable  timePart  is  already  defined  in  method  add(long,int)	8	None	add
59	[BUG]  [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  iChronology.setDayOfMonth(instant,  months);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  iChronology.setDayOfMonth(instant,  months);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long    timePart    =    iChronology.getDayOfMonth(instant,    months);    iChronology.setDayOfMonth(instant,  months);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
60	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  months);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  months);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  thisYear  =  iChronology.getYear(instant,  months);	      	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	15	None	replace
61	[BUG]  [BUGGY]  int  thisDay  =  iChronology.getDayOfMonth(instant,  months);  [CE]  cannot  find  symbol  timePart  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  thisDay  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  thisDay  =  iChronology.getDayOfMonth(instant,  months);	      	non-compiled	[CE]  cannot  find  symbol  timePart	15	None	replace
62	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  timePart  =  iChronology.getMonthOfYear(instant);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	add	int  timePart  =  iChronology.getMonthOfYear(instant);	  long    timePart    =    iChronology.getMonthOfYear(instant);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	7	8	replace
63	[BUG]  [BUGGY]  int  timePart  =  iChronology.getMonthOfYear(instant);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  int  timePart  =  iChronology.getMonthOfYear(instant);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  timePart  =  iChronology.getMonthOfYear(instant);	  long    timePart    =    iChronology.getMonthOfYear(instant);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	7	8	replace
64	[BUG]  [BUGGY]  long  timePart  =  iChronology.getDaysInYear(instant);  [CE]  method  getDaysInYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  long  timePart  =  iChronology.getDaysInYear(instant);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long  timePart  =  iChronology.getDaysInYear(instant);	  long    timePart    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  method  getDaysInYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	7	None	replace
65	[BUG]  [BUGGY]  long  timePart  =  iChronology.getTimeOfYear(instant);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  long  timePart  =  iChronology.getTimeOfYear(instant);  [BUGGY]        int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long  timePart  =  iChronology.getTimeOfYear(instant);	  long    timePart    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
66	[BUG]  [BUGGY]  iChronology  =  DateTimeUtils.getMonthOfYear(instant,  months,  thisMonth);  [CE]  cannot  assign  a  value  to  final  variable  iChronology  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  iChronology  =  DateTimeUtils.getMonthOfYear(instant,  months,  thisMonth);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	iChronology  =  DateTimeUtils.getMonthOfYear(instant,  months,  thisMonth);	      iChronology    =    DateTimeUtils.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iChronology	28	None	replace
67	[BUG]  [BUGGY]  iChronology  =  DateTimeUtils.getMonthOfYear(instant,  months,  1);  [CE]  cannot  assign  a  value  to  final  variable  iChronology  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  iChronology  =  DateTimeUtils.getMonthOfYear(instant,  months,  1);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	iChronology  =  DateTimeUtils.getMonthOfYear(instant,  months,  1);	      iChronology    =    DateTimeUtils.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iChronology	28	None	replace
68	[BUG]  [BUGGY]  iChronology  =  DateTimeUtils.getMonthOfYear(instant,  months  +  1);  [CE]  cannot  assign  a  value  to  final  variable  iChronology  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  iChronology  =  DateTimeUtils.getMonthOfYear(instant,  months  +  1);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	iChronology  =  DateTimeUtils.getMonthOfYear(instant,  months  +  1);	      iChronology    =    DateTimeUtils.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iChronology	28	None	replace
69	[BUG]  [BUGGY]  iChronology  =  DateTimeUtils.getMonthOfYear(instant,  months,  iMax);  [CE]  cannot  assign  a  value  to  final  variable  iChronology  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  iChronology  =  DateTimeUtils.getMonthOfYear(instant,  months,  iMax);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	iChronology  =  DateTimeUtils.getMonthOfYear(instant,  months,  iMax);	      iChronology    =    DateTimeUtils.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iChronology	28	None	replace
70	[BUG]  [BUGGY]  iChronology  =  DateTimeUtils.getMonthOfYear(instant,  months,  thisYear);  [CE]  cannot  assign  a  value  to  final  variable  iChronology  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  iChronology  =  DateTimeUtils.getMonthOfYear(instant,  months,  thisYear);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	iChronology  =  DateTimeUtils.getMonthOfYear(instant,  months,  thisYear);	      iChronology    =    DateTimeUtils.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iChronology	28	None	replace
71	[BUG]  [BUGGY]  iChronology  =  DateTimeUtils.getMonthOfYear(instant,  months,  iLeapMonth);  [CE]  cannot  assign  a  value  to  final  variable  iChronology  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  iChronology  =  DateTimeUtils.getMonthOfYear(instant,  months,  iLeapMonth);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	iChronology  =  DateTimeUtils.getMonthOfYear(instant,  months,  iLeapMonth);	      iChronology    =    DateTimeUtils.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iChronology	28	None	replace
72	[BUG]  [BUGGY]  iChronology  =  DateTimeUtils.getMonthOfYear(instant,  months,  0);  [CE]  cannot  assign  a  value  to  final  variable  iChronology  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }        [BUGGY]  iChronology  =  DateTimeUtils.getMonthOfYear(instant,  months,  0);  [BUGGY]    long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	iChronology  =  DateTimeUtils.getMonthOfYear(instant,  months,  0);	      iChronology    =    DateTimeUtils.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iChronology	28	None	replace
