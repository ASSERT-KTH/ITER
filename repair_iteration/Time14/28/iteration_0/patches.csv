bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	add	long  timePart  =  iChronology.getDayOfMonth(instant);	long  timePart  =  iChronology.getMillisOfDay(instant);  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	55	8	replace
2	[BUG]  [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long  timePart  =  iChronology.getDayOfMonth(instant);	long  timePart  =  iChronology.getMillisOfDay(instant);  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	55	8	replace
3	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]  int  timePart  =  iChronology.getMillisOfDay(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	add	int  timePart  =  iChronology.getMillisOfDay(instant);	long  timePart  =  iChronology.getMillisOfDay(instant);  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	55	8	replace
4	[BUG]  [BUGGY]  int  timePart  =  iChronology.getMillisOfDay(instant);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]  int  timePart  =  iChronology.getMillisOfDay(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	int  timePart  =  iChronology.getMillisOfDay(instant);	long  timePart  =  iChronology.getMillisOfDay(instant);  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	55	8	replace
5	[BUG]  [BUGGY]  long  timePart  =  iChronology.getMillisOfDay(instant,  months);  [CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]  long  timePart  =  iChronology.getMillisOfDay(instant,  months);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long  timePart  =  iChronology.getMillisOfDay(instant,  months);	long  timePart  =  iChronology.getMillisOfDay(instant);  	non-compiled	[CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;	55	None	replace
6	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]  long  timePart  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	add	long  timePart  =  iChronology.getMonthOfYear(instant);	long  timePart  =  iChronology.getMillisOfDay(instant);  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	55	8	replace
7	[BUG]  [BUGGY]  long  timePart  =  iChronology.getMonthOfYear(instant);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]  long  timePart  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long  timePart  =  iChronology.getMonthOfYear(instant);	long  timePart  =  iChronology.getMillisOfDay(instant);  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	55	8	replace
8	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	add	long  timePart  =  iChronology.getDayOfMonth(instant,  months);	long  timePart  =  iChronology.getMillisOfDay(instant);  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	55	8	replace
9	[BUG]  [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]  long  timePart  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long  timePart  =  iChronology.getDayOfMonth(instant,  months);	long  timePart  =  iChronology.getMillisOfDay(instant);  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	55	8	replace
10	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]  long  timePart  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	add	long  timePart  =  iChronology.getMonthOfYear(instant,  months);	long  timePart  =  iChronology.getMillisOfDay(instant);  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	55	8	replace
11	[BUG]  [BUGGY]  long  timePart  =  iChronology.getMonthOfYear(instant,  months);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]  long  timePart  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long  timePart  =  iChronology.getMonthOfYear(instant,  months);	long  timePart  =  iChronology.getMillisOfDay(instant);  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	55	8	replace
12	[BUG]  [BUGGY]  long  timePart  =  iChronology.getMillisOfYear(instant);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]  long  timePart  =  iChronology.getMillisOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long  timePart  =  iChronology.getMillisOfYear(instant);	long  timePart  =  iChronology.getMillisOfDay(instant);  	non-compiled	[CE]  cannot  find  symbol	55	None	replace
13	[BUG]  [BUGGY]  long  timePart  =  iChronology.getDaysOfMonth(instant);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]  long  timePart  =  iChronology.getDaysOfMonth(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long  timePart  =  iChronology.getDaysOfMonth(instant);	long  timePart  =  iChronology.getMillisOfDay(instant);  	non-compiled	[CE]  cannot  find  symbol	55	None	replace
14	[BUG]  [BUGGY]  long  timePart  =  iChronology.getMillisOfYear(instant,  months);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]  long  timePart  =  iChronology.getMillisOfYear(instant,  months);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long  timePart  =  iChronology.getMillisOfYear(instant,  months);	long  timePart  =  iChronology.getMillisOfDay(instant);  	non-compiled	[CE]  cannot  find  symbol	55	None	replace
15	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  timePart  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]    [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	  	long  timePart  =  iChronology.getMillisOfDay(instant);  	non-compiled	[CE]  cannot  find  symbol  timePart	55	None	replace
16	[BUG]  [BUGGY]    int  thisMonth  =  iChronology.getDayOfMonth(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  add(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]    int  thisMonth  =  iChronology.getDayOfMonth(instant);  [BUGGY]  long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	    int  thisMonth  =  iChronology.getDayOfMonth(instant);		non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  add(long,int)	56	None	add
17	[BUG]  [BUGGY]    int  yearToUse  =  iChronology.getDayOfMonth(instant);  [CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]    int  yearToUse  =  iChronology.getDayOfMonth(instant);  [BUGGY]  long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	    int  yearToUse  =  iChronology.getDayOfMonth(instant);		non-compiled	[CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)	56	None	add
18	[BUG]  [BUGGY]    int  thisYear  =  iChronology.getDayOfMonth(instant);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]    int  thisYear  =  iChronology.getDayOfMonth(instant);  [BUGGY]  long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	    int  thisYear  =  iChronology.getDayOfMonth(instant);		non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	56	None	add
19	[BUG]  [BUGGY]    int  thisMonth  =  iChronology.getDayOfMonth(instant,  months);  [CE]  variable  thisMonth  is  already  defined  in  method  add(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]    int  thisMonth  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]  long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	    int  thisMonth  =  iChronology.getDayOfMonth(instant,  months);		non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  add(long,int)	56	None	add
20	[BUG]  [BUGGY]    int  yearToUse  =  iChronology.getDayOfMonth(instant,  months);  [CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]    int  yearToUse  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]  long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	    int  yearToUse  =  iChronology.getDayOfMonth(instant,  months);		non-compiled	[CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)	56	None	add
21	[BUG]  [BUGGY]    int  thisYear  =  iChronology.getDayOfMonth(instant,  months);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]    int  thisYear  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]  long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	    int  thisYear  =  iChronology.getDayOfMonth(instant,  months);		non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	56	None	add
22	[BUG]  [BUGGY]    thisYear  =  iChronology.getDayOfMonth(instant);  [CE]  cannot  find  symbol  thisYear  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]    thisYear  =  iChronology.getDayOfMonth(instant);  [BUGGY]  long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	    thisYear  =  iChronology.getDayOfMonth(instant);		non-compiled	[CE]  cannot  find  symbol  thisYear	56	None	add
23	[BUG]  [BUGGY]    int  thisYear  =  iChronology.getMonthOfYear(instant,  months);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]    int  thisYear  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]  long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	    int  thisYear  =  iChronology.getMonthOfYear(instant,  months);		non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	56	None	add
24	[BUG]  [BUGGY]    int  thisYear  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]    int  thisYear  =  iChronology.getMonthOfYear(instant);  [BUGGY]  long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	    int  thisYear  =  iChronology.getMonthOfYear(instant);		non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	56	None	add
25	[BUG]  [BUGGY]    thisYear  =  iChronology.getDayOfMonth(instant,  months);  [CE]  cannot  find  symbol  thisYear  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]    thisYear  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]  long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	    thisYear  =  iChronology.getDayOfMonth(instant,  months);		non-compiled	[CE]  cannot  find  symbol  thisYear	56	None	add
26	[BUG]  [BUGGY]  long  timePart  =  iChronology.getDaysInYearMonth(instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]  long  timePart  =  iChronology.getDaysInYearMonth(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long  timePart  =  iChronology.getDaysInYearMonth(instant);	long  timePart  =  iChronology.getMillisOfDay(instant);  	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	55	None	replace
27	[BUG]  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  [BUGGY]  long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	    int  thisYear  =  iChronology.getYear(instant);		non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	56	None	add
28	[BUG]  [BUGGY]    iChronology  =  DateTimeUtils.getMonthOfYear(instant,  months);  [CE]  cannot  assign  a  value  to  final  variable  iChronology  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]    iChronology  =  DateTimeUtils.getMonthOfYear(instant,  months);  [BUGGY]  long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	    iChronology  =  DateTimeUtils.getMonthOfYear(instant,  months);		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iChronology	56	None	add
29	[BUG]  [BUGGY]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  [CE]  variable  thisMonth  is  already  defined  in  method  add(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]  long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	    int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);		non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  add(long,int)	56	None	add
30	[BUG]  [BUGGY]    int  monthToUse  =  iChronology.getDayOfMonth(instant);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]    int  monthToUse  =  iChronology.getDayOfMonth(instant);  [BUGGY]  long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	    int  monthToUse  =  iChronology.getDayOfMonth(instant);		non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	56	None	add
31	[BUG]  [BUGGY]    int  monthToUse  =  iChronology.getDayOfMonth(instant,  months);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]    int  monthToUse  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]  long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	    int  monthToUse  =  iChronology.getDayOfMonth(instant,  months);		non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	56	None	add
32	[BUG]  [BUGGY]    int  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  add(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]    int  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]  long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	    int  thisMonth  =  iChronology.getMonthOfYear(instant);		non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  add(long,int)	56	None	add
33	[BUG]  [BUGGY]    int  yearToUse  =  iChronology.getYear(instant);  [CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]    int  yearToUse  =  iChronology.getYear(instant);  [BUGGY]  long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	    int  yearToUse  =  iChronology.getYear(instant);		non-compiled	[CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)	56	None	add
34	[BUG]  [BUGGY]    thisYear  =  iChronology.getYear(instant);  [CE]  cannot  find  symbol  thisYear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]    thisYear  =  iChronology.getYear(instant);  [BUGGY]  long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	    thisYear  =  iChronology.getYear(instant);		non-compiled	[CE]  cannot  find  symbol  thisYear	56	None	add
35	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]    int  days  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]  long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	add	    int  days  =  iChronology.getDayOfMonth(instant,  months);		compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	56	8	add
36	[BUG]  [BUGGY]    int  days  =  iChronology.getDayOfMonth(instant,  months);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]    int  days  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]  long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	    int  days  =  iChronology.getDayOfMonth(instant,  months);		compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	56	8	add
37	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]    instant  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]  long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	add	    instant  =  iChronology.getDayOfMonth(instant,  months);		compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	56	15	add
38	[BUG]  [BUGGY]    instant  =  iChronology.getDayOfMonth(instant,  months);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]    instant  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]  long  timePart  =  iChronology.getMillisOfDay(instant);      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	    instant  =  iChronology.getDayOfMonth(instant,  months);		compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	56	15	add
39	[BUG]  [BUGGY]  long  timePart  =  iChronology.getTimeOfMonth(instant);  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]  long  timePart  =  iChronology.getTimeOfMonth(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long  timePart  =  iChronology.getTimeOfMonth(instant);	long  timePart  =  iChronology.getMillisOfDay(instant);  	non-compiled	[CE]  cannot  find  symbol	55	None	replace
40	[BUG]  [BUGGY]  long  timePart  =  iChronology.getDaysInYearMonth(instant,  months);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  public  long  add(long  instant,  int  months)  {  if  (months  ==  0)  {  return  instant;  //  the  easy  case  }      [BUGGY]  long  timePart  =  iChronology.getDaysInYearMonth(instant,  months);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.21320071635561041	98	98	8	replace	long  timePart  =  iChronology.getDaysInYearMonth(instant,  months);	long  timePart  =  iChronology.getMillisOfDay(instant);  	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	55	None	replace
