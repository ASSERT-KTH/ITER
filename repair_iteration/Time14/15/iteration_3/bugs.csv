bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [timeout]  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisYear    =    iChronology.getMonthOfYear(instant);    	non-compiled	[timeout]	143	None	replace
2	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisYear  might  not  have  been  initialized  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisYear    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  thisYear  might  not  have  been  initialized	143	None	replace
3	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [timeout]  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisYear    =    iChronology.getMonthOfYear(instant);    	non-compiled	[timeout]	143	None	replace
4	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  iLeapMonth);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  iLeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    day);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	110	None	replace
5	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  yearToUse);  [CE]  cannot  find  symbol  yearToUse  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  yearToUse);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  yearToUse);	  int    thisYear    =    iChronology.getYear(instant,    day);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	110	None	replace
6	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  MIN);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  MIN);	  int    thisYear    =    iChronology.getYear(instant,    day);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	110	None	replace
7	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  datePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  datePart);	  int    thisYear    =    iChronology.getYear(instant,    day);    	non-compiled	[CE]  cannot  find  symbol  datePart	110	None	replace
8	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  hour);  [CE]  cannot  find  symbol  hour  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  hour);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  hour);	  int    thisMonth    =    iChronology.getYearMonth(instant,    iMin);    	non-compiled	[CE]  cannot  find  symbol  hour	223	None	replace
9	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  null);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  null);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  null);	  int    thisMonth    =    iChronology.getYearMonth(instant,    iMin);    	non-compiled	[CE]  cannot  find  symbol	223	None	replace
10	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
11	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth,  iMax);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth,  iMax);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
12	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth,  iMin);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	96	None	replace
13	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	96	None	replace
14	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth,  iMillis);  [CE]  cannot  find  symbol  iMillis  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth,  iMillis);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth,  iMillis);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iMillis	96	None	replace
15	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN  +  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN  +  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN  +  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
16	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  dayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  dayOfMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	213	None	replace
17	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  valueToAdd);  [CE]  cannot  find  symbol  valueToAdd  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  valueToAdd);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  valueToAdd);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  valueToAdd	213	None	replace
18	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  datePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  datePart);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  datePart	213	None	replace
19	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MILLIS_PER_DAY);  [CE]  cannot  find  symbol  MILLIS_PER_DAY  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MILLIS_PER_DAY);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MILLIS_PER_DAY);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  MILLIS_PER_DAY	213	None	replace
20	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  timePart);  [CE]  cannot  find  symbol  timePart  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  timePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  timePart);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  timePart	213	None	replace
21	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  minuendMonth);  [CE]  cannot  find  symbol  minuendMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  minuendMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  minuendMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	213	None	replace
22	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  1);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  1);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
23	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	170	None	add
24	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	170	None	add
25	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	170	None	add
26	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	170	None	add
27	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	170	None	add
28	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMillisOfDay(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMillisOfDay(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMillisOfDay(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	170	None	add
29	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getLeapMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getLeapMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getLeapMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	170	None	add
30	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMinthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMinthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMinthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	170	None	add
31	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getHeapMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getHeapMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getHeapMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	170	None	add
32	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonthOfMillis(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonthOfMillis(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonthOfMillis(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	170	None	add
33	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  2);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  2);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  +  2);	  int    thisYear    =    iChronology.getYearMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
34	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1,  thisYear);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1,  thisYear);	  int    thisYear    =    iChronology.getYearMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
35	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  3);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  3);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  +  3);	  int    thisYear    =    iChronology.getYearMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
36	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	135	None	replace
37	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  *  1);  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  *  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  *  1);	  int    thisYear    =    iChronology.getYearMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
38	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
39	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1,  iMax);  [CE]  cannot  find  symbol  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1,  iMax);	  int    thisYear    =    iChronology.getYearMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
40	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  year);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonth(instant,  year);	  Integer    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  year	128	None	replace
41	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  months);  [CE]  cannot  find  symbol  months  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  months);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonth(instant,  months);	  Integer    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  months	128	None	replace
42	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  1);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonth(instant,  1);	  Integer    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
43	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.dayOfMonth(instant);  [CE]  no  suitable  method  found  for  dayOfMonth(long)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.dayOfMonth(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.dayOfMonth(instant);	  Integer    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  no  suitable  method  found  for  dayOfMonth(long)	128	None	replace
44	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  day);  [CE]  cannot  find  symbol  day  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  day);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonth(instant,  day);	  Integer    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  day	128	None	replace
45	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.dayOfMonth();  [CE]  incompatible  types  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.dayOfMonth();  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.dayOfMonth();	  Integer    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  incompatible  types	128	None	replace
46	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  iLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  months,  iLeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	28	None	replace
47	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  yearToUse);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  yearToUse);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  yearToUse);	  int    month    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	28	None	replace
48	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  dayOfMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  dayOfMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  dayOfMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	28	None	replace
49	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	25	None	replace
50	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	25	None	replace
51	[BUG]  [BUGGY]  long  month  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  month  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  month  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	25	None	replace
52	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  mois);  [CE]  cannot  find  symbol  mois  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  mois);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  mois);	  int    thisYear    =    iChronology.getYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  mois	109	None	replace
53	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  0);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  0);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  0);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iMinute);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	49	None	replace
54	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  valueToAdd);  [CE]  cannot  find  symbol  valueToAdd  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  valueToAdd);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  valueToAdd);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iMinute);    	non-compiled	[CE]  cannot  find  symbol  valueToAdd	49	None	replace
55	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  minuendMonth);  [CE]  cannot  find  symbol  minuendMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  minuendMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  minuendMonth);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iMinute);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	49	None	replace
56	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  msg);  [CE]  cannot  find  symbol  msg  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  msg);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  msg);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iMinute);    	non-compiled	[CE]  cannot  find  symbol  msg	49	None	replace
57	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  thisYear);	  int    thisYear    =    iChronology.getYearOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
58	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  year);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  year);	  int    thisYear    =    iChronology.getYearOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  year	194	None	replace
59	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  null);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  null);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  null);	  int    thisYear    =    iChronology.getYearOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
60	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  months);  [CE]  cannot  find  symbol  months  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  months);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  months);	  int    thisYear    =    iChronology.getYearOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  months	194	None	replace
61	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  1);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  1);	  int    thisYear    =    iChronology.getYearOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
62	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  day);  [CE]  cannot  find  symbol  day  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  day);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  day);	  int    thisYear    =    iChronology.getYearOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  day	194	None	replace
63	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  month);	  int    thisYear    =    iChronology.getYearValue(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
64	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  null);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  null);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  null);	  int    thisYear    =    iChronology.getYearValue(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
65	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  year);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  year);	  int    thisYear    =    iChronology.getYearValue(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	62	None	replace
66	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  thisMonth);	  int    thisYear    =    iChronology.getYearValue(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	62	None	replace
67	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  thisMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  thisMonth);	  int    thisYear    =    iChronology.getYearValue(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	62	None	replace
68	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  iLeapMonth);	  int    thisYear    =    iChronology.getYearValue(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
69	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  iHeapMonth);	  int    thisYear    =    iChronology.getYearValue(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	62	None	replace
70	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMONTth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
71	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMONTth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	20	None	replace
72	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN,  iMax);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN,  iMax);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
73	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  minuendMonth,  iMax);  [CE]  cannot  find  symbol  minuendMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  minuendMonth,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  minuendMonth,  iMax);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	118	None	replace
74	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month,  iMax);  [CE]  cannot  find  symbol  thisYear  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month,  iMax);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisYear	118	None	replace
75	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN,  iMin);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  iMin	118	None	replace
76	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  months,  MIN,  iMax);  [CE]  cannot  find  symbol  months  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  months,  MIN,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  months,  MIN,  iMax);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  months	118	None	replace
77	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  1);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  1);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
78	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  min,  iMax);  [CE]  cannot  find  symbol  min  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  min,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  min,  iMax);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  min	118	None	replace
79	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfMonth(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYearOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
80	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfMonth(instant,  month,  iHeapMonth);	  int    thisYear    =    iChronology.getYearOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	185	None	replace
81	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month  +  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfMonth(instant,  month  +  1);	  int    thisYear    =    iChronology.getYearOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
82	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month,  iMax);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfMonth(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYearOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
83	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month,  iMinute);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfMonth(instant,  month,  iMinute);	  int    thisYear    =    iChronology.getYearOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	185	None	replace
84	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month)+  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfMonth(instant,  month)+  1;	  int    thisYear    =    iChronology.getYearOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
85	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month)-  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfMonth(instant,  month)-  1;	  int    thisYear    =    iChronology.getYearOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
86	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month  -  1);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month  -  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfMonth(instant,  month  -  1);	  int    thisYear    =    iChronology.getYearOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
87	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  MIN,  iMax);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  MIN,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  MIN,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	244	None	replace
88	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  dayOfMonth,  iMax);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  dayOfMonth,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  dayOfMonth,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	244	None	replace
89	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  max,  iChronology);  [CE]  cannot  find  symbol  max  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  max,  iChronology);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  max,  iChronology);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  max	244	None	replace
90	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  minuendMonth,  iMax);  [CE]  cannot  find  symbol  minuendMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  minuendMonth,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  minuendMonth,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	244	None	replace
91	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  max);  [CE]  cannot  find  symbol  max  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  max);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  max);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  max	244	None	replace
92	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  datePart,  iMax);  [CE]  cannot  find  symbol  datePart  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  datePart,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  datePart,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  datePart	244	None	replace
93	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  thisYear,  iMax);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  thisYear,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  thisYear,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	244	None	replace
94	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  minuendInstant,  iMax);  [CE]  cannot  find  symbol  minuendInstant  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  minuendInstant,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  minuendInstant,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendInstant	244	None	replace
95	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  0,  iMax);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  0,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  0,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	244	None	replace
96	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
97	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iHeapMonth);	  int    thisYear    =    iChronology.getMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	53	None	replace
98	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iMax);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iMax);	  int    thisYear    =    iChronology.getMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
99	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month  +  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month  +  1);	  int    thisYear    =    iChronology.getMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
100	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iMinute);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iMinute);	  int    thisYear    =    iChronology.getMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	53	None	replace
101	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month)+  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month)+  1;	  int    thisYear    =    iChronology.getMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
102	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month)-  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month)-  1;	  int    thisYear    =    iChronology.getMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
103	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iWeekMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iWeekMonth);	  int    thisYear    =    iChronology.getMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	53	None	replace
104	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	242	None	replace
105	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iLeapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	242	None	replace
106	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMin);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iMin	242	None	replace
107	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	242	None	replace
108	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iWeekMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iWeekMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	242	None	replace
109	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMillis);  [CE]  cannot  find  symbol  iMillis  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMillis);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMillis);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iMillis	242	None	replace
110	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  max);  [CE]  cannot  find  symbol  max  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  max);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  max);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  max	242	None	replace
111	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  datePart);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  datePart);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  datePart	242	None	replace
112	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)+  2;  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)+  2;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month)+  2;	  int    thisMonth    =    iChronology.getYearMonth(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
113	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)+  3;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)+  3;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month)+  3;	  int    thisMonth    =    iChronology.getYearMonth(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
114	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)+  4;  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)+  4;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month)+  4;	  int    thisMonth    =    iChronology.getYearMonth(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
115	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)/  1;  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)/  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month)/  1;	  int    thisMonth    =    iChronology.getYearMonth(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
116	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)+  5;  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)+  5;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month)+  5;	  int    thisMonth    =    iChronology.getYearMonth(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
117	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)+  1L;  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)+  1L;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month)+  1L;	  int    thisMonth    =    iChronology.getYearMonth(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
118	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iRight);  [CE]  cannot  find  symbol  iRight  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iRight);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iRight);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iLocale);    	non-compiled	[CE]  cannot  find  symbol  iRight	101	None	replace
119	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  0);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  0);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  0);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iLocale);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
120	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  day);  [CE]  cannot  find  symbol  day  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  day);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  day);	  int    thisYear    =    iChronology.getYearMillis(instant,    hour);    	non-compiled	[CE]  cannot  find  symbol  day	228	None	replace
121	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  null);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  null);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  null);	  int    thisYear    =    iChronology.getYearMillis(instant,    hour);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	228	None	replace
122	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  1,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  1,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  1,  iLeapMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
123	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  2);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  2);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  2);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
124	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  1,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  1,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  1,  iHeapMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	119	None	replace
125	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  1,  iMax);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  1,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  1,  iMax);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
126	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  1  +  1);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  1  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  1  +  1);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
127	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  3);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  3);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  3);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
128	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
129	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iLeapMonth,  iMax);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iLeapMonth,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iLeapMonth,  iMax);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
130	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iLeapMonth,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iLeapMonth,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iLeapMonth,  iMin);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	31	None	replace
131	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN  +  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN  +  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN  +  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
132	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iLeapMonth,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iLeapMonth,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iLeapMonth,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	31	None	replace
133	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  hour);  [CE]  cannot  find  symbol  hour  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  hour);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  hour);	  Integer    thisYear    =    iChronology.getYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  hour	211	None	replace
134	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  day);  [CE]  cannot  find  symbol  day  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  day);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  day);	  Integer    thisYear    =    iChronology.getYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  day	211	None	replace
135	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  week);  [CE]  cannot  find  symbol  week  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  week);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  week);	  Integer    thisYear    =    iChronology.getYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  week	211	None	replace
136	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  null);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  null);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  null);	  Integer    thisYear    =    iChronology.getYear(instant,    year);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	211	None	replace
137	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfMinute(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	247	None	replace
138	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month  +  1);	  int    thisMonth    =    iChronology.getMonthOfMinute(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	247	None	replace
139	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month,  iHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfMinute(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	247	None	replace
140	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month,  iMax);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month,  iMax);	  int    thisMonth    =    iChronology.getMonthOfMinute(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	247	None	replace
141	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month)+  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month)+  1;	  int    thisMonth    =    iChronology.getMonthOfMinute(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	247	None	replace
142	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month)-  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month)-  1;	  int    thisMonth    =    iChronology.getMonthOfMinute(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	247	None	replace
143	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month  -  1);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month  -  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month  -  1);	  int    thisMonth    =    iChronology.getMonthOfMinute(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	247	None	replace
144	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month),  iLeapMonth);  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month),  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month),  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfMinute(instant,    month);    	non-compiled	[CE]  ';'  expected	247	None	replace
145	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  2;  [timeout]  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  2;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  2;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)+    1;    [timeout]    	non-compiled	[timeout]	123	None	replace
146	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)/  1;  [timeout]  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)/  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)/  1;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)+    1;    [timeout]    	non-compiled	[timeout]	123	None	replace
147	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  3;  [timeout]  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  3;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  3;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)+    1;    [timeout]    	non-compiled	[timeout]	123	None	replace
148	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  1L;  [CE]  possible  loss  of  precision  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  1L;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  1L;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)+    1;    [timeout]    	non-compiled	[CE]  possible  loss  of  precision	123	None	replace
149	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  1;  [timeout]  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  1;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)+    1;    [timeout]    	non-compiled	[timeout]	123	None	replace
150	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  4;  [timeout]  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  4;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  4;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)+    1;    [timeout]    	non-compiled	[timeout]	123	None	replace
151	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  0);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  0);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  0);	  int    thisYear    =    iChronology.getYearMonth(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
152	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
153	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    1);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	5	None	replace
154	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  MIN);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  MIN);	  int    thisYear    =    iChronology.getYearMonth(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
155	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  0,  1);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  0,  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  0,  1);	  int    thisYear    =    iChronology.getYearMonth(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
156	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  1L);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  1L);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  1L);	  int    thisYear    =    iChronology.getYearMonth(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
157	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth()  -  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth()  -  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.dayOfMonth()  -  1;	  int    thisMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	40	None	replace
158	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth()  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth()  +  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.dayOfMonth()  +  1;	  int    thisMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	40	None	replace
159	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.monthOfMonth();  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.monthOfMonth();  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.monthOfMonth();	  int    thisMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
160	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth();  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth();  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth();	  int    thisMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	40	None	replace
161	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth()  /  iLeapMonth;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth()  /  iLeapMonth;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.dayOfMonth()  /  iLeapMonth;	  int    thisMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	40	None	replace
162	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth()  *  iLeapMonth;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth()  *  iLeapMonth;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.dayOfMonth()  *  iLeapMonth;	  int    thisMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	40	None	replace
163	[BUG]  [BUGGY]  long  thisMonth  =  iChronology.dayOfMonth();  [CE]  incompatible  types  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisMonth  =  iChronology.dayOfMonth();  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisMonth  =  iChronology.dayOfMonth();	  int    thisMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  incompatible  types	40	None	replace
164	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth()  /  month;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth()  /  month;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.dayOfMonth()  /  month;	  int    thisMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	40	None	replace
165	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month);  [timeout]  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month);  [timeout]  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month);  [timeout]	  int    thisYear    =    iChronology.getYearMonth(instant);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
166	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month);  [thisYear]  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month);  [thisYear]  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month);  [thisYear]	  int    thisYear    =    iChronology.getYearMonth(instant);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
167	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getYearMonth(instant);  [timeout]  [CE]  illegal  start  of  expression  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getYearMonth(instant);  [timeout]  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getYearMonth(instant);  [timeout]	  int    thisYear    =    iChronology.getYearMonth(instant);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
168	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant);  [thisYear]  [CE]  illegal  start  of  expression  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant);  [thisYear]  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant);  [thisYear]	  int    thisYear    =    iChronology.getYearMonth(instant);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
169	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  month);	  int    month    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	30	None	replace
170	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  month);	  int    month    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	30	None	replace
171	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getYearMonth(instant,  month);	  int    month    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	30	None	replace
172	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant);	  int    month    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	30	None	replace
173	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  MIN,  iMax);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  MIN,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  MIN,  iMax);	  int    thisYear    =    iChronology.getYearMonth(instant,    iMax);    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
174	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  iLeapMonth,  iMax);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  iLeapMonth,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  iLeapMonth,  iMax);	  int    thisYear    =    iChronology.getYearMonth(instant,    iMax);    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
175	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  iMax,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  iMax,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  iMax,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    iMax);    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
176	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  yearToUse);  [CE]  cannot  find  symbol  yearToUse  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  yearToUse);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  yearToUse);	  int    thisYear    =    iChronology.getYearMonth(instant,    iMax);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	236	None	replace
177	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        month);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	19	None	add
178	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        month);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	19	None	add
179	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getYearMonth(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getYearMonth(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        month);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMonth  =  iChronology.getYearMonth(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	19	None	add
180	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        month);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	19	None	add
181	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getYearMonth(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getYearMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        month);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getYearMonth(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	19	None	add
182	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  year);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  year);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        month);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  year);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	19	None	add
183	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        month);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	19	None	add
184	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getMillisOfDay(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getMillisOfDay(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        month);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getMillisOfDay(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	19	None	add
185	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  months);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        month);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  months);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	19	None	add
186	[BUG]  [BUGGY]  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  cannot  find  symbol  thisMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	thisMonth  =  iChronology.getDayOfMonth(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    month;    	non-compiled	[CE]  cannot  find  symbol  thisMonth	22	None	replace
187	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  cannot  find  symbol  thisYear  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    month;    	non-compiled	[CE]  cannot  find  symbol  thisYear	22	None	replace
188	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
189	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	216	None	replace
190	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month,  iMax);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYearMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
191	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month  +  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month  +  1);	  int    thisYear    =    iChronology.getYearMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
192	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month,  iMinute);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month,  iMinute);	  int    thisYear    =    iChronology.getYearMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	216	None	replace
193	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month)+  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month)+  1;	  int    thisYear    =    iChronology.getYearMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
194	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month,  iWeekMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month,  iWeekMonth);	  int    thisYear    =    iChronology.getYearMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	216	None	replace
195	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month)-  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month)-  1;	  int    thisYear    =    iChronology.getYearMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
196	[BUG]  [BUGGY]  char  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  possible  loss  of  precision  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  char  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    char    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  possible  loss  of  precision	149	None	replace
197	[BUG]  [BUGGY]  char  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  possible  loss  of  precision  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  char  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    char    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  possible  loss  of  precision	149	None	replace
198	[BUG]  [BUGGY]  String  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  incompatible  types  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  String  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	String  thisMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    char    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  incompatible  types	149	None	replace
199	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisYear  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    char    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	149	None	replace
200	[BUG]  [BUGGY]  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  thisMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    char    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	149	None	replace
201	[BUG]  [BUGGY]  null  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  not  a  statement  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  null  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	null  thisMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    char    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  not  a  statement	149	None	replace
202	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
203	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	164	None	replace
204	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month,  iMax);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYearMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
205	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month  +  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month  +  1);	  int    thisYear    =    iChronology.getYearMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
206	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month,  iMinute);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month,  iMinute);	  int    thisYear    =    iChronology.getYearMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	164	None	replace
207	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month)-  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month)-  1;	  int    thisYear    =    iChronology.getYearMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
208	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month)+  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month)+  1;	  int    thisYear    =    iChronology.getYearMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
209	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month,  iLocale);  [CE]  cannot  find  symbol  iLocale  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month,  iLocale);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month,  iLocale);	  int    thisYear    =    iChronology.getYearMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iLocale	164	None	replace
210	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month)+  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month)+  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month)+  1;	  int    month    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	26	None	replace
211	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month)-  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month)-  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month)-  1;	  int    month    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	26	None	replace
212	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfMonth(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfMonth(instant,  month);	  int    month    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	26	None	replace
213	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  month);	  int    month    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	26	None	replace
214	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  dayOfMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  dayOfMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    datePart);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	232	None	replace
215	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  yearToUse);  [CE]  cannot  find  symbol  yearToUse  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  yearToUse);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  yearToUse);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    datePart);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	232	None	replace
216	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  hour);  [CE]  cannot  find  symbol  hour  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  hour);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  hour);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    datePart);    	non-compiled	[CE]  cannot  find  symbol  hour	232	None	replace
217	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  timePart);  [CE]  cannot  find  symbol  timePart  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  timePart);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  timePart);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    datePart);    	non-compiled	[CE]  cannot  find  symbol  timePart	232	None	replace
218	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  dayOfMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  dayOfMonth);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	248	None	replace
219	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  valueToAdd);  [CE]  cannot  find  symbol  valueToAdd  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  valueToAdd);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  valueToAdd);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  valueToAdd	248	None	replace
220	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  datePart);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  datePart);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  datePart	248	None	replace
221	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  minuendMonth);  [CE]  cannot  find  symbol  minuendMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  minuendMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  minuendMonth);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	248	None	replace
222	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  day);  [CE]  cannot  find  symbol  day  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  day);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  day);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  day	248	None	replace
223	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  timePart);  [CE]  cannot  find  symbol  timePart  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  timePart);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  timePart);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  timePart	248	None	replace
224	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  1);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  1);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol	248	None	replace
225	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  0);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  0);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  0);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iRight);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	210	None	replace
226	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  msg);  [CE]  cannot  find  symbol  msg  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  msg);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  msg);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iRight);    	non-compiled	[CE]  cannot  find  symbol  msg	210	None	replace
227	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  datePart);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  datePart);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iRight);    	non-compiled	[CE]  cannot  find  symbol  datePart	210	None	replace
228	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  _month);  [CE]  cannot  find  symbol  _month  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  _month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  _month);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iRight);    	non-compiled	[CE]  cannot  find  symbol  _month	210	None	replace
229	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	171	None	replace
230	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  month);  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	171	None	replace
231	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  cannot  find  symbol  thisYear  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	171	None	replace
232	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  thisYear  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	171	None	replace
233	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  [CE]  cannot  find  symbol  months  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  months	169	None	replace
234	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisYear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisYear	169	None	replace
235	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  thisYear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisYear	169	None	replace
236	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  [CE]  cannot  find  symbol  months  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  months	169	None	replace
237	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months  [CE]  ')'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  ')'  expected	169	None	replace
238	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisMonth);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisMonth);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	169	None	replace
239	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  null,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  null,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  null,  iLeapMonth);	  int    thisYear    =    iChronology.getYearValue(instant,    null);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
240	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  null,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  null,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  null,  iHeapMonth);	  int    thisYear    =    iChronology.getYearValue(instant,    null);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	63	None	replace
241	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  this);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  this);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  this);	  int    thisYear    =    iChronology.getYearValue(instant,    null);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
242	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  null,  iChronology);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  null,  iChronology);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  null,  iChronology);	  int    thisYear    =    iChronology.getYearValue(instant,    null);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
243	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  null,  this);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  null,  this);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  null,  this);	  int    thisYear    =    iChronology.getYearValue(instant,    null);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
244	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  null,  false);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  null,  false);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  null,  false);	  int    thisYear    =    iChronology.getYearValue(instant,    null);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
245	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  dayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  dayOfMonth);	  int    thisYear    =    iChronology.getYear(instant,    month,    iDayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	88	None	replace
246	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  0);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  0);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  0);	  int    thisYear    =    iChronology.getYear(instant,    month,    iDayOfMonth);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	88	None	replace
247	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  msg);  [CE]  cannot  find  symbol  msg  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  msg);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  msg);	  int    thisYear    =    iChronology.getYear(instant,    month,    iDayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  msg	88	None	replace
248	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  datePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  datePart);	  int    thisYear    =    iChronology.getYear(instant,    month,    iDayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  datePart	88	None	replace
249	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  month);  [CE]  cannot  find  symbol  thisYear  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  month);	  long    thisYear    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	13	None	replace
250	[BUG]  [BUGGY]  byte  thisYear  =  iChronology.getDayOfMonth(instant);  [CE]  possible  loss  of  precision  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  byte  thisYear  =  iChronology.getDayOfMonth(instant);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	byte  thisYear  =  iChronology.getDayOfMonth(instant);	  long    thisYear    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  possible  loss  of  precision	13	None	replace
251	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getDayOfMonth(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getDayOfMonth(instant,  year);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getDayOfMonth(instant,  year);	  long    thisYear    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  year	13	None	replace
252	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN,  iMax);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN,  iMax);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol	249	None	replace
253	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN,  iMin);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iMin	249	None	replace
254	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	249	None	replace
255	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN,  iWeekMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN,  iWeekMonth);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	249	None	replace
256	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN,  iMillis);  [CE]  cannot  find  symbol  iMillis  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN,  iMillis);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN,  iMillis);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iMillis	249	None	replace
257	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN,  iRight);  [CE]  cannot  find  symbol  iRight  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN,  iRight);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN,  iRight);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iRight	249	None	replace
258	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  2);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  2);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  2);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
259	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  1,  iMax);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  1,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  1,  iMax);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
260	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  1,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  1,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  1,  iHeapMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	117	None	replace
261	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  1,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  1,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  1,  iLeapMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
262	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  3);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  3);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  3);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
263	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  *  1);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  *  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month  *  1);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
264	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  1,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  1,  iWeekMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  1,  iWeekMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	117	None	replace
265	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  yearToUse);  [CE]  cannot  find  symbol  yearToUse  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  yearToUse);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  yearToUse);	  int    thisYear    =    iChronology.getYearValue(instant,    iDayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	265	None	replace
266	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  hour);  [CE]  cannot  find  symbol  hour  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  hour);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  hour);	  int    thisYear    =    iChronology.getYearValue(instant,    iDayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  hour	265	None	replace
267	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  date);  [CE]  cannot  find  symbol  date  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  date);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  date);	  int    thisYear    =    iChronology.getYearValue(instant,    iDayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  date	265	None	replace
268	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  minuendMonth,  iMax);  [CE]  cannot  find  symbol  minuendMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  minuendMonth,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  minuendMonth,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	179	None	replace
269	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  dayOfMonth,  iMax);  [CE]  cannot  find  symbol  dayOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  dayOfMonth,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  dayOfMonth,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	179	None	replace
270	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iMax);  [CE]  cannot  find  symbol  months  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  months	179	None	replace
271	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  minuendToUse,  iMax);  [CE]  cannot  find  symbol  minuendToUse  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  minuendToUse,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  minuendToUse,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	179	None	replace
272	[BUG]  [BUGGY]  char  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  char  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	179	None	replace
273	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  0,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  0,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  0,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	179	None	replace
274	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  dayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  dayOfMonth);	  int    thisYear    =    iChronology.getYear(instant,    date);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	254	None	replace
275	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  2);  [CE]  cannot  find  symbol  thisYear  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  2);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  2);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	177	None	replace
276	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1,  iLeapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	177	None	replace
277	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	177	None	replace
278	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  3);  [CE]  cannot  find  symbol  thisYear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  3);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  3);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	177	None	replace
279	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1,  iHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	177	None	replace
280	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1  +  1);  [CE]  cannot  find  symbol  thisYear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1  +  1);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	177	None	replace
281	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfSecond(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	246	None	replace
282	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month  +  1);	  int    thisMonth    =    iChronology.getMonthOfSecond(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	246	None	replace
283	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month,  iHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfSecond(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	246	None	replace
284	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month,  iMax);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month,  iMax);	  int    thisMonth    =    iChronology.getMonthOfSecond(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	246	None	replace
285	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month  -  1);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month  -  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month  -  1);	  int    thisMonth    =    iChronology.getMonthOfSecond(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	246	None	replace
286	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month)-  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month)-  1;	  int    thisMonth    =    iChronology.getMonthOfSecond(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	246	None	replace
287	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month)+  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month)+  1;	  int    thisMonth    =    iChronology.getMonthOfSecond(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	246	None	replace
288	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month,  iMinute);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month,  iMinute);	  int    thisMonth    =    iChronology.getMonthOfSecond(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	246	None	replace
289	[BUG]  [BUGGY]  String  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  incompatible  types  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  String  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	String  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    char    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  incompatible  types	184	None	replace
290	[BUG]  [BUGGY]  null  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  not  a  statement  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  null  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	null  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    char    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  not  a  statement	184	None	replace
291	[BUG]  [BUGGY]  nt  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  nt  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	nt  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    char    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
292	[BUG]  [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	t  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    char    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
293	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  thisYear);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  thisYear);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iDate);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
294	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  msg);  [CE]  cannot  find  symbol  msg  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  msg);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  msg);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iDate);    	non-compiled	[CE]  cannot  find  symbol  msg	103	None	replace
295	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  hour);  [CE]  cannot  find  symbol  hour  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  hour);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  hour);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iDate);    	non-compiled	[CE]  cannot  find  symbol  hour	103	None	replace
296	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  2);  [CE]  cannot  find  symbol  thisYear  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  2);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  2);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	181	None	replace
297	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  1,  iLeapMonth);  [CE]  cannot  find  symbol  thisYear  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  1,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  1,  iLeapMonth);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	181	None	replace
298	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  1,  iMax);  [CE]  cannot  find  symbol  thisYear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  1,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  1,  iMax);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	181	None	replace
299	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  3);  [CE]  cannot  find  symbol  thisYear  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  3);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  3);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	181	None	replace
300	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  1,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  1,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  1,  iHeapMonth);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	181	None	replace
301	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear);  [CE]  cannot  find  symbol  thisYear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	181	None	replace
302	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month  +  1);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month    +    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	181	None	replace
303	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  dayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  dayOfMonth);	  int    thisYear    =    iChronology.getYearValue(instant,    valueToAdd);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	217	None	replace
304	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)+  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)+  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month)+  1;	  int    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
305	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)-  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)-  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month)-  1;	  int    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
306	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month  +  1);	  int    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
307	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
308	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  iMax);	  int    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
309	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month).intValue();  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month).intValue();  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month).intValue();	  int    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
310	[BUG]  [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  month  =  iChronology.getMonthOfYear(instant,  month,  iMax);	  Integer    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	192	None	replace
311	[BUG]  [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant,  month  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant,  month  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  month  =  iChronology.getMonthOfYear(instant,  month  +  1);	  Integer    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	192	None	replace
312	[BUG]  [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant,  month)+  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant,  month)+  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  month  =  iChronology.getMonthOfYear(instant,  month)+  1;	  Integer    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	192	None	replace
313	[BUG]  [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  month  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);	  Integer    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	192	None	replace
314	[BUG]  [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant,  month)-  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant,  month)-  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  month  =  iChronology.getMonthOfYear(instant,  month)-  1;	  Integer    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	192	None	replace
315	[BUG]  [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant,  month).intValue();  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant,  month).intValue();  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  month  =  iChronology.getMonthOfYear(instant,  month).intValue();	  Integer    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	192	None	replace
316	[BUG]  [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant,  month,  iMin);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant,  month,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  month  =  iChronology.getMonthOfYear(instant,  month,  iMin);	  Integer    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	192	None	replace
317	[BUG]  [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant,  month,  MIN);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant,  month,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  month  =  iChronology.getMonthOfYear(instant,  month,  MIN);	  Integer    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	192	None	replace
318	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMillis(instant,  month);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMillis(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMillis(instant,  month);	  Integer    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	238	None	replace
319	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMillis(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMillis(instant,  year);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMillis(instant,  year);	  Integer    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  year	238	None	replace
320	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMillis(instant,  months);  [CE]  cannot  find  symbol  months  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMillis(instant,  months);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMillis(instant,  months);	  Integer    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  months	238	None	replace
321	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMillis(instant,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMillis(instant,  dayOfMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMillis(instant,  dayOfMonth);	  Integer    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	238	None	replace
322	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMillis(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMillis(instant,  datePart);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMillis(instant,  datePart);	  Integer    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  datePart	238	None	replace
323	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMillis(instant,  hour);  [CE]  cannot  find  symbol  hour  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMillis(instant,  hour);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMillis(instant,  hour);	  Integer    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  hour	238	None	replace
324	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  yearToUse);  [CE]  cannot  find  symbol  yearToUse  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  yearToUse);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  yearToUse);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    valueToAdd);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	201	None	replace
325	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  dayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  dayOfMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    valueToAdd);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	201	None	replace
326	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  year);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  year);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  year	56	None	replace
327	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  day);  [CE]  cannot  find  symbol  day  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  day);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  day);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  day	56	None	replace
328	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  datePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  datePart);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  datePart	56	None	replace
329	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  hour);  [CE]  cannot  find  symbol  hour  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  hour);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  hour);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  hour	56	None	replace
330	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  week);  [CE]  cannot  find  symbol  week  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  week);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  week);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  week	56	None	replace
331	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  timePart);  [CE]  cannot  find  symbol  timePart  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  timePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  timePart);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  timePart	56	None	replace
332	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month;    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
333	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfDay(instant,  month);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfDay(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonthOfDay(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month;    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
334	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  week);  [CE]  cannot  find  symbol  week  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  week);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  week);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    day);    	non-compiled	[CE]  cannot  find  symbol  week	91	None	replace
335	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  dayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  dayOfMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	134	None	replace
336	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  0);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  0);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  0);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
337	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  1);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  1);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
338	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  isize);  [CE]  cannot  find  symbol  isize  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  isize);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  isize);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  isize	134	None	replace
339	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  max);  [CE]  cannot  find  symbol  max  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  max);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  max);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  max	134	None	replace
340	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  msg);  [CE]  cannot  find  symbol  msg  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  msg);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  msg);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  msg	134	None	replace
341	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthDayOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	204	None	replace
342	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonthDayOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	204	None	replace
343	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  iMax);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	204	None	replace
344	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  iMinute);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  iMinute);	  int    thisYear    =    iChronology.getYearMonthDayOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	204	None	replace
345	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month  +  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month  +  1);	  int    thisYear    =    iChronology.getYearMonthDayOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	204	None	replace
346	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  iWeekMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  iWeekMonth);	  int    thisYear    =    iChronology.getYearMonthDayOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	204	None	replace
347	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month)+  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month)+  1;	  int    thisYear    =    iChronology.getYearMonthDayOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	204	None	replace
348	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  iDate);  [CE]  cannot  find  symbol  iDate  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  iDate);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  iDate);	  int    thisYear    =    iChronology.getYearMonthDayOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iDate	204	None	replace
349	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  minuendMonth);  [CE]  cannot  find  symbol  minuendMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  minuendMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  minuendMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iMinute);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	137	None	replace
350	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  valueToAdd);  [CE]  cannot  find  symbol  valueToAdd  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  valueToAdd);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  valueToAdd);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iMinute);    	non-compiled	[CE]  cannot  find  symbol  valueToAdd	137	None	replace
351	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  datePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  datePart);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iMinute);    	non-compiled	[CE]  cannot  find  symbol  datePart	137	None	replace
352	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN  +  1);  [CE]  cannot  find  symbol  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN  +  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN  +  1);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iMinute);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
353	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iMax);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iMax);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
354	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  minuendMonth,  iMax);  [CE]  cannot  find  symbol  minuendMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  minuendMonth,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  minuendMonth,  iMax);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	136	None	replace
355	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iMin);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  iMin	136	None	replace
356	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  months,  MIN,  iMax);  [CE]  cannot  find  symbol  months  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  months,  MIN,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  months,  MIN,  iMax);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  months	136	None	replace
357	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  0,  iMax);  [CE]  cannot  find  symbol  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  0,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  0,  iMax);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
358	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MILLIS_PER_DAY);  [CE]  cannot  find  symbol  MILLIS_PER_DAY  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MILLIS_PER_DAY);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  MILLIS_PER_DAY);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  MILLIS_PER_DAY	136	None	replace
359	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  _month);  [CE]  cannot  find  symbol  _month  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  _month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  _month);	  int    thisYear    =    iChronology.getYear(instant,    month,    iRight);    	non-compiled	[CE]  cannot  find  symbol  _month	197	None	replace
360	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  m);  [CE]  cannot  find  symbol  m  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  m);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  m);	  int    thisYear    =    iChronology.getYear(instant,    month,    iRight);    	non-compiled	[CE]  cannot  find  symbol  m	197	None	replace
361	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  hour);  [CE]  cannot  find  symbol  hour  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  hour);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  hour);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  hour	151	None	replace
362	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  week);  [CE]  cannot  find  symbol  week  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  week);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  week);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  week	151	None	replace
363	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  timePart);  [CE]  cannot  find  symbol  timePart  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  timePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  timePart);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  timePart	151	None	replace
364	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth);	  long    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	54	None	replace
365	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iHeapMonth);	  long    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	54	None	replace
366	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iMax);	  long    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	54	None	replace
367	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN);	  long    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	54	None	replace
368	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth);  [CE]  cannot  find  symbol  thisYear  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth);	  long    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	54	None	replace
369	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);	  long    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	54	None	replace
370	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iMinute);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iMinute);	  long    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	54	None	replace
371	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  month)+  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  month)+  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  month)+  1;	  int    month    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	245	None	replace
372	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  month)-  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  month)-  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  month)-  1;	  int    month    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	245	None	replace
373	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth);	  int    month    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	245	None	replace
374	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  month,  iMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  month,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  month,  iMax);	  int    month    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	245	None	replace
375	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  month  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  month  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  month  +  1);	  int    month    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	245	None	replace
376	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfDay(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getYearMonthOfDay(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getYearMonthOfDay(instant,  month);	  int    month    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	245	None	replace
377	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).intValue();  [CE]  int  cannot  be  dereferenced  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).intValue();  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).intValue();	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  int  cannot  be  dereferenced	166	None	replace
378	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iMax);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iMax);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
379	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  minuendMonth,  iMax);  [CE]  cannot  find  symbol  minuendMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  minuendMonth,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  minuendMonth,  iMax);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	98	None	replace
380	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iMin);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  iMin	98	None	replace
381	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  months,  MIN,  iMax);  [CE]  cannot  find  symbol  months  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  months,  MIN,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  months,  MIN,  iMax);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  months	98	None	replace
382	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  0,  iMax);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  0,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  0,  iMax);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
383	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  1);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  1);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    1);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	51	None	replace
384	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  2);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  2);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  2);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    1);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	51	None	replace
385	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  3);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  3);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  3);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    1);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	51	None	replace
386	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  1  -  iLeapMonth);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  1  -  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  1  -  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    1);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	51	None	replace
387	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  day);  [CE]  cannot  find  symbol  day  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  day);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  day);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iDays);    	non-compiled	[CE]  cannot  find  symbol  day	241	None	replace
388	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  thisYear  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	  float    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	208	None	replace
389	[BUG]  [BUGGY]  double  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisYear  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  double  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	double  thisMonth  =  iChronology.getMonthOfYear(instant);	  float    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	208	None	replace
390	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getDayOfMonth(instant);  [CE]  cannot  find  symbol  thisYear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getDayOfMonth(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getDayOfMonth(instant);	  float    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	208	None	replace
391	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfDay(instant);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfDay(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getMonthOfDay(instant);	  float    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	208	None	replace
392	[BUG]  [BUGGY]  long  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisYear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisMonth  =  iChronology.getMonthOfYear(instant);	  float    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	208	None	replace
393	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  year);	  float    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  year	208	None	replace
394	[BUG]  [BUGGY]  long  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  thisYear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	147	None	replace
395	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisYear  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	145	None	replace
396	[BUG]  [BUGGY]  long  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisYear  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	145	None	replace
397	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  year  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  year	145	None	replace
398	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisYear  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	145	None	replace
399	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	145	None	replace
400	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  timePart);  [CE]  cannot  find  symbol  timePart  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  timePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  timePart);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  timePart	89	None	replace
401	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  max);  [CE]  cannot  find  symbol  max  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  max);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  max);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  max	97	None	replace
402	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  minuendToUse);  [CE]  cannot  find  symbol  minuendToUse  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  minuendToUse);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  minuendToUse);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	97	None	replace
403	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months);  [CE]  cannot  find  symbol  months  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  months);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  months	17	None	replace
404	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  iMax);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    MIN);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	48	None	replace
405	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  iMin);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iMin	48	None	replace
406	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  iLeapMonth);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    MIN);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	48	None	replace
407	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	48	None	replace
408	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  dayOfMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  dayOfMonth);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	48	None	replace
409	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  iWeekMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  iWeekMonth);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	48	None	replace
410	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  max);  [CE]  cannot  find  symbol  max  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  max);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  max);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  max	48	None	replace
411	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  iDayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  iDayOfMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  iDayOfMonth);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	48	None	replace
412	[BUG]  [BUGGY]  int  thisYear  =  iChronology.dayOfMonth(instant,  month);  [CE]  no  suitable  method  found  for  dayOfMonth(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.dayOfMonth(instant,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.dayOfMonth(instant,  month);	  int    thisYear    =    iChronology.dayOfMonth(instant);    	non-compiled	[CE]  no  suitable  method  found  for  dayOfMonth(long,int)	2	None	replace
413	[BUG]  [BUGGY]  int  thisYear  =  iChronology.dayOfMonth(instant,  thisYear);  [CE]  no  suitable  method  found  for  dayOfMonth(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.dayOfMonth(instant,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.dayOfMonth(instant,  thisYear);	  int    thisYear    =    iChronology.dayOfMonth(instant);    	non-compiled	[CE]  no  suitable  method  found  for  dayOfMonth(long,int)	2	None	replace
414	[BUG]  [BUGGY]  int  thisYear  =  iChronology.dayOfMonth(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.dayOfMonth(instant,  year);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.dayOfMonth(instant,  year);	  int    thisYear    =    iChronology.dayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  year	2	None	replace
415	[BUG]  [BUGGY]  int  thisYear  =  iChronology.dayOfMonth(instant,  yearToUse);  [CE]  cannot  find  symbol  yearToUse  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.dayOfMonth(instant,  yearToUse);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.dayOfMonth(instant,  yearToUse);	  int    thisYear    =    iChronology.dayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	2	None	replace
416	[BUG]  [BUGGY]  int  thisYear  =  iChronology.dayOfMonth(instant,  day);  [CE]  cannot  find  symbol  day  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.dayOfMonth(instant,  day);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.dayOfMonth(instant,  day);	  int    thisYear    =    iChronology.dayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  day	2	None	replace
417	[BUG]  [BUGGY]  int  thisYear  =  iChronology.dayOfMonth(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.dayOfMonth(instant,  datePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.dayOfMonth(instant,  datePart);	  int    thisYear    =    iChronology.dayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  datePart	2	None	replace
418	[BUG]  [BUGGY]  int  thisYear  =  iChronology.dayOfMonth(instant,  months);  [CE]  cannot  find  symbol  months  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.dayOfMonth(instant,  months);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.dayOfMonth(instant,  months);	  int    thisYear    =    iChronology.dayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  months	2	None	replace
419	[BUG]  [BUGGY]  int  thisYear  =  iChronology.dayOfMonth(instant,  null);  [CE]  no  suitable  method  found  for  dayOfMonth(long,<null>)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.dayOfMonth(instant,  null);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.dayOfMonth(instant,  null);	  int    thisYear    =    iChronology.dayOfMonth(instant);    	non-compiled	[CE]  no  suitable  method  found  for  dayOfMonth(long,<null>)	2	None	replace
420	[BUG]  [BUGGY]  int  thisYear  =  iChronology.dayOfMonth(instant,  hour);  [CE]  cannot  find  symbol  hour  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.dayOfMonth(instant,  hour);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.dayOfMonth(instant,  hour);	  int    thisYear    =    iChronology.dayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  hour	2	None	replace
421	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  month);	  int    thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	234	None	replace
422	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  null);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  null);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  null);	  int    thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	234	None	replace
423	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  year);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  year);	  int    thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	234	None	replace
424	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisLeapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	234	None	replace
425	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  1);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  1);	  int    thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	234	None	replace
426	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  thisYear);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  thisYear);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  thisYear);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	243	None	replace
427	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMax  +  1);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMax  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMax  +  1);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	243	None	replace
428	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  iLeapMonth);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	243	None	replace
429	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  dayOfMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  dayOfMonth);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	243	None	replace
430	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  *  1);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  *  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  *  1);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	243	None	replace
431	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  2);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  2);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  2);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	243	None	replace
432	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  maxDom);  [CE]  cannot  find  symbol  maxDom  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  maxDom);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  maxDom);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  maxDom	243	None	replace
433	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  dayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  dayOfMonth);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    yearToUse);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	55	None	replace
434	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  valueToAdd);  [CE]  cannot  find  symbol  valueToAdd  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  valueToAdd);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  valueToAdd);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  valueToAdd	156	None	replace
435	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MILLIS_PER_DAY);  [CE]  cannot  find  symbol  MILLIS_PER_DAY  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MILLIS_PER_DAY);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MILLIS_PER_DAY);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  MILLIS_PER_DAY	156	None	replace
436	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MILLISECOND);  [CE]  cannot  find  symbol  MILLISECOND  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MILLISECOND);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MILLISECOND);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  MILLISECOND	156	None	replace
437	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  hour);  [CE]  cannot  find  symbol  hour  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  hour);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  hour);	  int    thisYear    =    iChronology.getYearMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  hour	3	None	replace
438	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  timePart);  [CE]  cannot  find  symbol  timePart  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  timePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  timePart);	  int    thisYear    =    iChronology.getYearMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  timePart	3	None	replace
439	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month).getMonth();  [CE]  int  cannot  be  dereferenced  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month).getMonth();  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month).getMonth();	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    month).getMonth();    	non-compiled	[CE]  int  cannot  be  dereferenced	219	None	replace
440	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month).getMonth();  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month).getMonth();  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month).getMonth();	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    month).getMonth();    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	219	None	replace
441	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month).getMonth();  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month).getMonth();  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month).getMonth();	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    month).getMonth();    	non-compiled	[CE]  cannot  find  symbol	219	None	replace
442	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month).getMonth();  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month).getMonth();  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month).getMonth();	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    month).getMonth();    	non-compiled	[CE]  cannot  find  symbol	219	None	replace
443	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month).getYear();  [CE]  int  cannot  be  dereferenced  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month).getYear();  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month).getYear();	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    month).getMonth();    	non-compiled	[CE]  int  cannot  be  dereferenced	219	None	replace
444	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  2;  [CE]  cannot  find  symbol  thisYear  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  2;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  2;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  thisYear	69	None	replace
445	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  3;  [CE]  cannot  find  symbol  thisYear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  3;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  3;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  thisYear	69	None	replace
446	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)/  1;  [CE]  cannot  find  symbol  thisYear  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)/  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)/  1;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  thisYear	69	None	replace
447	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  4;  [CE]  cannot  find  symbol  thisYear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  4;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  4;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  thisYear	69	None	replace
448	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1L;  [CE]  possible  loss  of  precision  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1L;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1L;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  possible  loss  of  precision	69	None	replace
449	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  timePart);  [CE]  cannot  find  symbol  timePart  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  timePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  timePart);	  int    thisYear    =    iChronology.getYearValue(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  timePart	59	None	replace
450	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  2);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  2);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  2);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
451	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1,  iMax);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1,  iMax);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
452	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	34	None	replace
453	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
454	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  3);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  3);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  3);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
455	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  *  1);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  *  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month  *  1);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
456	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1,  thisYear);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1,  thisYear);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1,  thisYear);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
457	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  iLeapMonth);  [CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  iLeapMonth);	  int    thisMonth    =    iChronology.getMillisOfDay(instant,    month);    	non-compiled	[CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;	106	None	replace
458	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  iHeapMonth);	  int    thisMonth    =    iChronology.getMillisOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	106	None	replace
459	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  MIN);  [CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  MIN);	  int    thisMonth    =    iChronology.getMillisOfDay(instant,    month);    	non-compiled	[CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;	106	None	replace
460	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  iMax);  [CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  iMax);	  int    thisMonth    =    iChronology.getMillisOfDay(instant,    month);    	non-compiled	[CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;	106	None	replace
461	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  dayOfMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  dayOfMonth);	  int    thisMonth    =    iChronology.getMillisOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	106	None	replace
462	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month  +  1);  [CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMillisOfDay(instant,  month  +  1);	  int    thisMonth    =    iChronology.getMillisOfDay(instant,    month);    	non-compiled	[CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;	106	None	replace
463	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  1);  [CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  1);	  int    thisMonth    =    iChronology.getMillisOfDay(instant,    month);    	non-compiled	[CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;	106	None	replace
464	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  iMin);	  int    thisMonth    =    iChronology.getMillisOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	106	None	replace
465	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  thisYear);  [CE]  cannot  find  symbol  thisYear  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  thisYear);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  thisYear);	  int    thisMonth    =    iChronology.getMillisOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	106	None	replace
466	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  [timeout]  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[timeout]	168	None	replace
467	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  year);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  year);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  year	168	None	replace
468	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  iLeapMonth);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iLeapMonth);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	153	None	replace
469	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  dayOfMonth,  iLeapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  dayOfMonth,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  dayOfMonth,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	153	None	replace
470	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  day,  iLeapMonth);  [CE]  cannot  find  symbol  day  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  day,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  day,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  day	153	None	replace
471	[BUG]  [BUGGY]  char  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iLeapMonth);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  char  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iLeapMonth);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	153	None	replace
472	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iLeapMonth);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iLeapMonth);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	153	None	replace
473	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  isize,  iLeapMonth);  [CE]  cannot  find  symbol  isize  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  isize,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  isize,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  isize	153	None	replace
474	[BUG]  [BUGGY]  float  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iLeapMonth);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iLeapMonth);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	153	None	replace
475	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  minuendToUse,  iLeapMonth);  [CE]  cannot  find  symbol  minuendToUse  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  minuendToUse,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  minuendToUse,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	153	None	replace
476	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfDay(instant,  month,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfDay(instant,  month,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfDay(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
477	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfDay(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfDay(instant,  month,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfDay(instant,  month,  iHeapMonth);	  int    thisYear    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	57	None	replace
478	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYearDay(instant,  month);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYearDay(instant,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYearDay(instant,  month);	  int    thisYear    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
479	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfDay(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfDay(instant,  month  +  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfDay(instant,  month  +  1);	  int    thisYear    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
480	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfDay(instant,  month,  iMax);  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfDay(instant,  month,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfDay(instant,  month,  iMax);	  int    thisYear    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
481	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  year);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  year);	  int    thisYear    =    iChronology.getYearMonthDayOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  year	203	None	replace
482	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  months);  [CE]  cannot  find  symbol  months  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  months);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  months);	  int    thisYear    =    iChronology.getYearMonthDayOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  months	203	None	replace
483	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  day);  [CE]  cannot  find  symbol  day  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  day);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  day);	  int    thisYear    =    iChronology.getYearMonthDayOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  day	203	None	replace
484	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  1);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  1);	  int    thisYear    =    iChronology.getYearMonthDayOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	203	None	replace
485	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  null);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  null);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  null);	  int    thisYear    =    iChronology.getYearMonthDayOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	203	None	replace
486	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  hour);  [CE]  cannot  find  symbol  hour  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  hour);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  hour);	  int    thisYear    =    iChronology.getYearMonthDayOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  hour	203	None	replace
487	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1,  thisYear);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1,  thisYear);	  int    thisYear    =    iChronology.getYearMonth(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
488	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  2);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  2);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  -  2);	  int    thisYear    =    iChronology.getYearMonth(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
489	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
490	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	186	None	replace
491	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1  +  1);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1  +  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1  +  1);	  int    thisYear    =    iChronology.getYearMonth(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
492	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  3);  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  3);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  -  3);	  int    thisYear    =    iChronology.getYearMonth(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
493	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  _month);  [CE]  cannot  find  symbol  _month  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  _month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  _month);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iRight);    	non-compiled	[CE]  cannot  find  symbol  _month	175	None	replace
494	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  cannot  find  symbol  thisYear  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getDayOfMonth(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    float    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	188	None	replace
495	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    float    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	188	None	replace
496	[BUG]  [BUGGY]  double  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  cannot  find  symbol  thisYear  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  double  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	double  thisMonth  =  iChronology.getDayOfMonth(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    float    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	188	None	replace
497	[BUG]  [BUGGY]  long  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  cannot  find  symbol  thisYear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisMonth  =  iChronology.getDayOfMonth(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    float    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	188	None	replace
498	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getYearMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getYearMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getYearMonth(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    float    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
499	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  1;  [CE]  cannot  find  symbol  thisYear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  1;	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    float    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	188	None	replace
500	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)/  1;  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)/  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month)/  1;	  int    thisYear    =    iChronology.getYearMonth(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
501	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)-  2;  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)-  2;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month)-  2;	  int    thisYear    =    iChronology.getYearMonth(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
502	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)-  3;  [CE]  cannot  find  symbol  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)-  3;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month)-  3;	  int    thisYear    =    iChronology.getYearMonth(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
503	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)-  1L;  [CE]  cannot  find  symbol  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)-  1L;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month)-  1L;	  int    thisYear    =    iChronology.getYearMonth(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
504	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)-  1  +  1;  [CE]  cannot  find  symbol  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)-  1  +  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month)-  1  +  1;	  int    thisYear    =    iChronology.getYearMonth(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
505	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  dayOfMonth,  iLeapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  dayOfMonth,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  dayOfMonth,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	45	None	replace
506	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iLeapMonth);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iLeapMonth);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	45	None	replace
507	[BUG]  [BUGGY]  char  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iLeapMonth);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  char  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iLeapMonth);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	45	None	replace
508	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  isize,  iLeapMonth);  [CE]  cannot  find  symbol  isize  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  isize,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  isize,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  isize	45	None	replace
509	[BUG]  [BUGGY]  float  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iLeapMonth);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iLeapMonth);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	45	None	replace
510	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  minuendToUse,  iLeapMonth);  [CE]  cannot  find  symbol  minuendToUse  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  minuendToUse,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  minuendToUse,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	45	None	replace
511	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  day,  iLeapMonth);  [CE]  cannot  find  symbol  day  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  day,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  day,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  day	45	None	replace
512	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol	262	None	replace
513	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	262	None	replace
514	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iWeekMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iWeekMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	262	None	replace
515	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iMillis);  [CE]  cannot  find  symbol  iMillis  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iMillis);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iMillis);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iMillis	262	None	replace
516	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iDayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iDayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iDayOfMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	262	None	replace
517	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iRight);  [CE]  cannot  find  symbol  iRight  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iRight);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iRight);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iRight	262	None	replace
518	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iHourToUse);  [CE]  cannot  find  symbol  iHourToUse  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iHourToUse);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iHourToUse);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iHourToUse	262	None	replace
519	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  timePart);  [CE]  cannot  find  symbol  timePart  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  timePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  timePart);	  int    thisYear    =    iChronology.getYearMillis(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  timePart	74	None	replace
520	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  thisYear);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1,  thisYear);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	229	None	replace
521	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iMax  +  1);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iMax  +  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  iMax  +  1);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	229	None	replace
522	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  thisYear  +  1);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  thisYear  +  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  thisYear  +  1);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	229	None	replace
523	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN  +  1);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN  +  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  MIN  +  1);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	229	None	replace
524	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  2);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  2);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  2);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	229	None	replace
525	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  iLeapMonth);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1,  iLeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	229	None	replace
526	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  *  1);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  *  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  *  1);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	229	None	replace
527	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  thisMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1,  thisMonth);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	229	None	replace
528	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getYearMillis(instant,  month);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getYearMillis(instant,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getYearMillis(instant,  month);	  long    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	73	None	replace
529	[BUG]  [BUGGY]  thisYear  =  iChronology.getYearMillis(instant,  month);  [CE]  cannot  find  symbol  thisYear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  thisYear  =  iChronology.getYearMillis(instant,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	thisYear  =  iChronology.getYearMillis(instant,  month);	  long    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	73	None	replace
530	[BUG]  [BUGGY]  byte  thisYear  =  iChronology.getYearMillis(instant);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  byte  thisYear  =  iChronology.getYearMillis(instant);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	byte  thisYear  =  iChronology.getYearMillis(instant);	  long    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	73	None	replace
531	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getYearMillis(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getYearMillis(instant,  year);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getYearMillis(instant,  year);	  long    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  year	73	None	replace
532	[BUG]  [BUGGY]  short  thisYear  =  iChronology.getYearMillis(instant);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  short  thisYear  =  iChronology.getYearMillis(instant);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	short  thisYear  =  iChronology.getYearMillis(instant);	  long    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	73	None	replace
533	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  0);  [CE]  cannot  find  symbol  thisYear  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  0);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  0);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	231	None	replace
534	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  iLeapMonth);  [CE]  cannot  find  symbol  thisYear  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	231	None	replace
535	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  0,  1);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  0,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  0,  1);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	231	None	replace
536	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  MIN);  [CE]  cannot  find  symbol  thisYear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  MIN);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	231	None	replace
537	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  12);  [CE]  cannot  find  symbol  thisYear  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  12);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  12);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	231	None	replace
538	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  1L);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,long)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  1L);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  1L);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,long)	231	None	replace
539	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  1);  [CE]  cannot  find  symbol  thisYear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  1);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	231	None	replace
540	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	125	None	replace
541	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iMax);  [CE]  cannot  find  symbol  months  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  months	125	None	replace
542	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  dayOfMonth,  iMax);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  dayOfMonth,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  dayOfMonth,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	125	None	replace
543	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	125	None	replace
544	[BUG]  [BUGGY]  char  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  char  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	125	None	replace
545	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  minuendToUse,  iMax);  [CE]  cannot  find  symbol  minuendToUse  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  minuendToUse,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  minuendToUse,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	125	None	replace
546	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  minuendMonth,  iMax);  [CE]  cannot  find  symbol  minuendMonth  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  minuendMonth,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  minuendMonth,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	125	None	replace
547	[BUG]  [BUGGY]  float  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	125	None	replace
548	[BUG]  [BUGGY]  String  thisYear  =  iChronology.getYearMillis(instant);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  String  thisYear  =  iChronology.getYearMillis(instant);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	String  thisYear  =  iChronology.getYearMillis(instant);	  char    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	79	None	replace
549	[BUG]  [BUGGY]  Char  thisYear  =  iChronology.getYearMillis(instant,  month);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Char  thisYear  =  iChronology.getYearMillis(instant,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Char  thisYear  =  iChronology.getYearMillis(instant,  month);	  char    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
550	[BUG]  [BUGGY]  char  thisYear  =  iChronology.getYearMillis(instant,  month);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  char  thisYear  =  iChronology.getYearMillis(instant,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisYear  =  iChronology.getYearMillis(instant,  month);	  char    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	79	None	replace
551	[BUG]  [BUGGY]  Character  thisYear  =  iChronology.getYearMillis(instant);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Character  thisYear  =  iChronology.getYearMillis(instant);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Character  thisYear  =  iChronology.getYearMillis(instant);	  char    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	79	None	replace
552	[BUG]  [BUGGY]  Boolean  thisYear  =  iChronology.getYearMillis(instant);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Boolean  thisYear  =  iChronology.getYearMillis(instant);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Boolean  thisYear  =  iChronology.getYearMillis(instant);	  char    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	79	None	replace
553	[BUG]  [BUGGY]  double  thisYear  =  iChronology.getYearMillis(instant);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  double  thisYear  =  iChronology.getYearMillis(instant);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	double  thisYear  =  iChronology.getYearMillis(instant);	  char    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	79	None	replace
554	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDayMillis(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfDayMillis(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfDayMillis(instant,  month);	  int    month    =    iChronology.getMonthOfDay(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	24	None	replace
555	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  yearToUse);  [CE]  cannot  find  symbol  yearToUse  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  yearToUse);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  yearToUse);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    day);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	252	None	replace
556	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month));  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month));  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month));	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    month));    	non-compiled	[CE]  ';'  expected	21	None	replace
557	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  null);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,<null>)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  null);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  null);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,<null>)	207	None	replace
558	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  week);  [CE]  cannot  find  symbol  week  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  week);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  week);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  week	207	None	replace
559	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  yearToUse);  [CE]  cannot  find  symbol  yearToUse  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  yearToUse);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  yearToUse);	  int    thisYear    =    iChronology.getYearMillis(instant,    datePart);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	76	None	replace
560	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month  +  1);  [CE]  cannot  find  symbol  thisYear  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  month  +  1);	  int    months    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	29	None	replace
561	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month  -  1);  [CE]  cannot  find  symbol  thisYear  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month  -  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  month  -  1);	  int    months    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	29	None	replace
562	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);	  int    months    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	29	None	replace
563	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month)+  1;  [CE]  cannot  find  symbol  thisYear  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month)+  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  month)+  1;	  int    months    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	29	None	replace
564	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month)-  1;  [CE]  cannot  find  symbol  thisYear  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month)-  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  month)-  1;	  int    months    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	29	None	replace
565	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  month,  iMax);	  int    months    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	29	None	replace
566	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month),  iLeapMonth);  [CE]  ';'  expected  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month),  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  month),  iLeapMonth);	  int    months    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  ';'  expected	29	None	replace
567	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month,  1);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  month,  1);	  Integer    thisYear    =    iChronology.getYear(instant,    1);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	239	None	replace
568	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  1);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  1);	  Integer    thisYear    =    iChronology.getYear(instant,    1);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	239	None	replace
569	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  MIN,  1);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  MIN,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  MIN,  1);	  Integer    thisYear    =    iChronology.getYear(instant,    1);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	239	None	replace
570	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  iLeapMonth,  1);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  iLeapMonth,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  iLeapMonth,  1);	  Integer    thisYear    =    iChronology.getYear(instant,    1);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	239	None	replace
571	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  0,  1);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  0,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  0,  1);	  Integer    thisYear    =    iChronology.getYear(instant,    1);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	239	None	replace
572	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  months,  1);  [CE]  cannot  find  symbol  months  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  months,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  months,  1);	  Integer    thisYear    =    iChronology.getYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol  months	239	None	replace
573	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  yearToUse);  [CE]  cannot  find  symbol  yearToUse  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  yearToUse);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  yearToUse);	  int    thisMonth    =    iChronology.getYearMonth(instant,    dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	43	None	replace
574	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  MIN);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  MIN);	  int    thisMonth    =    iChronology.getYearMonth(instant,    dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
575	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    Integer    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	15	None	replace
576	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)/  1;  [CE]  cannot  find  symbol  thisYear  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)/  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)/  1;	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol  thisYear	108	None	replace
577	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  2;  [CE]  cannot  find  symbol  thisYear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  2;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  2;	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol  thisYear	108	None	replace
578	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month)-  1;  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month)-  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month)-  1;	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month)-    1;    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	108	None	replace
579	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  3;  [CE]  cannot  find  symbol  thisYear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  3;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  3;	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol  thisYear	108	None	replace
580	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  MIN);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  MIN);	  int    thisYear    =    iChronology.getYearValue(instant,    day);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
581	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  2;  [timeout]  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  2;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  2;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)-    1;    [timeout]    	non-compiled	[timeout]	126	None	replace
582	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  1  +  1;  [timeout]  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  1  +  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  1  +  1;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)-    1;    [timeout]    	non-compiled	[timeout]	126	None	replace
583	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  1L;  [CE]  possible  loss  of  precision  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  1L;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  1L;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)-    1;    [timeout]    	non-compiled	[CE]  possible  loss  of  precision	126	None	replace
584	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)-  1;  [timeout]  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)-  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month)-  1;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)-    1;    [timeout]    	non-compiled	[timeout]	126	None	replace
585	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  3;  [timeout]  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  3;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  3;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)-    1;    [timeout]    	non-compiled	[timeout]	126	None	replace
586	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  MIN,  iMax);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  MIN,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  MIN,  iMax);	  int    thisYear    =    iChronology.getYearValue(instant,    iMax);    	non-compiled	[CE]  cannot  find  symbol	263	None	replace
587	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  iLeapMonth,  iMax);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  iLeapMonth,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  iLeapMonth,  iMax);	  int    thisYear    =    iChronology.getYearValue(instant,    iMax);    	non-compiled	[CE]  cannot  find  symbol	263	None	replace
588	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	11	None	replace
589	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  iMax);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	11	None	replace
590	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  iHeapMonth);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	11	None	replace
591	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  MIN);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  MIN);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	11	None	replace
592	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  iMinute);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  iMinute);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	11	None	replace
593	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  iWeekMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  iWeekMonth);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	11	None	replace
594	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  0);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  0);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  0);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	11	None	replace
595	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  1);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  1);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	11	None	replace
596	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  dayOfMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  dayOfMonth);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	11	None	replace
597	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  minuendMonth);  [CE]  cannot  find  symbol  minuendMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  minuendMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  minuendMonth);	  int    thisYear    =    iChronology.getYear(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	82	None	replace
598	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  timePart);  [CE]  cannot  find  symbol  timePart  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  timePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  timePart);	  int    thisYear    =    iChronology.getYear(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  timePart	82	None	replace
599	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN_MONTH);  [CE]  cannot  find  symbol  MIN_MONTH  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN_MONTH);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  MIN_MONTH);	  int    thisYear    =    iChronology.getYear(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  MIN_MONTH	82	None	replace
600	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  day);  [CE]  cannot  find  symbol  day  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  day);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  day);	  int    thisYear    =    iChronology.getYear(instant,    month,    iDays);    	non-compiled	[CE]  cannot  find  symbol  day	85	None	replace
601	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  0);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  0);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  0);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
602	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
603	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	92	None	replace
604	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  0,  1);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  0,  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  0,  1);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
605	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  iMax);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  iMax);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
606	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  MIN);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  MIN);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
607	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  1L);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  1L);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  1L);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
608	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iLeapMonth);  [CE]  no  suitable  method  found  for  getDayOfMonth(long,long)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iLeapMonth);	  long    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(long,long)	163	None	replace
609	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMax);  [CE]  no  suitable  method  found  for  getDayOfMonth(long,long)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMax);	  long    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(long,long)	163	None	replace
610	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iLeapMonth);  [CE]  cannot  find  symbol  thisYear  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  month,  iLeapMonth);	  long    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	163	None	replace
611	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iHeapMonth);	  long    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	163	None	replace
612	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN);  [CE]  no  suitable  method  found  for  getDayOfMonth(long,long)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN);	  long    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(long,long)	163	None	replace
613	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getDayOfMonth(instant,  month);  [timeout]  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getDayOfMonth(instant,  month);	  long    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[timeout]	163	None	replace
614	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMinute);  [timeout]  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMinute);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMinute);	  long    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[timeout]	163	None	replace
615	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  0,  null);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,<null>)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  0,  null);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  0,  null);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    null);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,<null>)	148	None	replace
616	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  false);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,boolean)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  false);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  false);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    null);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,boolean)	148	None	replace
617	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  _month);  [CE]  cannot  find  symbol  _month  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  _month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  _month);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iMinutes);    	non-compiled	[CE]  cannot  find  symbol  _month	214	None	replace
618	[BUG]  [BUGGY]  double  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  thisYear  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  double  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	double  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	183	None	replace
619	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1;  [CE]  cannot  find  symbol  thisYear  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1;	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	183	None	replace
620	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getYearMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getYearMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getYearMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
621	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getMonthOfDay(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
622	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1,  thisYear);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1,  thisYear);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
623	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  2);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  2);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  2);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
624	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1,  iMax);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1,  iMax);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
625	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	100	None	replace
626	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  3);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  3);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  3);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
627	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  *  1);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  *  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  *  1);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
628	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
629	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  year);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  year);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  year	150	None	replace
630	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getYearMonthDayMillis(instant);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getYearMonthDayMillis(instant);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getYearMonthDayMillis(instant);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	150	None	replace
631	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  months);  [CE]  cannot  find  symbol  months  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  months);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  months);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  months	150	None	replace
632	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  datePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  datePart);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  datePart	150	None	replace
633	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  day);  [CE]  cannot  find  symbol  day  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  day);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  day);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  day	150	None	replace
634	[BUG]  [BUGGY]  char  thisYear  =  iChronology.getYearMonthDayMillis(instant);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  char  thisYear  =  iChronology.getYearMonthDayMillis(instant);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisYear  =  iChronology.getYearMonthDayMillis(instant);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	150	None	replace
635	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(thisYear,  month);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	150	None	replace
636	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  day);  [CE]  cannot  find  symbol  day  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  day);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  day);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iWeekMonth);    	non-compiled	[CE]  cannot  find  symbol  day	176	None	replace
637	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMinutes);  [CE]  cannot  find  symbol  iMinutes  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMinutes);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMinutes);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    datePart);    	non-compiled	[CE]  cannot  find  symbol  iMinutes	261	None	replace
638	[BUG]  [BUGGY]  float  thisYear  =  iChronology.getYearMillis(instant,  month);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisYear  =  iChronology.getYearMillis(instant,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisYear  =  iChronology.getYearMillis(instant,  month);	  float    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	202	None	replace
639	[BUG]  [BUGGY]  float  thisYear  =  iChronology.getYearMillis(instant,  thisYear);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisYear  =  iChronology.getYearMillis(instant,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisYear  =  iChronology.getYearMillis(instant,  thisYear);	  float    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	202	None	replace
640	[BUG]  [BUGGY]  float  thisYear  =  iChronology.getYearMillis(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisYear  =  iChronology.getYearMillis(instant,  year);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisYear  =  iChronology.getYearMillis(instant,  year);	  float    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  year	202	None	replace
641	[BUG]  [BUGGY]  float  thisYear  =  iChronology.getYearMillis(instant,  yearToUse);  [CE]  cannot  find  symbol  yearToUse  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisYear  =  iChronology.getYearMillis(instant,  yearToUse);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisYear  =  iChronology.getYearMillis(instant,  yearToUse);	  float    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	202	None	replace
642	[BUG]  [BUGGY]  float  thisYear  =  iChronology.getYearMillis(instant,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisYear  =  iChronology.getYearMillis(instant,  dayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisYear  =  iChronology.getYearMillis(instant,  dayOfMonth);	  float    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	202	None	replace
643	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  thisYear);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  month,  thisYear);	  int    thisYear    =    iChronology.getYearMillis(instant,    thisYear);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	75	None	replace
644	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  thisYear,  month);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  thisYear,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  thisYear,  month);	  int    thisYear    =    iChronology.getYearMillis(instant,    thisYear);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	75	None	replace
645	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getYearMillis(instant,  thisYear);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getYearMillis(instant,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getYearMillis(instant,  thisYear);	  int    thisYear    =    iChronology.getYearMillis(instant,    thisYear);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	75	None	replace
646	[BUG]  [BUGGY]  char  thisYear  =  iChronology.getYearMillis(instant,  thisYear);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  char  thisYear  =  iChronology.getYearMillis(instant,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisYear  =  iChronology.getYearMillis(instant,  thisYear);	  int    thisYear    =    iChronology.getYearMillis(instant,    thisYear);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	75	None	replace
647	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  thisMonth,  thisYear);  [CE]  cannot  find  symbol  thisMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  thisMonth,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  thisMonth,  thisYear);	  int    thisYear    =    iChronology.getYearMillis(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	75	None	replace
648	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  yearToUse,  thisYear);  [CE]  cannot  find  symbol  yearToUse  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  yearToUse,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  yearToUse,  thisYear);	  int    thisYear    =    iChronology.getYearMillis(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	75	None	replace
649	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  months,  thisYear);  [CE]  cannot  find  symbol  months  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  months,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  months,  thisYear);	  int    thisYear    =    iChronology.getYearMillis(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  months	75	None	replace
650	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  MIN,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  MIN,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  MIN,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	178	None	replace
651	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendMonth,  iMax);  [CE]  cannot  find  symbol  minuendMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendMonth,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendMonth,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	178	None	replace
652	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  dayOfMonth,  iMax);  [CE]  cannot  find  symbol  dayOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  dayOfMonth,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  dayOfMonth,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	178	None	replace
653	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  max,  iChronology);  [CE]  cannot  find  symbol  max  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  max,  iChronology);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  max,  iChronology);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  max	178	None	replace
654	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendInstant,  iMax);  [CE]  cannot  find  symbol  minuendInstant  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendInstant,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendInstant,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendInstant	178	None	replace
655	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  valueToAdd,  iMax);  [CE]  cannot  find  symbol  valueToAdd  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  valueToAdd,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  valueToAdd,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  valueToAdd	178	None	replace
656	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendToUse,  iMax);  [CE]  cannot  find  symbol  minuendToUse  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendToUse,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendToUse,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	178	None	replace
657	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  datePart,  iMax);  [CE]  cannot  find  symbol  datePart  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  datePart,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  datePart,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  datePart	178	None	replace
658	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  this);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  this);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  this);	  int    thisYear    =    iChronology.getYearMonth(instant,    null);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
659	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  null,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  null,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  null,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    null);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	6	None	replace
660	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  null,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  null,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  null,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    null);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
661	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  null,  iChronology);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  null,  iChronology);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  null,  iChronology);	  int    thisYear    =    iChronology.getYearMonth(instant,    null);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
662	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  null,  this);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  null,  this);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  null,  this);	  int    thisYear    =    iChronology.getYearMonth(instant,    null);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
663	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  null);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  null);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  null);	  int    thisYear    =    iChronology.getYear(instant,    null);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	112	None	replace
664	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  thisYear,  null);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  thisYear,  null);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  thisYear,  null);	  int    thisYear    =    iChronology.getYear(instant,    null);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	112	None	replace
665	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  yearToUse,  null);  [CE]  cannot  find  symbol  yearToUse  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  yearToUse,  null);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  yearToUse,  null);	  int    thisYear    =    iChronology.getYear(instant,    null);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	112	None	replace
666	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  null,  iLeapMonth);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  null,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  null,  iLeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    null);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	112	None	replace
667	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  null,  thisYear);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  null,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  null,  thisYear);	  int    thisYear    =    iChronology.getYear(instant,    null);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	112	None	replace
668	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  thisMonth,  null);  [CE]  cannot  find  symbol  thisMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  thisMonth,  null);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  thisMonth,  null);	  int    thisYear    =    iChronology.getYear(instant,    null);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	112	None	replace
669	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  thisDay,  null);  [CE]  cannot  find  symbol  thisDay  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  thisDay,  null);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  thisDay,  null);	  int    thisYear    =    iChronology.getYear(instant,    null);    	non-compiled	[CE]  cannot  find  symbol  thisDay	112	None	replace
670	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  months,  null);  [CE]  cannot  find  symbol  months  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  months,  null);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  months,  null);	  int    thisYear    =    iChronology.getYear(instant,    null);    	non-compiled	[CE]  cannot  find  symbol  months	112	None	replace
671	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  null,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  null,  thisMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  null,  thisMonth);	  int    thisYear    =    iChronology.getYear(instant,    null);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	112	None	replace
672	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  valueToAdd);  [CE]  cannot  find  symbol  valueToAdd  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  valueToAdd);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  valueToAdd);	  int    thisYear    =    iChronology.getYear(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  valueToAdd	86	None	replace
673	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  month,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  month,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonth(instant,  month,  iLeapMonth);	  Integer    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
674	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  month,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonth(instant,  month,  iHeapMonth);	  Integer    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	129	None	replace
675	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  month,  iMax);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  month,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonth(instant,  month,  iMax);	  Integer    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
676	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  month  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonth(instant,  month  +  1);	  Integer    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
677	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  month,  iMinute);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonth(instant,  month,  iMinute);	  Integer    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	129	None	replace
678	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  month,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonth(instant,  month,  iMin);	  Integer    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	129	None	replace
679	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  month)+  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonth(instant,  month)+  1;	  Integer    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
680	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  month  -  1);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  month  -  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonth(instant,  month  -  1);	  Integer    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
681	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMin);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iMin	253	None	replace
682	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iLeapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	253	None	replace
683	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iHeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	253	None	replace
684	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iWeekMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iWeekMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	253	None	replace
685	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMillis);  [CE]  cannot  find  symbol  iMillis  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMillis);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMillis);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iMillis	253	None	replace
686	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  datePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  datePart);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  datePart	253	None	replace
687	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  max);  [CE]  cannot  find  symbol  max  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  max);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  max);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  max	253	None	replace
688	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  minuendMonth);  [CE]  cannot  find  symbol  minuendMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  minuendMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  minuendMonth);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iMinute);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	157	None	replace
689	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
690	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month,  iHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	67	None	replace
691	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month  +  1);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
692	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month,  iMax);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month,  iMax);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
693	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month  -  1);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month  -  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month  -  1);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
694	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month)+  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month)+  1;	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
695	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month)-  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month)-  1;	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
696	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  0);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  0);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  0);	  int    thisMonth    =    iChronology.getYearMonth(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	199	None	replace
697	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  0,  1);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  0,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  0,  1);	  int    thisMonth    =    iChronology.getYearMonth(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	199	None	replace
698	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  1L);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  1L);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  1L);	  int    thisMonth    =    iChronology.getYearMonth(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	199	None	replace
699	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMONTthOfYear(instant,  month);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMONTthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMONTthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMONTthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	259	None	replace
700	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  month);  [CE]  int  cannot  be  dereferenced  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month).getMonthOfYear(instant,    month);    	non-compiled	[CE]  int  cannot  be  dereferenced	257	None	replace
701	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  iLeapMonth);  [CE]  int  cannot  be  dereferenced  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  iLeapMonth);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month).getMonthOfYear(instant,    month);    	non-compiled	[CE]  int  cannot  be  dereferenced	257	None	replace
702	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  year);  [CE]  cannot  find  symbol  year  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  year);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  year);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month).getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  year	257	None	replace
703	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant);  [CE]  int  cannot  be  dereferenced  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month).getMonthOfYear(instant,    month);    	non-compiled	[CE]  int  cannot  be  dereferenced	257	None	replace
704	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getDayOfMonth(instant,  month);  [CE]  int  cannot  be  dereferenced  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getDayOfMonth(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month).getMonthOfYear(instant,    month);    	non-compiled	[CE]  int  cannot  be  dereferenced	257	None	replace
705	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  month).getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  month).getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  month).getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month).getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	257	None	replace
706	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  months);  [CE]  cannot  find  symbol  months  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  months);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  months);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month).getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  months	257	None	replace
707	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  month);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearValue(instant,  month);	  Integer    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
708	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  year);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearValue(instant,  year);	  Integer    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol  year	212	None	replace
709	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  1);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearValue(instant,  1);	  Integer    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
710	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  months);  [CE]  cannot  find  symbol  months  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  months);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearValue(instant,  months);	  Integer    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol  months	212	None	replace
711	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  null);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  null);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearValue(instant,  null);	  Integer    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
712	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  day);  [CE]  cannot  find  symbol  day  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  day);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearValue(instant,  day);	  Integer    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol  day	212	None	replace
713	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  hour);  [CE]  cannot  find  symbol  hour  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  hour);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearValue(instant,  hour);	  Integer    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol  hour	212	None	replace
714	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  MIN,  iMax);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  MIN,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1,  MIN,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	230	None	replace
715	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  thisYear,  iMax);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  thisYear,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1,  thisYear,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	230	None	replace
716	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  max,  iChronology);  [CE]  cannot  find  symbol  max  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  max,  iChronology);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1,  max,  iChronology);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  max	230	None	replace
717	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  minuendMonth,  iMax);  [CE]  cannot  find  symbol  minuendMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  minuendMonth,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1,  minuendMonth,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	230	None	replace
718	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  dayOfMonth,  iMax);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  dayOfMonth,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1,  dayOfMonth,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	230	None	replace
719	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  minuendInstant,  iMax);  [CE]  cannot  find  symbol  minuendInstant  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  minuendInstant,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1,  minuendInstant,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendInstant	230	None	replace
720	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  datePart,  iMax);  [CE]  cannot  find  symbol  datePart  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  datePart,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1,  datePart,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  datePart	230	None	replace
721	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  timePart,  iMax);  [CE]  cannot  find  symbol  timePart  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  timePart,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1,  timePart,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  timePart	230	None	replace
722	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  valueToAdd,  iMax);  [CE]  cannot  find  symbol  valueToAdd  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  valueToAdd,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1,  valueToAdd,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  valueToAdd	230	None	replace
723	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iLeapMonth);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iLeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	80	None	replace
724	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  dayOfMonth,  iLeapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  dayOfMonth,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  dayOfMonth,  iLeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	80	None	replace
725	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iLeapMonth,  iMax);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iLeapMonth,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  iLeapMonth,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	80	None	replace
726	[BUG]  [BUGGY]  char  thisYear  =  iChronology.getYear(instant,  month,  iLeapMonth);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  char  thisYear  =  iChronology.getYear(instant,  month,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisYear  =  iChronology.getYear(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	80	None	replace
727	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getYear(instant,  month,  iLeapMonth);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getYear(instant,  month,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getYear(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	80	None	replace
728	[BUG]  [BUGGY]  float  thisYear  =  iChronology.getYear(instant,  month,  iLeapMonth);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisYear  =  iChronology.getYear(instant,  month,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisYear  =  iChronology.getYear(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	80	None	replace
729	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  isize,  iLeapMonth);  [CE]  cannot  find  symbol  isize  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  isize,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  isize,  iLeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  isize	80	None	replace
730	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iLeapMonth,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iLeapMonth,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  iLeapMonth,  iMin);	  int    thisYear    =    iChronology.getYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	80	None	replace
731	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  dayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  dayOfMonth);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    datePart);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	250	None	replace
732	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  thisYear);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  thisYear);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  thisYear);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	52	None	replace
733	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMax  +  1);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMax  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMax  +  1);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	52	None	replace
734	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  iLeapMonth);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	52	None	replace
735	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  *  1);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  *  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  *  1);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	52	None	replace
736	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  2);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  2);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  2);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	52	None	replace
737	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	52	None	replace
738	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  instant);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  instant);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	52	None	replace
739	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
740	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonthDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	162	None	replace
741	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month  +  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month  +  1);	  int    thisYear    =    iChronology.getYearMonthDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
742	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month,  iMax);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
743	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month,  iMinute);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month,  iMinute);	  int    thisYear    =    iChronology.getYearMonthDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	162	None	replace
744	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month)+  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month)+  1;	  int    thisYear    =    iChronology.getYearMonthDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
745	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month)-  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month)-  1;	  int    thisYear    =    iChronology.getYearMonthDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
746	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month,  iWeekMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month,  iWeekMonth);	  int    thisYear    =    iChronology.getYearMonthDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	162	None	replace
747	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  dayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  dayOfMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    yearToUse);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	104	None	replace
748	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  hour);  [CE]  cannot  find  symbol  hour  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  hour);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  hour);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    yearToUse);    	non-compiled	[CE]  cannot  find  symbol  hour	104	None	replace
749	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  timePart);  [CE]  cannot  find  symbol  timePart  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  timePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  timePart);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    yearToUse);    	non-compiled	[CE]  cannot  find  symbol  timePart	104	None	replace
750	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  datePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  datePart);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    yearToUse);    	non-compiled	[CE]  cannot  find  symbol  datePart	104	None	replace
751	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  week);  [CE]  cannot  find  symbol  week  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  week);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  week);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    yearToUse);    	non-compiled	[CE]  cannot  find  symbol  week	104	None	replace
752	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month,  iMax);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  month,  iMax);	  Integer    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	127	None	replace
753	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month,  iLeapMonth);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  month,  iLeapMonth);	  Integer    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	127	None	replace
754	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  month,  iHeapMonth);	  Integer    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	127	None	replace
755	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  month,  iMin);	  Integer    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	127	None	replace
756	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month,  MIN);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  month,  MIN);	  Integer    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	127	None	replace
757	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month,  iMinute);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  month,  iMinute);	  Integer    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	127	None	replace
758	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month,  iDays);  [CE]  cannot  find  symbol  iDays  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month,  iDays);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  month,  iDays);	  Integer    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iDays	127	None	replace
759	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  MIN,  iMax);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  MIN,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  MIN,  iMax);	  int    thisMonth    =    iChronology.getYearMonth(instant,    iMax);    	non-compiled	[CE]  cannot  find  symbol	221	None	replace
760	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  iMax);  [CE]  no  suitable  method  found  for  dayOfMonth(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.dayOfMonth(instant,  iMax);	  int    thisMonth    =    iChronology.getYearMonth(instant,    iMax);    	non-compiled	[CE]  no  suitable  method  found  for  dayOfMonth(long,int)	221	None	replace
761	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  iMax);  [CE]  cannot  find  symbol  thisYear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  iMax);	  int    thisMonth    =    iChronology.getYearMonth(instant,    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisYear	221	None	replace
762	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  iMax,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  iMax,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  iMax,  iLeapMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    iMax);    	non-compiled	[CE]  cannot  find  symbol	221	None	replace
763	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)+  2;  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)+  2;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month)+  2;	  int    thisYear    =    iChronology.getYearMonth(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
764	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)+  3;  [CE]  cannot  find  symbol  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)+  3;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month)+  3;	  int    thisYear    =    iChronology.getYearMonth(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
765	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)+  4;  [CE]  cannot  find  symbol  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)+  4;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month)+  4;	  int    thisYear    =    iChronology.getYearMonth(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
766	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)+  5;  [CE]  cannot  find  symbol  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)+  5;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month)+  5;	  int    thisYear    =    iChronology.getYearMonth(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
767	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)+  1L;  [CE]  cannot  find  symbol  [FE]                                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)+  1L;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month)+  1L;	  int    thisYear    =    iChronology.getYearMonth(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
768	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  iLeapMonth,  iMax);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  iLeapMonth,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  iLeapMonth,  iMax);	  int    thisMonth    =    iChronology.getYearMonth(instant,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
769	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  iLeapMonth,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  iLeapMonth,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  iLeapMonth,  iMin);	  int    thisMonth    =    iChronology.getYearMonth(instant,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	42	None	replace
770	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  MIN,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  MIN,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  MIN,  iLeapMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
771	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  iLeapMonth,  iMillis);  [CE]  cannot  find  symbol  iMillis  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  iLeapMonth,  iMillis);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  iLeapMonth,  iMillis);	  int    thisMonth    =    iChronology.getYearMonth(instant,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iMillis	42	None	replace
772	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  iLeapMonth,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  iLeapMonth,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  iLeapMonth,  iHeapMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	42	None	replace
773	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMax);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iMax);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	44	None	replace
774	[BUG]  [BUGGY]  char  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMax);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  char  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iMax);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	44	None	replace
775	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  dayOfMonth,  iMax);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  dayOfMonth,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  dayOfMonth,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	44	None	replace
776	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  minuendMonth,  iMax);  [CE]  cannot  find  symbol  minuendMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  minuendMonth,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  minuendMonth,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	44	None	replace
777	[BUG]  [BUGGY]  float  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMax);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iMax);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	44	None	replace
778	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  months,  MIN,  iMax);  [CE]  cannot  find  symbol  months  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  months,  MIN,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  months,  MIN,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  months	44	None	replace
779	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  iMax);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYearMillis(instant,    iMax);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	227	None	replace
780	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  MIN,  iMax);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  MIN,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  MIN,  iMax);	  int    thisYear    =    iChronology.getYearMillis(instant,    iMax);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	227	None	replace
781	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  yearToUse,  iMax);  [CE]  cannot  find  symbol  yearToUse  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  yearToUse,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  yearToUse,  iMax);	  int    thisYear    =    iChronology.getYearMillis(instant,    iMax);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	227	None	replace
782	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getYearMillis(instant,  iMax);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getYearMillis(instant,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getYearMillis(instant,  iMax);	  int    thisYear    =    iChronology.getYearMillis(instant,    iMax);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	227	None	replace
783	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  months,  iMax);  [CE]  cannot  find  symbol  months  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  months,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  months,  iMax);	  int    thisYear    =    iChronology.getYearMillis(instant,    iMax);    	non-compiled	[CE]  cannot  find  symbol  months	227	None	replace
784	[BUG]  [BUGGY]  char  thisYear  =  iChronology.getYearMillis(instant,  iMax);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  char  thisYear  =  iChronology.getYearMillis(instant,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisYear  =  iChronology.getYearMillis(instant,  iMax);	  int    thisYear    =    iChronology.getYearMillis(instant,    iMax);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	227	None	replace
785	[BUG]  [BUGGY]  float  thisYear  =  iChronology.getYearMillis(instant,  iMax);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisYear  =  iChronology.getYearMillis(instant,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisYear  =  iChronology.getYearMillis(instant,  iMax);	  int    thisYear    =    iChronology.getYearMillis(instant,    iMax);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	227	None	replace
786	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	258	None	replace
787	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonthMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	258	None	replace
788	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  iMax);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYearMonthMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	258	None	replace
789	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMonth(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMonth(instant,  month  +  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMonth(instant,  month  +  1);	  int    thisYear    =    iChronology.getYearMonthMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	258	None	replace
790	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  iMinute);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  iMinute);	  int    thisYear    =    iChronology.getYearMonthMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	258	None	replace
791	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMonth(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMonth(instant,  month)+  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMonth(instant,  month)+  1;	  int    thisYear    =    iChronology.getYearMonthMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	258	None	replace
792	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  month);  [CE]  no  suitable  method  found  for  dayOfMonth(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.dayOfMonth(instant,  month);	  int    thisMonth    =    iChronology.dayOfMonth(instant);    	non-compiled	[CE]  no  suitable  method  found  for  dayOfMonth(long,int)	39	None	replace
793	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  iLeapMonth);  [CE]  no  suitable  method  found  for  dayOfMonth(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.dayOfMonth(instant,  iLeapMonth);	  int    thisMonth    =    iChronology.dayOfMonth(instant);    	non-compiled	[CE]  no  suitable  method  found  for  dayOfMonth(long,int)	39	None	replace
794	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  year);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.dayOfMonth(instant,  year);	  int    thisMonth    =    iChronology.dayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  year	39	None	replace
795	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  thisYear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  thisYear);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.dayOfMonth(instant,  thisYear);	  int    thisMonth    =    iChronology.dayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	39	None	replace
796	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  yearToUse);  [CE]  cannot  find  symbol  yearToUse  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  yearToUse);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.dayOfMonth(instant,  yearToUse);	  int    thisMonth    =    iChronology.dayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	39	None	replace
797	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  day);  [CE]  cannot  find  symbol  day  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  day);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.dayOfMonth(instant,  day);	  int    thisMonth    =    iChronology.dayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  day	39	None	replace
798	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  months);  [CE]  cannot  find  symbol  months  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  months);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.dayOfMonth(instant,  months);	  int    thisMonth    =    iChronology.dayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  months	39	None	replace
799	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  datePart);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.dayOfMonth(instant,  datePart);	  int    thisMonth    =    iChronology.dayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  datePart	39	None	replace
800	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  null);  [CE]  no  suitable  method  found  for  dayOfMonth(long,<null>)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  null);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.dayOfMonth(instant,  null);	  int    thisMonth    =    iChronology.dayOfMonth(instant);    	non-compiled	[CE]  no  suitable  method  found  for  dayOfMonth(long,<null>)	39	None	replace
801	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  minuendToUse);  [CE]  cannot  find  symbol  minuendToUse  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  minuendToUse);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  minuendToUse);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	46	None	replace
802	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  max);  [CE]  cannot  find  symbol  max  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  max);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  max);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  max	46	None	replace
803	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  dayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  dayOfMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    datePart);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	235	None	replace
804	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month));  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month));  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month));	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month));    	non-compiled	[CE]  ';'  expected	172	None	replace
805	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  thisYear);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  thisYear);	  int    thisYear    =    iChronology.getYear(instant,    hour);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	111	None	replace
806	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  thisYear,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  thisYear,  month);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	251	None	replace
807	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  thisYear,  year);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  thisYear,  year);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	251	None	replace
808	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  thisYear,  null);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  thisYear,  null);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  thisYear,  null);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	251	None	replace
809	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  thisYear);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  thisYear);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    thisYear);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	251	None	replace
810	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  null);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,<null>)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  null);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  null);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,<null>)	226	None	replace
811	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  day);  [CE]  cannot  find  symbol  day  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  day);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  day);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  day	226	None	replace
812	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	144	None	add
813	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getDayOfMonth(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getDayOfMonth(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getDayOfMonth(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	144	None	add
814	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	144	None	add
815	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getLeapMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getLeapMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getLeapMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	144	None	add
816	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMillisOfDay(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMillisOfDay(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMillisOfDay(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	144	None	add
817	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	144	None	add
818	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getHeapMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getHeapMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getHeapMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	144	None	add
819	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMinthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMinthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMinthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	144	None	add
820	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getSecondOfDay(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getSecondOfDay(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getSecondOfDay(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	144	None	add
821	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  dayOfMonth,  iLeapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  dayOfMonth,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  dayOfMonth,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	70	None	replace
822	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  leapMonth,  iLeapMonth);  [CE]  cannot  find  symbol  leapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  leapMonth,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  leapMonth,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  leapMonth	70	None	replace
823	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  isize,  iLeapMonth);  [CE]  cannot  find  symbol  isize  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  isize,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  isize,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  isize	70	None	replace
824	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iLeapMonth);  [CE]  cannot  find  symbol  months  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  months	70	None	replace
825	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  0,  iLeapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  0,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  0,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	70	None	replace
826	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  day,  iLeapMonth);  [CE]  cannot  find  symbol  day  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  day,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  day,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  day	70	None	replace
827	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  1);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  1);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	70	None	replace
828	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  iMax);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iMax);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	154	None	replace
829	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  dayOfMonth,  iMax);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  dayOfMonth,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  dayOfMonth,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	154	None	replace
830	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMax);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iMax);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	154	None	replace
831	[BUG]  [BUGGY]  char  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMax);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  char  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iMax);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	154	None	replace
832	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  months,  MIN,  iMax);  [CE]  cannot  find  symbol  months  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  months,  MIN,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  months,  MIN,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  months	154	None	replace
833	[BUG]  [BUGGY]  float  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMax);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iMax);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	154	None	replace
834	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  minuendMonth,  iMax);  [CE]  cannot  find  symbol  minuendMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  minuendMonth,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  minuendMonth,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	154	None	replace
835	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  iMin);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  iMin	154	None	replace
836	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  year);  [CE]  cannot  find  symbol  year  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  year);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  year);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  year	10	None	replace
837	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  months);  [CE]  cannot  find  symbol  months  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  months);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  months);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  months	10	None	replace
838	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  day);  [CE]  cannot  find  symbol  day  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  day);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  day);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  day	10	None	replace
839	[BUG]  [BUGGY]  long  thisMonth  =  iChronology.getDaysInYearMonth(instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisMonth  =  iChronology.getDaysInYearMonth(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisMonth  =  iChronology.getDaysInYearMonth(instant);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	10	None	replace
840	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  [CE]  cannot  find  symbol  thisYear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	10	None	replace
841	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  yearToUse);  [CE]  cannot  find  symbol  yearToUse  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  yearToUse);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  yearToUse);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	10	None	replace
842	[BUG]  [BUGGY]  char  thisMonth  =  iChronology.getDaysInYearMonth(instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  char  thisMonth  =  iChronology.getDaysInYearMonth(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisMonth  =  iChronology.getDaysInYearMonth(instant);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	10	None	replace
843	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  0);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  0);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  0);	  int    thisYear    =    iChronology.getYearValue(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
844	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  0,  1);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  0,  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  0,  1);	  int    thisYear    =    iChronology.getYearValue(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
845	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  1L);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  1L);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  1L);	  int    thisYear    =    iChronology.getYearValue(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
846	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	240	None	replace
847	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iWeekMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iWeekMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	240	None	replace
848	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iMillis);  [CE]  cannot  find  symbol  iMillis  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iMillis);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iMillis);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iMillis	240	None	replace
849	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iHourToUse);  [CE]  cannot  find  symbol  iHourToUse  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iHourToUse);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iHourToUse);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iHourToUse	240	None	replace
850	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iSize);  [CE]  cannot  find  symbol  iSize  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iSize);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iSize);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iSize	240	None	replace
851	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iRight);  [CE]  cannot  find  symbol  iRight  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iRight);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iRight);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iRight	240	None	replace
852	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  dayOfMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  dayOfMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	255	None	replace
853	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  minuendMonth);  [CE]  cannot  find  symbol  minuendMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  minuendMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  minuendMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	255	None	replace
854	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MILLIS_PER_DAY);  [CE]  cannot  find  symbol  MILLIS_PER_DAY  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MILLIS_PER_DAY);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MILLIS_PER_DAY);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  MILLIS_PER_DAY	255	None	replace
855	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  valueToAdd);  [CE]  cannot  find  symbol  valueToAdd  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  valueToAdd);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  valueToAdd);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  valueToAdd	255	None	replace
856	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  datePart);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  datePart);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  datePart	255	None	replace
857	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN  +  1);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN  +  1);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
858	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  0);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  0);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  0);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
859	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  max);  [CE]  cannot  find  symbol  max  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  max);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  max);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  max	32	None	replace
860	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  minuendToUse);  [CE]  cannot  find  symbol  minuendToUse  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  minuendToUse);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  minuendToUse);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	32	None	replace
861	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  MIN,  iMax);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  MIN,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  MIN,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	260	None	replace
862	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  minuendMonth,  iMax);  [CE]  cannot  find  symbol  minuendMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  minuendMonth,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  minuendMonth,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	260	None	replace
863	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  max,  iChronology);  [CE]  cannot  find  symbol  max  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  max,  iChronology);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  max,  iChronology);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  max	260	None	replace
864	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  dayOfMonth,  iMax);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  dayOfMonth,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  dayOfMonth,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	260	None	replace
865	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  minuendInstant,  iMax);  [CE]  cannot  find  symbol  minuendInstant  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  minuendInstant,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  minuendInstant,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendInstant	260	None	replace
866	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  datePart,  iMax);  [CE]  cannot  find  symbol  datePart  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  datePart,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  datePart,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  datePart	260	None	replace
867	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  max);  [CE]  cannot  find  symbol  max  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  max);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  max);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  max	260	None	replace
868	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  minuendToUse,  iMax);  [CE]  cannot  find  symbol  minuendToUse  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  minuendToUse,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  minuendToUse,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	260	None	replace
869	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  0,  iMax);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  0,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  0,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	260	None	replace
870	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getMonthOfYear(instant,  month);  [timeout]  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getMonthOfYear(instant,  month);	  Integer    thisYear    =    iChronology.getMonthOfYear(instant);    [timeout]    	non-compiled	[timeout]	130	None	replace
871	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonthOfYear(instant,  month);	  Integer    thisYear    =    iChronology.getMonthOfYear(instant);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
872	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonthOfYear(instant);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonthOfYear(instant);	  Integer    thisYear    =    iChronology.getMonthOfYear(instant);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
873	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  0);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  0);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  0);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
874	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN_MONTH);  [CE]  cannot  find  symbol  MIN_MONTH  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN_MONTH);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN_MONTH);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  MIN_MONTH	116	None	replace
875	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  month);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
876	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  year);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  year);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	224	None	replace
877	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  null);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  null);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  null);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
878	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  1);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  1);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
879	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  false);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  false);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  false);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
880	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iMax);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month,    iMax);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	81	None	replace
881	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  dayOfMonth,  iMax);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  dayOfMonth,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  dayOfMonth,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	81	None	replace
882	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  minuendMonth,  iMax);  [CE]  cannot  find  symbol  minuendMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  minuendMonth,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  minuendMonth,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	81	None	replace
883	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  months,  MIN,  iMax);  [CE]  cannot  find  symbol  months  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  months,  MIN,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  months,  MIN,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  months	81	None	replace
884	[BUG]  [BUGGY]  char  thisYear  =  iChronology.getYear(instant,  month,  iMax);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  char  thisYear  =  iChronology.getYear(instant,  month,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisYear  =  iChronology.getYear(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month,    iMax);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	81	None	replace
885	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getYear(instant,  month,  iMax);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getYear(instant,  month,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getYear(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month,    iMax);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	81	None	replace
886	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iMin);	  int    thisYear    =    iChronology.getYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  iMin	81	None	replace
887	[BUG]  [BUGGY]  float  thisYear  =  iChronology.getYear(instant,  month,  iMax);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisYear  =  iChronology.getYear(instant,  month,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisYear  =  iChronology.getYear(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month,    iMax);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	81	None	replace
888	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  year);  [CE]  cannot  find  symbol  year  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  year);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  year);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  year	16	None	replace
889	[BUG]  [BUGGY]  int  thisYear  =  iChronology.dayOfMonth()  -  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.dayOfMonth()  -  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.dayOfMonth()  -  1;	  int    thisYear    =    iChronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	4	None	replace
890	[BUG]  [BUGGY]  int  thisYear  =  iChronology.monthOfYear();  [CE]  incompatible  types  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.monthOfYear();  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.monthOfYear();	  int    thisYear    =    iChronology.dayOfMonth();    	non-compiled	[CE]  incompatible  types	4	None	replace
891	[BUG]  [BUGGY]  int  thisYear  =  iChronology.dayOfMonth()  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.dayOfMonth()  +  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.dayOfMonth()  +  1;	  int    thisYear    =    iChronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	4	None	replace
892	[BUG]  [BUGGY]  int  thisYear  =  iChronology.dayOfMonth()  /  iLeapMonth;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.dayOfMonth()  /  iLeapMonth;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.dayOfMonth()  /  iLeapMonth;	  int    thisYear    =    iChronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	4	None	replace
893	[BUG]  [BUGGY]  long  thisYear  =  iChronology.dayOfMonth();  [CE]  incompatible  types  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.dayOfMonth();  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.dayOfMonth();	  int    thisYear    =    iChronology.dayOfMonth();    	non-compiled	[CE]  incompatible  types	4	None	replace
894	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear();  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear();  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear();	  int    thisYear    =    iChronology.dayOfMonth();    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	4	None	replace
895	[BUG]  [BUGGY]  int  thisYear  =  iChronology.dayOfMonth()  *  iLeapMonth;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.dayOfMonth()  *  iLeapMonth;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.dayOfMonth()  *  iLeapMonth;	  int    thisYear    =    iChronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	4	None	replace
896	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth();  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth();  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getDayOfMonth();	  int    thisYear    =    iChronology.dayOfMonth();    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	4	None	replace
897	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
898	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  month);  [timeout]  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[timeout]	18	None	replace
899	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  [timeout]  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[timeout]	18	None	replace
900	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN,  iLeapMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol	256	None	replace
901	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN,  iHeapMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	256	None	replace
902	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN,  iWeekMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN,  iWeekMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	256	None	replace
903	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN,  iMillis);  [CE]  cannot  find  symbol  iMillis  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN,  iMillis);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN,  iMillis);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iMillis	256	None	replace
904	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN,  iRight);  [CE]  cannot  find  symbol  iRight  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN,  iRight);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN,  iRight);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iRight	256	None	replace
905	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYearValue(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
906	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  month,  iHeapMonth);	  int    thisYear    =    iChronology.getYearValue(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	58	None	replace
907	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month,  iMax);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYearValue(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
908	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month,  iMinute);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  month,  iMinute);	  int    thisYear    =    iChronology.getYearValue(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	58	None	replace
909	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month  +  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  month  +  1);	  int    thisYear    =    iChronology.getYearValue(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
910	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month,  iDays);  [CE]  cannot  find  symbol  iDays  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month,  iDays);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  month,  iDays);	  int    thisYear    =    iChronology.getYearValue(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iDays	58	None	replace
911	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month,  iWeekMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  month,  iWeekMonth);	  int    thisYear    =    iChronology.getYearValue(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	58	None	replace
912	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month,  iMillis);  [CE]  cannot  find  symbol  iMillis  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month,  iMillis);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  month,  iMillis);	  int    thisYear    =    iChronology.getYearValue(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMillis	58	None	replace
913	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  null);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  null);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  null);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    months);    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
914	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  MIN,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  MIN,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  MIN,  iLeapMonth);	  int    thisYear    =    iChronology.getYearValue(instant,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
915	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  iLeapMonth,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  iLeapMonth,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  iLeapMonth,  iMin);	  int    thisYear    =    iChronology.getYearValue(instant,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	60	None	replace
916	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  iLeapMonth,  iMillis);  [CE]  cannot  find  symbol  iMillis  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  iLeapMonth,  iMillis);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  iLeapMonth,  iMillis);	  int    thisYear    =    iChronology.getYearValue(instant,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iMillis	60	None	replace
917	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  iLeapMonth,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  iLeapMonth,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  iLeapMonth,  iHeapMonth);	  int    thisYear    =    iChronology.getYearValue(instant,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	60	None	replace
918	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  iLeapMonth,  month);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  iLeapMonth,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  iLeapMonth,  month);	  int    thisYear    =    iChronology.getYearValue(instant,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
919	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonthDay(instant,  month);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonthDay(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonthDay(instant,  month);	  Integer    thisYear    =    iChronology.getYearMonthDay(instant);    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
920	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonthDayMillis(instant);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonthDayMillis(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonthDayMillis(instant);	  Integer    thisYear    =    iChronology.getYearMonthDay(instant);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	132	None	replace
921	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonthDay(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonthDay(instant,  year);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonthDay(instant,  year);	  Integer    thisYear    =    iChronology.getYearMonthDay(instant);    	non-compiled	[CE]  cannot  find  symbol  year	132	None	replace
922	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonthDay(instant,  months);  [CE]  cannot  find  symbol  months  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonthDay(instant,  months);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonthDay(instant,  months);	  Integer    thisYear    =    iChronology.getYearMonthDay(instant);    	non-compiled	[CE]  cannot  find  symbol  months	132	None	replace
923	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonthDay(instant,  day);  [CE]  cannot  find  symbol  day  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonthDay(instant,  day);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonthDay(instant,  day);	  Integer    thisYear    =    iChronology.getYearMonthDay(instant);    	non-compiled	[CE]  cannot  find  symbol  day	132	None	replace
924	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonthDay(instant,  1);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonthDay(instant,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonthDay(instant,  1);	  Integer    thisYear    =    iChronology.getYearMonthDay(instant);    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
925	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iLeapMonth,  iMax);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iLeapMonth,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  iLeapMonth,  iMax);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
926	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iLeapMonth,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iLeapMonth,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  iLeapMonth,  iMin);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	133	None	replace
927	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iLeapMonth,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iLeapMonth,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  iLeapMonth,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	133	None	replace
928	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN  +  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN  +  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN  +  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
929	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iLeapMonth,  iMillis);  [CE]  cannot  find  symbol  iMillis  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iLeapMonth,  iMillis);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  iLeapMonth,  iMillis);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iMillis	133	None	replace
930	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthDay(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
931	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  iMax);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  iMax);	  int    thisYear    =    iChronology.getYearMonthDay(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
932	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonthDay(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	205	None	replace
933	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  thisLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  thisLeapMonth);	  int    thisYear    =    iChronology.getYearMonthDay(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	205	None	replace
934	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(month,  thisYear);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(month,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(month,  thisYear);	  int    thisYear    =    iChronology.getYearMonthDay(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
935	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  iMinute);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  iMinute);	  int    thisYear    =    iChronology.getYearMonthDay(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	205	None	replace
936	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  thisHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  thisHeapMonth);	  int    thisYear    =    iChronology.getYearMonthDay(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	205	None	replace
937	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  day);  [CE]  cannot  find  symbol  day  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  day);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  day);	  int    thisMonth    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  day	8	None	replace
938	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  2);  [CE]  cannot  find  symbol  thisYear  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  2);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  2);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	68	None	replace
939	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  iLeapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	68	None	replace
940	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  3);  [CE]  cannot  find  symbol  thisYear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  3);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  3);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	68	None	replace
941	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  *  1);  [CE]  cannot  find  symbol  thisYear  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  *  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  *  1);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	68	None	replace
942	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  iHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	68	None	replace
943	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear);  [CE]  cannot  find  symbol  thisYear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	68	None	replace
944	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)-  2;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)-  2;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month)-  2;	  int    thisMonth    =    iChronology.getYearMonth(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
945	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month),  iMax  -  1;  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month),  iMax  -  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month),  iMax  -  1;	  int    thisMonth    =    iChronology.getYearMonth(instant,    month)-    1;    	non-compiled	[CE]  ';'  expected	121	None	replace
946	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)-  3;  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)-  3;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month)-  3;	  int    thisMonth    =    iChronology.getYearMonth(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
947	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)-  1L;  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)-  1L;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month)-  1L;	  int    thisMonth    =    iChronology.getYearMonth(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
948	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  2;  [CE]  cannot  find  symbol  thisYear  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  2;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  2;	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  thisYear	107	None	replace
949	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  3;  [CE]  cannot  find  symbol  thisYear  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  3;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  3;	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  thisYear	107	None	replace
950	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  4;  [CE]  cannot  find  symbol  thisYear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  4;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  4;	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  thisYear	107	None	replace
951	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month)+  1;  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month)+  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month)+  1;	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month)+    1;    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	107	None	replace
952	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  2;  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  2;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  2;	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
953	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  3;  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  3;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  3;	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
954	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  4;  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  4;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  4;	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
955	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)/  1;  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)/  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month)/  1;	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
956	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  5;  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  5;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  5;	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
957	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  1L;  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  1L;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  1L;	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
958	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  1);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  1);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    1);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	160	None	replace
959	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  2);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  2);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  2);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    1);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	160	None	replace
960	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  3);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  3);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  3);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    1);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	160	None	replace
961	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN  +  1);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN  +  1);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    1);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	160	None	replace
962	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
963	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  year);  [CE]  cannot  find  symbol  year  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  year);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  year);	  int    thisMonth    =    iChronology.getMonthOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol  year	9	None	replace
964	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  dayOfMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  dayOfMonth);	  int    thisMonth    =    iChronology.getMonthOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	9	None	replace
965	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  month,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  month,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  month,  iLeapMonth);	  int    thisMonth    =    iChronology.getDaysMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
966	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  month,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  month,  iHeapMonth);	  int    thisMonth    =    iChronology.getDaysMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	180	None	replace
967	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  month  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  month  +  1);	  int    thisMonth    =    iChronology.getDaysMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
968	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  month,  iMax);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  month,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  month,  iMax);	  int    thisMonth    =    iChronology.getDaysMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
969	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  month)+  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  month)+  1;	  int    thisMonth    =    iChronology.getDaysMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
970	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  month)-  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  month)-  1;	  int    thisMonth    =    iChronology.getDaysMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
971	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  month,  iMinute);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  month,  iMinute);	  int    thisMonth    =    iChronology.getDaysMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	180	None	replace
972	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisYear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  months  =  iChronology.getMonthOfYear(instant);	  int    month    =    iChronology.getMonthOfYear(month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	191	None	replace
973	[BUG]  [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  month  =  iChronology.getMonthOfYear(instant);	  int    month    =    iChronology.getMonthOfYear(month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	191	None	replace
974	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iHeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	83	None	replace
975	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iWeekMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iWeekMonth);	  int    thisYear    =    iChronology.getYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	83	None	replace
976	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iDayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iDayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iDayOfMonth);	  int    thisYear    =    iChronology.getYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	83	None	replace
977	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iMonth);  [CE]  cannot  find  symbol  iMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iMonth);	  int    thisYear    =    iChronology.getYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iMonth	83	None	replace
978	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iMillis);  [CE]  cannot  find  symbol  iMillis  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iMillis);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iMillis);	  int    thisYear    =    iChronology.getYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iMillis	83	None	replace
979	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  datePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  MIN,  datePart);	  int    thisYear    =    iChronology.getYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  datePart	83	None	replace
980	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  minuendMonth,  iMax);  [CE]  cannot  find  symbol  minuendMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  minuendMonth,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  minuendMonth,  iMax);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	33	None	replace
981	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  months,  MIN,  iMax);  [CE]  cannot  find  symbol  months  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  months,  MIN,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  months,  MIN,  iMax);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  months	33	None	replace
982	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MILLIS_PER_DAY);  [CE]  cannot  find  symbol  MILLIS_PER_DAY  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MILLIS_PER_DAY);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MILLIS_PER_DAY);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  MILLIS_PER_DAY	33	None	replace
983	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  0,  iMax);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  0,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  0,  iMax);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
984	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)-  2;  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)-  2;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month)-  2;	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
985	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)-  3;  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)-  3;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month)-  3;	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
986	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)-  1L;  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)-  1L;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month)-  1L;	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
987	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month),  iMax  -  1;  [CE]  ';'  expected  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month),  iMax  -  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month),  iMax  -  1;	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month)-    1;    	non-compiled	[CE]  ';'  expected	37	None	replace
988	[BUG]  [BUGGY]  char  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  possible  loss  of  precision  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  char  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisMonth  =  iChronology.getDayOfMonth(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    char    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  possible  loss  of  precision	189	None	replace
989	[BUG]  [BUGGY]  String  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  incompatible  types  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  String  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	String  thisMonth  =  iChronology.getDayOfMonth(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    char    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  incompatible  types	189	None	replace
990	[BUG]  [BUGGY]  char  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  char  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    char    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	189	None	replace
991	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  this);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  this);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  this);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    null);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
992	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  null,  iChronology);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  null,  iChronology);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  null,  iChronology);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    null);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
993	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  null,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  null,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  null,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    null);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	93	None	replace
994	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  null,  this);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  null,  this);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  null,  this);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    null);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
995	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  null,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  null,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  null,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    null);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
996	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iWeekMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  iWeekMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iLocale);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	140	None	replace
997	[BUG]  [BUGGY]  int  year  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  thisYear  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  year  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  year  =  iChronology.getMonthOfYear(instant,  month);	  int    month    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  thisYear	27	None	replace
998	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  iLeapMonth);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMillis(instant,    month);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	72	None	replace
999	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  month,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	72	None	replace
1000	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  month,  iMin);	  int    thisYear    =    iChronology.getYearMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	72	None	replace
1001	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  MIN);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  month,  MIN);	  int    thisYear    =    iChronology.getYearMillis(instant,    month);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	72	None	replace
1002	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  iMinute);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  month,  iMinute);	  int    thisYear    =    iChronology.getYearMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	72	None	replace
1003	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  iWeekMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  month,  iWeekMonth);	  int    thisYear    =    iChronology.getYearMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	72	None	replace
1004	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  iDayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  iDayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  month,  iDayOfMonth);	  int    thisYear    =    iChronology.getYearMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	72	None	replace
1005	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  iDays);  [CE]  cannot  find  symbol  iDays  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  iDays);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  month,  iDays);	  int    thisYear    =    iChronology.getYearMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iDays	72	None	replace
1006	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  leapMonth,  iLeapMonth);  [CE]  cannot  find  symbol  leapMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  leapMonth,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  leapMonth,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  leapMonth	124	None	replace
1007	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  dayOfMonth,  iLeapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  dayOfMonth,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  dayOfMonth,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	124	None	replace
1008	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  isize,  iLeapMonth);  [CE]  cannot  find  symbol  isize  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  isize,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  isize,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  isize	124	None	replace
1009	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iLeapMonth);  [CE]  cannot  find  symbol  months  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  months	124	None	replace
1010	[BUG]  [BUGGY]  char  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  char  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	124	None	replace
1011	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	124	None	replace
1012	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN  +  iLeapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN  +  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN  +  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	124	None	replace
1013	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getDaysInYearMonth(instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getDaysInYearMonth(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getDaysInYearMonth(instant);	  Integer    thisYear    =    iChronology.getDayOfMonth(instant);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	131	None	replace
1014	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	158	None	replace
1015	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  dayOfMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  dayOfMonth);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	158	None	replace
1016	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  iWeekMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  iWeekMonth);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	158	None	replace
1017	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  datePart);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  datePart);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  datePart	158	None	replace
1018	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  max);  [CE]  cannot  find  symbol  max  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  max);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  max);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  max	158	None	replace
1019	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  max);  [CE]  cannot  find  symbol  max  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  max);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  max);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  max	155	None	replace
1020	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  minuendToUse);  [CE]  cannot  find  symbol  minuendToUse  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  minuendToUse);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  minuendToUse);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	155	None	replace
1021	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYearOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	225	None	replace
1022	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iHeapMonth);	  int    thisYear    =    iChronology.getYearOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	225	None	replace
1023	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iMax);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYearOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	225	None	replace
1024	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iMinute);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iMinute);	  int    thisYear    =    iChronology.getYearOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	225	None	replace
1025	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month  +  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  month  +  1);	  int    thisYear    =    iChronology.getYearOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	225	None	replace
1026	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iLocale);  [CE]  cannot  find  symbol  iLocale  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iLocale);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iLocale);	  int    thisYear    =    iChronology.getYearOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iLocale	225	None	replace
1027	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iDate);  [CE]  cannot  find  symbol  iDate  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iDate);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iDate);	  int    thisYear    =    iChronology.getYearOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iDate	225	None	replace
1028	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month)+  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  month)+  1;	  int    thisYear    =    iChronology.getYearOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	225	None	replace
1029	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  2;  [CE]  cannot  find  symbol  thisYear  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  2;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  2;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol  thisYear	71	None	replace
1030	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1  +  1;  [CE]  cannot  find  symbol  thisYear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1  +  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1  +  1;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol  thisYear	71	None	replace
1031	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  3;  [CE]  cannot  find  symbol  thisYear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  3;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  3;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol  thisYear	71	None	replace
1032	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1L;  [CE]  possible  loss  of  precision  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1L;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1L;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
1033	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  iLeapMonth,  iMax);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  iLeapMonth,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  iLeapMonth,  iMax);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
1034	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN  +  iLeapMonth);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN  +  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN  +  iLeapMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
1035	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  iLeapMonth,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  iLeapMonth,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  iLeapMonth,  iMin);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	115	None	replace
1036	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  datePart);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  datePart);	  Integer    thisYear    =    iChronology.getYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  datePart	237	None	replace
1037	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  year);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  year);	  int    thisYear    =    iChronology.getYearMonthMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  year	193	None	replace
1038	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getYearMonthMillis(instant);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getYearMonthMillis(instant);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getYearMonthMillis(instant);	  int    thisYear    =    iChronology.getYearMonthMillis(instant);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	193	None	replace
1039	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  dayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  dayOfMonth);	  int    thisYear    =    iChronology.getYearMonthMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	193	None	replace
1040	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  datePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  datePart);	  int    thisYear    =    iChronology.getYearMonthMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  datePart	193	None	replace
1041	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  months);  [CE]  cannot  find  symbol  months  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  months);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  months);	  int    thisYear    =    iChronology.getYearMonthMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  months	193	None	replace
1042	[BUG]  [BUGGY]  char  thisYear  =  iChronology.getYearMonthMillis(instant);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  char  thisYear  =  iChronology.getYearMonthMillis(instant);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisYear  =  iChronology.getYearMonthMillis(instant);	  int    thisYear    =    iChronology.getYearMonthMillis(instant);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	193	None	replace
1043	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  hour);  [CE]  cannot  find  symbol  hour  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  hour);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  hour);	  int    thisYear    =    iChronology.getYearMonthMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  hour	193	None	replace
1044	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMinutes);  [CE]  cannot  find  symbol  iMinutes  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMinutes);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMinutes);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMinutes	159	None	replace
1045	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MILLIS_PER_DAY);  [CE]  cannot  find  symbol  MILLIS_PER_DAY  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MILLIS_PER_DAY);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MILLIS_PER_DAY);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  MILLIS_PER_DAY	47	None	replace
1046	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonths(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonths(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
1047	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonths(instant,  month,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonths(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	220	None	replace
1048	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month,  iMax);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonths(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYearMonths(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
1049	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month,  iMinute);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonths(instant,  month,  iMinute);	  int    thisYear    =    iChronology.getYearMonths(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	220	None	replace
1050	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month  +  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonths(instant,  month  +  1);	  int    thisYear    =    iChronology.getYearMonths(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
1051	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month,  iWeekMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonths(instant,  month,  iWeekMonth);	  int    thisYear    =    iChronology.getYearMonths(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	220	None	replace
1052	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month,  iLocale);  [CE]  cannot  find  symbol  iLocale  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month,  iLocale);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonths(instant,  month,  iLocale);	  int    thisYear    =    iChronology.getYearMonths(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iLocale	220	None	replace
1053	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month,  iDate);  [CE]  cannot  find  symbol  iDate  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month,  iDate);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonths(instant,  month,  iDate);	  int    thisYear    =    iChronology.getYearMonths(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iDate	220	None	replace
1054	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  2);  [timeout]  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  2);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  2);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1);    [timeout]    	non-compiled	[timeout]	122	None	replace
1055	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	122	None	replace
1056	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1);  [timeout]  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1);    [timeout]    	non-compiled	[timeout]	122	None	replace
1057	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  *  1);  [timeout]  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  *  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  *  1);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1);    [timeout]    	non-compiled	[timeout]	122	None	replace
1058	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	122	None	replace
1059	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  3);  [timeout]  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  3);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  3);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1);    [timeout]    	non-compiled	[timeout]	122	None	replace
1060	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN  +  1);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN  +  1);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iMinute);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
1061	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	190	None	replace
1062	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  iMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  iMax);	  int    month    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	190	None	replace
1063	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMillis(thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYearMillis(thisYear,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYearMillis(thisYear,  month);	  int    month    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	190	None	replace
1064	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
1065	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	38	None	replace
1066	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  2);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  2);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  2);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
1067	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1,  iMax);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1,  iMax);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
1068	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1,  thisYear);  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1,  thisYear);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1,  thisYear);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
1069	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMineMonth);  [CE]  cannot  find  symbol  iMineMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMineMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMineMonth);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    day);    	non-compiled	[CE]  cannot  find  symbol  iMineMonth	209	None	replace
1070	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  4);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  4);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  4);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
1071	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month);  [thisTimeout]  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month);  [thisTimeout]  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month);  [thisTimeout]	  int    thisYear    =    iChronology.getYearMonth(instant);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
1072	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  months);  [timeout]  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  months);  [timeout]  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  months);  [timeout]	  int    thisYear    =    iChronology.getYearMonth(instant);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
1073	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  minuendToUse);  [CE]  cannot  find  symbol  minuendToUse  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  minuendToUse);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  minuendToUse);	  int    thisYear    =    iChronology.getYear(instant,    month,    iRight);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	197	None	replace
1074	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  m_yearToUse);  [CE]  cannot  find  symbol  m_yearToUse  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  m_yearToUse);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  m_yearToUse);	  int    thisYear    =    iChronology.getYear(instant,    month,    iRight);    	non-compiled	[CE]  cannot  find  symbol  m_yearToUse	197	None	replace
1075	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  _monthToUse);  [CE]  cannot  find  symbol  _monthToUse  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  _monthToUse);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  _monthToUse);	  int    thisYear    =    iChronology.getYear(instant,    month,    iRight);    	non-compiled	[CE]  cannot  find  symbol  _monthToUse	197	None	replace
1076	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	142	None	replace
1077	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  dayToUse,  iLeapMonth);  [CE]  cannot  find  symbol  dayToUse  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  dayToUse,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  dayToUse,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	124	None	replace
1078	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  minuendToUse,  iLeapMonth);  [CE]  cannot  find  symbol  minuendToUse  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  minuendToUse,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  minuendToUse,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	124	None	replace
1079	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  len,  iLeapMonth);  [CE]  cannot  find  symbol  len  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  len,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  len,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  len	124	None	replace
1080	[BUG]  [BUGGY]  float  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	124	None	replace
1081	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  0,  iLeapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  0,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  0,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	124	None	replace
1082	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)-  1  +  1;  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)-  1  +  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month)-  1  +  1;	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
1083	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  months);  [CE]  cannot  find  symbol  months  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  months);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  months);	  int    thisMonth    =    iChronology.getMonthOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol  months	9	None	replace
1084	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  1);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  1);	  int    thisMonth    =    iChronology.getMonthOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
1085	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1,  MIN);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1,  MIN);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	177	None	replace
1086	[BUG]  [BUGGY]  for(int  thisYear  =  iChronology.getDayOfMonth(instant);  [CE]  '.class'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  for(int  thisYear  =  iChronology.getDayOfMonth(instant);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	for(int  thisYear  =  iChronology.getDayOfMonth(instant);	  long    thisYear    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  '.class'  expected	13	None	replace
1087	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iDayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iDayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iDayOfMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iLocale);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	101	None	replace
1088	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  m);  [CE]  cannot  find  symbol  m  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  m);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  m);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  m	213	None	replace
1089	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  m);  [CE]  cannot  find  symbol  m  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  m);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  m);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iMinute);    	non-compiled	[CE]  cannot  find  symbol  m	49	None	replace
1090	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  _dayOfMonth);  [CE]  cannot  find  symbol  _dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  _dayOfMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  _dayOfMonth);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iMinute);    	non-compiled	[CE]  cannot  find  symbol  _dayOfMonth	49	None	replace
1091	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  null,  iMax);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  null,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  null,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    null);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	112	None	replace
1092	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  null,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  null,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  null,  iHeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    null);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	112	None	replace
1093	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  value);  [CE]  cannot  find  symbol  value  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  value);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  value);	  int    thisYear    =    iChronology.getYearValue(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  value	218	None	replace
1094	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  0,  iMax);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  0,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  0,  iMax);	  int    thisMonth    =    iChronology.getYearMonth(instant,    iMax);    	non-compiled	[CE]  cannot  find  symbol	221	None	replace
1095	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  m_yearToUse);  [CE]  cannot  find  symbol  m_yearToUse  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  m_yearToUse);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  m_yearToUse);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iMinute);    	non-compiled	[CE]  cannot  find  symbol  m_yearToUse	99	None	replace
1096	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisYear  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	145	None	replace
1097	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMONTth  =  iChronology.getMonthOfYear(instant);  }  [CE]  cannot  find  symbol  thisMonth  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMONTth  =  iChronology.getMonthOfYear(instant);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMONTth  =  iChronology.getMonthOfYear(instant);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	145	None	replace
1098	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisYear  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	145	None	replace
1099	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
1100	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfDay(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfDay(instant,  month)+  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfDay(instant,  month)+  1;	  int    thisYear    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
1101	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfDay(instant,  month  -  1);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfDay(instant,  month  -  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfDay(instant,  month  -  1);	  int    thisYear    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
1102	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  2);  [CE]  cannot  find  symbol  thisYear  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  2);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  2);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	231	None	replace
1103	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  0,  0);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  0,  0);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  0,  0);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	231	None	replace
1104	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  3);  [CE]  cannot  find  symbol  thisYear  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  3);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  3);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	231	None	replace
1105	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  10);  [CE]  cannot  find  symbol  thisYear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  10);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  10);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	231	None	replace
1106	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  week);  [CE]  cannot  find  symbol  week  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  week);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  week);	  int    thisYear    =    iChronology.getYearMonth(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  week	1	None	replace
1107	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  time);  [CE]  cannot  find  symbol  time  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  time);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  time);	  int    thisYear    =    iChronology.getYearMonth(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  time	1	None	replace
1108	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  null,  iMax);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  null,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  null,  iMax);	  int    thisYear    =    iChronology.getYearValue(instant,    null);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
1109	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisLocation);  [CE]  cannot  find  symbol  thisLocation  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisLocation);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  thisLocation);	  int    thisYear    =    iChronology.getYearValue(instant,    null);    	non-compiled	[CE]  cannot  find  symbol  thisLocation	63	None	replace
1110	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  null,  iDayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  null,  iDayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  null,  iDayOfMonth);	  int    thisYear    =    iChronology.getYearValue(instant,    null);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	63	None	replace
1111	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  }  [CE]  ')'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month;    	non-compiled	[CE]  ')'  expected	173	None	replace
1112	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month;    	non-compiled	[CE]  cannot  find  symbol  thisMonth	173	None	replace
1113	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  }  [CE]  ')'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month;    	non-compiled	[CE]  ')'  expected	173	None	replace
1114	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month;    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	173	None	replace
1115	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  12);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  12);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  12);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
1116	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  2);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  2);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  2);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
1117	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  iLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  iLeapMonth);	  int    month    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	190	None	replace
1118	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisDom);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisDom);	  int    month    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	190	None	replace
1119	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  iMin);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  iMin);	  int    month    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	190	None	replace
1120	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisMinute);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisMinute);	  int    month    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	190	None	replace
1121	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	144	None	add
1122	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getYearOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getYearOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getYearOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	144	None	add
1123	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMillisOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMillisOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMillisOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	144	None	add
1124	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  dayToUse,  iLeapMonth);  [CE]  cannot  find  symbol  dayToUse  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  dayToUse,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  dayToUse,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	45	None	replace
1125	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  months,  MIN,  iLeapMonth);  [CE]  cannot  find  symbol  months  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  months,  MIN,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  months,  MIN,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  months	45	None	replace
1126	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisLocation);  [CE]  cannot  find  symbol  thisLocation  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisLocation);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  thisLocation);	  int    thisYear    =    iChronology.getYearMonth(instant,    null);    	non-compiled	[CE]  cannot  find  symbol  thisLocation	6	None	replace
1127	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisLocale);  [CE]  cannot  find  symbol  thisLocale  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisLocale);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  thisLocale);	  int    thisYear    =    iChronology.getYearMonth(instant,    null);    	non-compiled	[CE]  cannot  find  symbol  thisLocale	6	None	replace
1128	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month),  iMax  -  1;  [CE]  ';'  expected  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month),  iMax  -  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month),  iMax  -  1;	  int    thisYear    =    iChronology.getYearMonth(instant,    month)-    1;    	non-compiled	[CE]  ';'  expected	138	None	replace
1129	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  time);  [CE]  cannot  find  symbol  time  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  time);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  time);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  time	151	None	replace
1130	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  dayToUse);  [CE]  cannot  find  symbol  dayToUse  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  dayToUse);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  dayToUse);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	253	None	replace
1131	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iDayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iDayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iDayOfMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	253	None	replace
1132	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month  -  1);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month  -  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month  -  1);	  int    thisYear    =    iChronology.getYearMonthDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
1133	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  minuendToUse,  iMax);  [CE]  cannot  find  symbol  minuendToUse  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  minuendToUse,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  minuendToUse,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	81	None	replace
1134	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  date);  [CE]  cannot  find  symbol  date  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  date);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  date);	  int    thisYear    =    iChronology.getYearMillis(instant,    datePart);    	non-compiled	[CE]  cannot  find  symbol  date	76	None	replace
1135	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  time);  [CE]  cannot  find  symbol  time  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  time);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  time);	  int    thisYear    =    iChronology.getYearMillis(instant,    datePart);    	non-compiled	[CE]  cannot  find  symbol  time	76	None	replace
1136	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  week);  [CE]  cannot  find  symbol  week  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  week);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  week);	  int    thisMonth    =    iChronology.getYearMonth(instant,    day);    	non-compiled	[CE]  cannot  find  symbol  week	200	None	replace
1137	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  time);  [CE]  cannot  find  symbol  time  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  time);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  time);	  int    thisMonth    =    iChronology.getYearMonth(instant,    day);    	non-compiled	[CE]  cannot  find  symbol  time	200	None	replace
1138	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth()  /  DateTimeConstants.MILLIS_PER_DAY;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth()  /  DateTimeConstants.MILLIS_PER_DAY;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.dayOfMonth()  /  DateTimeConstants.MILLIS_PER_DAY;	  int    thisMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	40	None	replace
1139	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear();  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear();  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear();	  int    thisMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	40	None	replace
1140	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMonth(instant,  month  -  1);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMonth(instant,  month  -  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMonth(instant,  month  -  1);	  int    thisYear    =    iChronology.getYearMonthMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	258	None	replace
1141	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMonth(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMonth(instant,  month)-  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMonth(instant,  month)-  1;	  int    thisYear    =    iChronology.getYearMonthMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	258	None	replace
1142	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  iMinutes);  [CE]  cannot  find  symbol  iMinutes  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  iMinutes);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  iMinutes);	  int    thisYear    =    iChronology.getYearMonthDayOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinutes	204	None	replace
1143	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	147	None	replace
1144	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
1145	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	147	None	replace
1146	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [CE]  illegal  start  of  expression  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
1147	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  iChronology.  [CE]  <identifier>  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  iChronology.  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  iChronology.	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  <identifier>  expected	147	None	replace
1148	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iMin);	  int    thisYear    =    iChronology.getYearOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	225	None	replace
1149	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iDayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iDayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iDayOfMonth);	  int    thisYear    =    iChronology.getYearOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	225	None	replace
1150	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iMinit);  [CE]  cannot  find  symbol  iMinit  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iMinit);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iMinit);	  int    thisYear    =    iChronology.getYearOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinit	225	None	replace
1151	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getYearMillis(instant,  months);  [CE]  cannot  find  symbol  months  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getYearMillis(instant,  months);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getYearMillis(instant,  months);	  long    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  months	73	None	replace
1152	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	14	None	replace
1153	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }  [CE]  cannot  find  symbol  thisYear  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	14	None	replace
1154	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }  else  {  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }  else  {  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }  else  {	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1155	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  4;  [CE]  cannot  find  symbol  thisYear  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  4;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  4;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol  thisYear	71	None	replace
1156	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1)-  1;  [CE]  cannot  find  symbol  thisYear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1)-  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1)-  1;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol  thisYear	71	None	replace
1157	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	169	None	replace
1158	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	169	None	replace
1159	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	169	None	replace
1160	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  else  {  [CE]  illegal  start  of  expression  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  else  {  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  else  {	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
1161	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	169	None	replace
1162	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  1L;  [CE]  possible  loss  of  precision  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  1L;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  1L;	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month)-    1;    	non-compiled	[CE]  possible  loss  of  precision	108	None	replace
1163	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  1  +  1;  [CE]  cannot  find  symbol  thisYear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  1  +  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  1  +  1;	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol  thisYear	108	None	replace
1164	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  4;  [CE]  cannot  find  symbol  thisYear  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  4;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  4;	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol  thisYear	108	None	replace
1165	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  thisMinute);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  thisMinute);	  int    thisYear    =    iChronology.getYearMonthDay(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	205	None	replace
1166	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  iMin);	  int    thisYear    =    iChronology.getYearMonthDay(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	205	None	replace
1167	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  date);  [CE]  cannot  find  symbol  date  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  date);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  date);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  date	226	None	replace
1168	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  m);  [CE]  cannot  find  symbol  m  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  m);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  m);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  m	156	None	replace
1169	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  _dayOfMonth);  [CE]  cannot  find  symbol  _dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  _dayOfMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  _dayOfMonth);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  _dayOfMonth	156	None	replace
1170	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getDaysInYearMonth(instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getDaysInYearMonth(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getDaysInYearMonth(instant);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	10	None	replace
1171	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  date);  [CE]  cannot  find  symbol  date  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  date);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  date);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iMinutes);    	non-compiled	[CE]  cannot  find  symbol  date	214	None	replace
1172	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iDayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iDayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iDayOfMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	240	None	replace
1173	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iHours);  [CE]  cannot  find  symbol  iHours  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iHours);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iHours);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iHours	240	None	replace
1174	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  date);  [CE]  cannot  find  symbol  date  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  date);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  date);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    day);    	non-compiled	[CE]  cannot  find  symbol  date	91	None	replace
1175	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  time);  [CE]  cannot  find  symbol  time  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  time);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  time);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    day);    	non-compiled	[CE]  cannot  find  symbol  time	91	None	replace
1176	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  date);  [CE]  cannot  find  symbol  date  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  date);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  date);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    day);    	non-compiled	[CE]  cannot  find  symbol  date	233	None	replace
1177	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonth();  [CE]  int  cannot  be  dereferenced  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonth();  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonth();	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    month).getMonth();    	non-compiled	[CE]  int  cannot  be  dereferenced	219	None	replace
1178	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iLeapMonth,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iLeapMonth,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iLeapMonth,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
1179	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  months);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  months);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  months);	  int    month    =    iChronology.getMonthOfDay(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	24	None	replace
1180	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  date);  [CE]  cannot  find  symbol  date  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  date);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  date);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    datePart);    	non-compiled	[CE]  cannot  find  symbol  date	250	None	replace
1181	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  18);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  18);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  +  18);	  int    thisYear    =    iChronology.getYearMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
1182	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  iMin);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  iMin	52	None	replace
1183	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  3);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  3);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  3);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	52	None	replace
1184	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  MIN);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  MIN);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	52	None	replace
1185	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  18);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  18);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  18);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	52	None	replace
1186	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  time);  [CE]  cannot  find  symbol  time  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  time);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  time);	  int    thisYear    =    iChronology.getYearValue(instant,    datePart);    	non-compiled	[CE]  cannot  find  symbol  time	65	None	replace
1187	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant  +  1,  month);  [CE]  cannot  find  symbol  thisYear  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant  +  1,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant  +  1,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant;    	non-compiled	[CE]  cannot  find  symbol  thisYear	146	None	replace
1188	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant  +  1);  [CE]  cannot  find  symbol  thisYear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant  +  1);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant;    	non-compiled	[CE]  cannot  find  symbol  thisYear	146	None	replace
1189	[BUG]  [BUGGY]  float  thisYear  =  iChronology.getYearMonthDayMillis(instant);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisYear  =  iChronology.getYearMonthDayMillis(instant);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisYear  =  iChronology.getYearMonthDayMillis(instant);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	150	None	replace
1190	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1,  iMax);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1,  iMax);	  int    thisYear    =    iChronology.getYearMonth(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
1191	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(thisYear,  month);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(thisYear,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonth(thisYear,  month);	  Integer    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
1192	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  DAY_OF_MONTH);  [CE]  cannot  find  symbol  DAY_OF_MONTH  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  DAY_OF_MONTH);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  DAY_OF_MONTH);	  int    thisYear    =    iChronology.getYear(instant,    month,    iDays);    	non-compiled	[CE]  cannot  find  symbol  DAY_OF_MONTH	85	None	replace
1193	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  m_monthToUse);  [CE]  cannot  find  symbol  m_monthToUse  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  m_monthToUse);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  m_monthToUse);	  int    thisYear    =    iChronology.getYear(instant,    month,    iDays);    	non-compiled	[CE]  cannot  find  symbol  m_monthToUse	85	None	replace
1194	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month,  iMin);	  int    thisYear    =    iChronology.getYearMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	216	None	replace
1195	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  dayToUse,  iLeapMonth);  [CE]  cannot  find  symbol  dayToUse  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  dayToUse,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  dayToUse,  iLeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	80	None	replace
1196	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  minuendToUse,  iLeapMonth);  [CE]  cannot  find  symbol  minuendToUse  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  minuendToUse,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  minuendToUse,  iLeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	80	None	replace
1197	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  months,  MIN,  iLeapMonth);  [CE]  cannot  find  symbol  months  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  months,  MIN,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  months,  MIN,  iLeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  months	80	None	replace
1198	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  len,  iLeapMonth);  [CE]  cannot  find  symbol  len  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  len,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  len,  iLeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  len	80	None	replace
1199	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMONTthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	259	None	replace
1200	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  day);  [CE]  cannot  find  symbol  day  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  day);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  day);	  int    thisMonth    =    iChronology.getMillisOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  day	106	None	replace
1201	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  iWeekMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  iWeekMonth);	  int    thisMonth    =    iChronology.getMillisOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	106	None	replace
1202	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1,  iHeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	229	None	replace
1203	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  3);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  3);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  3);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	229	None	replace
1204	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1,  iMin);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  iMin	229	None	replace
1205	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1  -  1,  iLeapMonth);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1  -  1,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1  -  1,  iLeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	229	None	replace
1206	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  18);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  18);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  18);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	229	None	replace
1207	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  dayToUse);  [CE]  cannot  find  symbol  dayToUse  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  dayToUse);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  dayToUse);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	115	None	replace
1208	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  minuendMonth,  iLeapMonth);  [CE]  cannot  find  symbol  minuendMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  minuendMonth,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  minuendMonth,  iLeapMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	115	None	replace
1209	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  iLeapMonth,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  iLeapMonth,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  iLeapMonth,  iHeapMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	115	None	replace
1210	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisLocale);  [CE]  cannot  find  symbol  thisLocale  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisLocale);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisLocale);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    null);    	non-compiled	[CE]  cannot  find  symbol  thisLocale	93	None	replace
1211	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisLocation);  [CE]  cannot  find  symbol  thisLocation  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisLocation);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisLocation);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    null);    	non-compiled	[CE]  cannot  find  symbol  thisLocation	93	None	replace
1212	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  null,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  null,  thisLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  null,  thisLeapMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    null);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	93	None	replace
1213	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  0,  null);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  0,  null);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  0,  null);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    null);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
1214	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  1;  [CE]  cannot  find  symbol  thisYear  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  1;	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    float    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	188	None	replace
1215	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1  +  1);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1  +  1);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
1216	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1,  iMinutes);  [CE]  cannot  find  symbol  iMinutes  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1,  iMinutes);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1,  iMinutes);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  iMinutes	38	None	replace
1217	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  3);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  3);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  3);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
1218	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  month);  }  [CE]  cannot  find  symbol  thisYear  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  month);  }	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	18	None	replace
1219	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  month);  }  else  {  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  month);  }  else  {  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  month);  }  else  {	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1220	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  min,  iMax);  [CE]  cannot  find  symbol  min  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  min,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  min,  iMax);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  min	98	None	replace
1221	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN  +  iMax);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN  +  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN  +  iMax);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
1222	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  date);  [CE]  cannot  find  symbol  date  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  date);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  date);	  int    thisYear    =    iChronology.getYearMonth(instant,    datePart);    	non-compiled	[CE]  cannot  find  symbol  date	235	None	replace
1223	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  dayToUse);  [CE]  cannot  find  symbol  dayToUse  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  dayToUse);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  dayToUse);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	46	None	replace
1224	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  1);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  1);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	251	None	replace
1225	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  iMax);  [CE]  cannot  find  symbol  thisYear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  iMax);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    null);    	non-compiled	[CE]  cannot  find  symbol  thisYear	148	None	replace
1226	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  new  Month());  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  new  Month());  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  new  Month());	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    null);    	non-compiled	[CE]  cannot  find  symbol	148	None	replace
1227	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  date);  [CE]  cannot  find  symbol  date  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  date);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  date);	  int    thisMonth    =    iChronology.getYearMonth(instant,    dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  date	43	None	replace
1228	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month,  iDayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month,  iDayOfMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  month,  iDayOfMonth);	  Integer    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	127	None	replace
1229	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month,  0);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month,  0);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  month,  0);	  Integer    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	127	None	replace
1230	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month  +  1);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  month  +  1);	  Integer    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	127	None	replace
1231	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month,  dayOfMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  month,  dayOfMonth);	  Integer    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	127	None	replace
1232	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  dayToUse,  iMax);  [CE]  cannot  find  symbol  dayToUse  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  dayToUse,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  dayToUse,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	260	None	replace
1233	[BUG]  [BUGGY]  float  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  iMax);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	260	None	replace
1234	[BUG]  [BUGGY]  char  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  iMax);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  char  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	260	None	replace
1235	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear  +  1);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear  +  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  thisYear  +  1);	  int    thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	234	None	replace
1236	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  iMax);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  iMax);	  int    thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	234	None	replace
1237	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  iRight);  [CE]  cannot  find  symbol  iRight  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  iRight);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  month,  iRight);	  int    thisYear    =    iChronology.getYearMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iRight	72	None	replace
1238	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  iDate);  [CE]  cannot  find  symbol  iDate  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  iDate);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  month,  iDate);	  int    thisYear    =    iChronology.getYearMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iDate	72	None	replace
1239	[BUG]  [BUGGY]  int  thisYear  =  iChronology.yearOfYear();  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.yearOfYear();  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.yearOfYear();	  int    thisYear    =    iChronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
1240	[BUG]  [BUGGY]  int  thisYear  =  iChronology.weekOfYear();  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.weekOfYear();  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.weekOfYear();	  int    thisYear    =    iChronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
1241	[BUG]  [BUGGY]  int  thisYear  =  iChronology.dayOfMonth().getYear();  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.dayOfMonth().getYear();  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.dayOfMonth().getYear();	  int    thisYear    =    iChronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
1242	[BUG]  [BUGGY]  int  thisYear  =  iChronology.dayOfMonth().iHeight;  [CE]  cannot  find  symbol  iHeight  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.dayOfMonth().iHeight;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.dayOfMonth().iHeight;	  int    thisYear    =    iChronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iHeight	4	None	replace
1243	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  valueToAdd);  [CE]  cannot  find  symbol  valueToAdd  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  valueToAdd);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  valueToAdd);	  int    thisYear    =    iChronology.getYearOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  valueToAdd	194	None	replace
1244	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	179	None	replace
1245	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  dayToUse,  iMax);  [CE]  cannot  find  symbol  dayToUse  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  dayToUse,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  dayToUse,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	179	None	replace
1246	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month  +  1,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month  +  1,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  month  +  1,  iMax);	  int    months    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	29	None	replace
1247	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  month,  iMin);	  int    months    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	29	None	replace
1248	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  dayToUse);  [CE]  cannot  find  symbol  dayToUse  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  dayToUse);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  dayToUse);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	97	None	replace
1249	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  1);  [CE]  no  suitable  method  found  for  dayOfMonth(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.dayOfMonth(instant,  1);	  int    thisMonth    =    iChronology.dayOfMonth(instant);    	non-compiled	[CE]  no  suitable  method  found  for  dayOfMonth(long,int)	39	None	replace
1250	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  hour);  [CE]  cannot  find  symbol  hour  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  hour);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.dayOfMonth(instant,  hour);	  int    thisMonth    =    iChronology.dayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  hour	39	None	replace
1251	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  month,  iMin);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  month,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  month,  iMin);	  int    month    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	245	None	replace
1252	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  m);  [CE]  cannot  find  symbol  m  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  m);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  m);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  m	248	None	replace
1253	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  date);  [CE]  cannot  find  symbol  date  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  date);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  date);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  date	248	None	replace
1254	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  months,  month);	  int    month    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	28	None	replace
1255	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iHours);  [CE]  cannot  find  symbol  iHours  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iHours);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iHours);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    day);    	non-compiled	[CE]  cannot  find  symbol  iHours	209	None	replace
1256	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMinimum);  [CE]  cannot  find  symbol  iMinimum  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMinimum);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMinimum);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    day);    	non-compiled	[CE]  cannot  find  symbol  iMinimum	209	None	replace
1257	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  month,  iMin);	  int    thisYear    =    iChronology.getYearValue(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	58	None	replace
1258	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month,  iDayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month,  iDayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  month,  iDayOfMonth);	  int    thisYear    =    iChronology.getYearValue(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	58	None	replace
1259	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMin);	  long    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	163	None	replace
1260	[BUG]  [BUGGY]  byte  thisYear  =  iChronology.getDayOfMonth(instant,  month);  [CE]  possible  loss  of  precision  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  byte  thisYear  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	byte  thisYear  =  iChronology.getDayOfMonth(instant,  month);	  long    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  possible  loss  of  precision	163	None	replace
1261	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)-  1  +  1;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)-  1  +  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month)-  1  +  1;	  int    thisMonth    =    iChronology.getYearMonth(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
1262	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)-  4;  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)-  4;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month)-  4;	  int    thisMonth    =    iChronology.getYearMonth(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
1263	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonthDay(thisYear,  month);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonthDay(thisYear,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonthDay(thisYear,  month);	  Integer    thisYear    =    iChronology.getYearMonthDay(instant);    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
1264	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonthDayOfYear(instant);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonthDayOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonthDayOfYear(instant);	  Integer    thisYear    =    iChronology.getYearMonthDay(instant);    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
1265	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  dayToUse,  iLeapMonth);  [CE]  cannot  find  symbol  dayToUse  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  dayToUse,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  dayToUse,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	70	None	replace
1266	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  minuendToUse,  iLeapMonth);  [CE]  cannot  find  symbol  minuendToUse  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  minuendToUse,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  minuendToUse,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	70	None	replace
1267	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  len,  iLeapMonth);  [CE]  cannot  find  symbol  len  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  len,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  len,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  len	70	None	replace
1268	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  days,  iLeapMonth);  [CE]  cannot  find  symbol  days  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  days,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  days,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  days	70	None	replace
1269	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  minuendMonth,  iLeapMonth);  [CE]  cannot  find  symbol  minuendMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  minuendMonth,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  minuendMonth,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	70	None	replace
1270	[BUG]  [BUGGY]  float  thisYear  =  iChronology.getYearMillis(instant,  months);  [CE]  cannot  find  symbol  months  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisYear  =  iChronology.getYearMillis(instant,  months);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisYear  =  iChronology.getYearMillis(instant,  months);	  float    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  months	202	None	replace
1271	[BUG]  [BUGGY]  float  thisYear  =  iChronology.getYearMillis(instant,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisYear  =  iChronology.getYearMillis(instant,  thisMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisYear  =  iChronology.getYearMillis(instant,  thisMonth);	  float    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	202	None	replace
1272	[BUG]  [BUGGY]  float  thisYear  =  iChronology.getYearMillis(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisYear  =  iChronology.getYearMillis(instant,  datePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisYear  =  iChronology.getYearMillis(instant,  datePart);	  float    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  datePart	202	None	replace
1273	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  dayToUse);  [CE]  cannot  find  symbol  dayToUse  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  dayToUse);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  dayToUse);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	32	None	replace
1274	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  minuendInstant,  iMax);  [CE]  cannot  find  symbol  minuendInstant  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  minuendInstant,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  minuendInstant,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendInstant	125	None	replace
1275	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  dayToUse,  iMax);  [CE]  cannot  find  symbol  dayToUse  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  dayToUse,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  dayToUse,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	125	None	replace
1276	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  max);  [CE]  cannot  find  symbol  max  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  max);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1,  max);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  max	230	None	replace
1277	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  dayToUse,  iMax);  [CE]  cannot  find  symbol  dayToUse  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  dayToUse,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1,  dayToUse,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	230	None	replace
1278	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  minuendToUse,  iMax);  [CE]  cannot  find  symbol  minuendToUse  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  minuendToUse,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1,  minuendToUse,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	230	None	replace
1279	[BUG]  [BUGGY]  float  thisYear  =  iChronology.getYear(instant,  month  +  1,  iMax);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisYear  =  iChronology.getYear(instant,  month  +  1,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisYear  =  iChronology.getYear(instant,  month  +  1,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	230	None	replace
1280	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  1  +  1;  [timeout]  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  1  +  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  1  +  1;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)+    1;    [timeout]    	non-compiled	[timeout]	123	None	replace
1281	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  5;  [timeout]  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  5;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  5;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)+    1;    [timeout]    	non-compiled	[timeout]	123	None	replace
1282	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  thisMonth  =  iChronology.getDayOfMonth(instant,  month;  }  [CE]  ')'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  thisMonth  =  iChronology.getDayOfMonth(instant,  month;  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  thisMonth  =  iChronology.getDayOfMonth(instant,  month;  }	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    month;    	non-compiled	[CE]  ')'  expected	22	None	replace
1283	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    month;    	non-compiled	[CE]  cannot  find  symbol  thisMonth	22	None	replace
1284	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month;  }  [CE]  ')'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month;  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month;  }	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    month;    	non-compiled	[CE]  ')'  expected	22	None	replace
1285	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  iDayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  iDayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  iDayOfMonth);	  int    thisYear    =    iChronology.getYear(instant,    day);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	110	None	replace
1286	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  date);  [CE]  cannot  find  symbol  date  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  date);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  date);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  date	56	None	replace
1287	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month  +  1);	  int    month    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	26	None	replace
1288	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month).intValue();  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month).intValue();  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month).intValue();	  int    month    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	26	None	replace
1289	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month).intValue();  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month).intValue();  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month).intValue();	  int    thisMonth    =    iChronology.getMonthOfMinute(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	247	None	replace
1290	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  minuendToUse,  iMax);  [CE]  cannot  find  symbol  minuendToUse  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  minuendToUse,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  minuendToUse,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	44	None	replace
1291	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  0,  iMax);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  0,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  0,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iMax);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	44	None	replace
1292	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iMin);	  long    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	54	None	replace
1293	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)+  12;  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)+  12;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month)+  12;	  int    thisYear    =    iChronology.getYearMonth(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
1294	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  week);  [CE]  cannot  find  symbol  week  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  week);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  week);	  int    thisYear    =    iChronology.getYearMillis(instant,    hour);    	non-compiled	[CE]  cannot  find  symbol  week	228	None	replace
1295	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  minuendToUse);  [CE]  cannot  find  symbol  minuendToUse  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  minuendToUse);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  minuendToUse);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	116	None	replace
1296	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  day);  [CE]  cannot  find  symbol  day  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  day);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  day);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  day	116	None	replace
1297	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  max);  [CE]  cannot  find  symbol  max  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  max);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  max);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  max	116	None	replace
1298	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month  -  1);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month  -  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month  -  1);	  int    thisYear    =    iChronology.getMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
1299	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  12);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  12);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  12);	  int    thisMonth    =    iChronology.getYearMonth(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	199	None	replace
1300	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  2);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  2);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  2);	  int    thisMonth    =    iChronology.getYearMonth(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	199	None	replace
1301	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  1,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  1,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  1,  iHeapMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    1);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	199	None	replace
1302	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  3);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  3);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  3);	  int    thisMonth    =    iChronology.getYearMonth(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	199	None	replace
1303	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  10);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  10);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  10);	  int    thisMonth    =    iChronology.getYearMonth(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	199	None	replace
1304	[BUG]  [BUGGY]  null  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [CE]  not  a  statement  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  null  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	null  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisYear    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  not  a  statement	143	None	replace
1305	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  year  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisYear  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisYear    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  year	143	None	replace
1306	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisYear  =  iChronology.getMonthOfYear(instant);  [timeout]  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisYear  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisYear  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisYear    =    iChronology.getMonthOfYear(instant);    	non-compiled	[timeout]	143	None	replace
1307	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  months  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  int  thisYear  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisYear    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  months	143	None	replace
1308	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  max);  [CE]  cannot  find  symbol  max  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  max);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  max);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  max	178	None	replace
1309	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  dayToUse,  iMax);  [CE]  cannot  find  symbol  dayToUse  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  dayToUse,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  dayToUse,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	178	None	replace
1310	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  leapMonth,  iMax);  [CE]  cannot  find  symbol  leapMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  leapMonth,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  leapMonth,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  leapMonth	178	None	replace
1311	[BUG]  [BUGGY]  boolean  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  incompatible  types  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  boolean  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	boolean  thisMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    char    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  incompatible  types	149	None	replace
1312	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	243	None	replace
1313	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  3);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  3);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  3);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	243	None	replace
1314	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  iMin);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  iMin	243	None	replace
1315	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  MIN);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  MIN);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	243	None	replace
1316	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  char  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  char  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  char  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    char    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	184	None	replace
1317	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  char  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  char  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  char  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    char    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
1318	[BUG]  [BUGGY]  boolean  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  incompatible  types  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  boolean  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	boolean  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    char    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  incompatible  types	184	None	replace
1319	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  char  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  char  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  char  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    char    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	184	None	replace
1320	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  String  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  String  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  String  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    char    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	184	None	replace
1321	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month  -  1);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month  -  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month  -  1);	  int    thisYear    =    iChronology.getYearMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
1322	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	166	None	replace
1323	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
1324	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
1325	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	166	None	replace
1326	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  return  instant;  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  return  instant;  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  return  instant;  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	166	None	replace
1327	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  -iLeapMonth);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  -iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  -iLeapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
1328	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	167	None	replace
1329	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  }  else  {  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  }  else  {  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  }  else  {	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
1330	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	167	None	replace
1331	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  }  [CE]  cannot  find  symbol  year  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  year	167	None	replace
1332	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  }  else  {  throw  new  IllegalFieldValueException( " ");  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  }  else  {  throw  new  IllegalFieldValueException( " ");  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  }  else  {  throw  new  IllegalFieldValueException( " ");  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	167	None	replace
1333	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  dayToUse);  [CE]  cannot  find  symbol  dayToUse  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  dayToUse);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  dayToUse);	  int    thisYear    =    iChronology.getYear(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	82	None	replace
1334	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  max);  [CE]  cannot  find  symbol  max  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  max);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  max);	  int    thisYear    =    iChronology.getYear(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  max	82	None	replace
1335	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  dayToUse,  iLeapMonth);  [CE]  cannot  find  symbol  dayToUse  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  dayToUse,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  dayToUse,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	153	None	replace
1336	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  months,  MIN,  iLeapMonth);  [CE]  cannot  find  symbol  months  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  months,  MIN,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  months,  MIN,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  months	153	None	replace
1337	[BUG]  [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant,  month,  dayOfMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant,  month,  dayOfMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  month  =  iChronology.getMonthOfYear(instant,  month,  dayOfMonth);	  Integer    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	192	None	replace
1338	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant  +  1,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant  +  1,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant  +  1,  month);	  int    month    =    iChronology.getMonthOfYear(month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	191	None	replace
1339	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
1340	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  0,  iMax);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  0,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  0,  iMax);	  int    thisYear    =    iChronology.getYearMonth(instant,    iMax);    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
1341	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  valueToUse);  [CE]  cannot  find  symbol  valueToUse  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  valueToUse);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  valueToUse);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    yearToUse);    	non-compiled	[CE]  cannot  find  symbol  valueToUse	104	None	replace
1342	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  m);  [CE]  cannot  find  symbol  m  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  m);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  m);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iMinute);    	non-compiled	[CE]  cannot  find  symbol  m	137	None	replace
1343	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  minuendToUse);  [CE]  cannot  find  symbol  minuendToUse  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  minuendToUse);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  minuendToUse);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iMinute);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	137	None	replace
1344	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  m_yearToUse);  [CE]  cannot  find  symbol  m_yearToUse  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  m_yearToUse);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  m_yearToUse);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iMinute);    	non-compiled	[CE]  cannot  find  symbol  m_yearToUse	137	None	replace
1345	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  short);  [CE]  '.class'  expected  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  short);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  short);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iMinute);    	non-compiled	[CE]  '.class'  expected	137	None	replace
1346	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month));  }  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month));  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month));  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month));    	non-compiled	[CE]  ';'  expected	172	None	replace
1347	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month));  }  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month));  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month));  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month));    	non-compiled	[CE]  ';'  expected	172	None	replace
1348	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month));  }  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month));  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month));  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month));    	non-compiled	[CE]  ';'  expected	172	None	replace
1349	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month));    	non-compiled	[CE]  cannot  find  symbol  thisMonth	172	None	replace
1350	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  min,  iMax);  [CE]  cannot  find  symbol  min  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  min,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  min,  iMax);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  min	136	None	replace
1351	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN  +  iMax);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN  +  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN  +  iMax);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
1352	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  dayToUse);  [CE]  cannot  find  symbol  dayToUse  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  dayToUse);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  dayToUse);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	242	None	replace
1353	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  minuendMonth);  [CE]  cannot  find  symbol  minuendMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  minuendMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  minuendMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	242	None	replace
1354	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMin,  1);  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMin,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMin,  1);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    1);    	non-compiled	[CE]  cannot  find  symbol  iMin	160	None	replace
1355	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  day);  [CE]  cannot  find  symbol  day  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  day);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  day);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  day	187	None	replace
1356	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  shortLeapMonth);  [CE]  cannot  find  symbol  shortLeapMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  shortLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  shortLeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    month,    iDayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  shortLeapMonth	88	None	replace
1357	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  day);  [CE]  cannot  find  symbol  day  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  day);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  day);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  day	224	None	replace
1358	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  18);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	add	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  18);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1);    [timeout]    	compilable	  [FE]  ExceptionInInitializerError  	122	1	replace
1359	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  18);  [FE]  ExceptionInInitializerError  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  18);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  18);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1);    [timeout]    	compilable	  [FE]  ExceptionInInitializerError  	122	1	replace
1360	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  MIN);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  MIN);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	122	None	replace
1361	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  iMax);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  iMax);	  int    thisYear    =    iChronology.getYearValue(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
1362	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  iMinute);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  iMinute);	  int    thisYear    =    iChronology.getYearValue(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iMinute	62	None	replace
1363	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  valueToAdd);  [CE]  cannot  find  symbol  valueToAdd  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  valueToAdd);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearValue(instant,  valueToAdd);	  Integer    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol  valueToAdd	212	None	replace
1364	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(this,  instant);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(this,  instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearValue(this,  instant);	  Integer    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
1365	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  DAY_OF_MONTH);  [CE]  cannot  find  symbol  DAY_OF_MONTH  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  DAY_OF_MONTH);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  DAY_OF_MONTH);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iDays);    	non-compiled	[CE]  cannot  find  symbol  DAY_OF_MONTH	241	None	replace
1366	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getYearMonth(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getYearMonth(instant);	  int    month    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	30	None	replace
1367	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisYear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	168	None	replace
1368	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  else  {	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
1369	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  thisYear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	168	None	replace
1370	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  return  instant;  }  [CE]  cannot  find  symbol  thisYear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  return  instant;  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  return  instant;  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	168	None	replace
1371	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  18);  [CE]  cannot  find  symbol  thisYear  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  18);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  18);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	68	None	replace
1372	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  31);  [CE]  cannot  find  symbol  thisYear  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  31);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  31);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	68	None	replace
1373	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  *  1);  [CE]  cannot  find  symbol  thisYear  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  *  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  *  1);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	181	None	replace
1374	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  31);  [CE]  cannot  find  symbol  thisYear  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  31);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  31);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	181	None	replace
1375	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  18);  [CE]  cannot  find  symbol  thisYear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  18);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  18);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	181	None	replace
1376	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  4);  [CE]  cannot  find  symbol  thisYear  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  4);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  4);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	181	None	replace
1377	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  minuendToUse,  iMax);  [CE]  cannot  find  symbol  minuendToUse  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  minuendToUse,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  minuendToUse,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	154	None	replace
1378	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month));  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month));  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month));	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    month));    	non-compiled	[CE]  ';'  expected	21	None	replace
1379	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  year,  thisYear);  [CE]  cannot  find  symbol  year  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  year,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  year,  thisYear);	  int    thisYear    =    iChronology.getYearMillis(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	75	None	replace
1380	[BUG]  [BUGGY]  boolean  thisYear  =  iChronology.getYearMillis(instant,  thisYear);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  boolean  thisYear  =  iChronology.getYearMillis(instant,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	boolean  thisYear  =  iChronology.getYearMillis(instant,  thisYear);	  int    thisYear    =    iChronology.getYearMillis(instant,    thisYear);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	75	None	replace
1381	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  0,  iMax);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  0,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  0,  iMax);	  int    thisYear    =    iChronology.getYearValue(instant,    iMax);    	non-compiled	[CE]  cannot  find  symbol	263	None	replace
1382	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonths(instant,  month,  iMin);	  int    thisYear    =    iChronology.getYearMonths(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	220	None	replace
1383	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month,  iDayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month,  iDayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonths(instant,  month,  iDayOfMonth);	  int    thisYear    =    iChronology.getYearMonths(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	220	None	replace
1384	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month)+  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonths(instant,  month)+  1;	  int    thisYear    =    iChronology.getYearMonths(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
1385	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1  +  1;  [CE]  cannot  find  symbol  thisYear  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1  +  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1  +  1;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  thisYear	69	None	replace
1386	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  5;  [CE]  cannot  find  symbol  thisYear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  5;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  5;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  thisYear	69	None	replace
1387	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMillis(thisYear,  instant);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMillis(thisYear,  instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMillis(thisYear,  instant);	  Integer    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	238	None	replace
1388	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMillis(instant,  day);  [CE]  cannot  find  symbol  day  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMillis(instant,  day);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMillis(instant,  day);	  Integer    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  day	238	None	replace
1389	[BUG]  [BUGGY]  char  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  char  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    MIN);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	48	None	replace
1390	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  dayToUse);  [CE]  cannot  find  symbol  dayToUse  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  dayToUse);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  dayToUse);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	48	None	replace
1391	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  m);  [CE]  cannot  find  symbol  m  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  m);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  m);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  m	255	None	replace
1392	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  iMax);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  iMax);	  Integer    thisYear    =    iChronology.getYear(instant,    1);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	239	None	replace
1393	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  0);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  0);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  0);	  Integer    thisYear    =    iChronology.getYear(instant,    1);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	239	None	replace
1394	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  iMin,  1);  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  iMin,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  iMin,  1);	  Integer    thisYear    =    iChronology.getYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol  iMin	239	None	replace
1395	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  iLeapMonth,  iDayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  iLeapMonth,  iDayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  iLeapMonth,  iDayOfMonth);	  int    thisYear    =    iChronology.getYearValue(instant,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	60	None	replace
1396	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  5;  [CE]  cannot  find  symbol  thisYear  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  5;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  5;	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  thisYear	107	None	replace
1397	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  1L;  [CE]  possible  loss  of  precision  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  1L;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  1L;	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month)+    1;    	non-compiled	[CE]  possible  loss  of  precision	107	None	replace
1398	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  date);  [CE]  cannot  find  symbol  date  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  date);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  date);	  int    thisYear    =    iChronology.getYear(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  date	86	None	replace
1399	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  4;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	add	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  4;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)-    1;    [timeout]    	compilable	  [FE]  ExceptionInInitializerError  	126	1	replace
1400	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  4;  [FE]  ExceptionInInitializerError  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  4;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  4;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)-    1;    [timeout]    	compilable	  [FE]  ExceptionInInitializerError  	126	1	replace
1401	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(thisYear,  month);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(thisYear,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfYear(thisYear,  month);	  int    thisYear    =    iChronology.getYearMonthDayOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	203	None	replace
1402	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  dayToUse);  [CE]  cannot  find  symbol  dayToUse  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  dayToUse);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  dayToUse);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	134	None	replace
1403	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  dayToUse);  [CE]  cannot  find  symbol  dayToUse  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  dayToUse);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  dayToUse);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	158	None	replace
1404	[BUG]  [BUGGY]  char  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  char  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    MIN);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	158	None	replace
1405	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  iMin);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  iMin);	  int    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
1406	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  18);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  18);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  18);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
1407	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  dayToUse);  [CE]  cannot  find  symbol  dayToUse  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  dayToUse);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  dayToUse);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	155	None	replace
1408	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  12);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  12);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  12);	  int    thisYear    =    iChronology.getYearValue(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
1409	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  2);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  2);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  2);	  int    thisYear    =    iChronology.getYearValue(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
1410	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  3);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  3);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  3);	  int    thisYear    =    iChronology.getYearValue(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
1411	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  min,  iMax);  [CE]  cannot  find  symbol  min  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  min,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  min,  iMax);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  min	33	None	replace
1412	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN  +  iMax);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN  +  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN  +  iMax);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
1413	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  dayToUse,  iMax);  [CE]  cannot  find  symbol  dayToUse  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  dayToUse,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  dayToUse,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	244	None	replace
1414	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  minuendToUse,  iMax);  [CE]  cannot  find  symbol  minuendToUse  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  minuendToUse,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  minuendToUse,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	244	None	replace
1415	[BUG]  [BUGGY]  float  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  iMax);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	244	None	replace
1416	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iDayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iDayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  iDayOfMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iLocale);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	140	None	replace
1417	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  month).intValue();  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  month).intValue();  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonth(instant,  month).intValue();	  Integer    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
1418	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1;  [CE]  cannot  find  symbol  thisYear  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1;	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	183	None	replace
1419	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1);  [CE]  cannot  find  symbol  thisYear  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	183	None	replace
1420	[BUG]  [BUGGY]  float  thisYear  =  iChronology.getYearMonthMillis(instant);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisYear  =  iChronology.getYearMonthMillis(instant);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisYear  =  iChronology.getYearMonthMillis(instant);	  int    thisYear    =    iChronology.getYearMonthMillis(instant);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	193	None	replace
1421	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(thisYear,  instant);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(thisYear,  instant);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(thisYear,  instant);	  int    thisYear    =    iChronology.getYearMonthMillis(instant);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	193	None	replace
1422	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  day);  [CE]  cannot  find  symbol  day  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  day);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  day);	  int    thisYear    =    iChronology.getYearMonthMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  day	193	None	replace
1423	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN  +  iMax);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN  +  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN  +  iMax);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
1424	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  0,  iMax);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  0,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  0,  iMax);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
1425	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  valueToUse);  [CE]  cannot  find  symbol  valueToUse  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  valueToUse);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  valueToUse);	  Integer    thisYear    =    iChronology.getYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  valueToUse	211	None	replace
1426	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  }	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMONTth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	20	None	replace
1427	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMONTth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
1428	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  iMin);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	11	None	replace
1429	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  day);  [CE]  cannot  find  symbol  day  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  day);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  day);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  day	11	None	replace
1430	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  dayToUse);  [CE]  cannot  find  symbol  dayToUse  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  dayToUse);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  dayToUse);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	11	None	replace
1431	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  iRight);  [CE]  cannot  find  symbol  iRight  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  iRight);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  iRight);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iRight	11	None	replace
1432	[BUG]  [BUGGY]  BasicChronology  thisYear  =  iChronology.getYearMillis(instant,  month);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  BasicChronology  thisYear  =  iChronology.getYearMillis(instant,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	BasicChronology  thisYear  =  iChronology.getYearMillis(instant,  month);	  char    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	79	None	replace
1433	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  iLeapMonth  +  1);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  iLeapMonth  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  iLeapMonth  +  1);	  int    thisMonth    =    iChronology.getYearMonth(instant,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
1434	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  iLeapMonth,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  iLeapMonth,  iWeekMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  iLeapMonth,  iWeekMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	42	None	replace
1435	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getYearOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getYearOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getYearOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	170	None	add
1436	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getWeekOfDayOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getWeekOfDayOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getWeekOfDayOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	170	None	add
1437	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getStandardOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getStandardOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getStandardOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	170	None	add
1438	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  year);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  year);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  year);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	170	None	add
1439	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iDate);  [CE]  cannot  find  symbol  iDate  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iDate);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iDate);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    datePart);    	non-compiled	[CE]  cannot  find  symbol  iDate	261	None	replace
1440	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  12;  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  12;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  12;	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
1441	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDateOfYearMonth(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDateOfYearMonth(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        month);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMonth  =  iChronology.getDateOfYearMonth(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	19	None	add
1442	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  12);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  12);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  12);	  int    thisYear    =    iChronology.getYearMonth(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
1443	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  2);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  2);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  2);	  int    thisYear    =    iChronology.getYearMonth(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
1444	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  1,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  1,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  1,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    1);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	5	None	replace
1445	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  3);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  3);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  3);	  int    thisYear    =    iChronology.getYearMonth(instant,    1);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
1446	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  month);  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month).getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	257	None	replace
1447	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  month);  }  [CE]  int  cannot  be  dereferenced  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month).getMonthOfYear(instant,    month);    	non-compiled	[CE]  int  cannot  be  dereferenced	257	None	replace
1448	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(  [CE]  '.class'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month).getMonthOfYear(instant,    month);    	non-compiled	[CE]  '.class'  expected	257	None	replace
1449	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  month  [CE]  ')'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  month  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  month	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month).getMonthOfYear(instant,    month);    	non-compiled	[CE]  ')'  expected	257	None	replace
1450	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getYearMonthOfYear(instant);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getYearMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getYearMonthOfYear(instant);	  float    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	208	None	replace
1451	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  [CE]  cannot  find  symbol  months  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  months);	  float    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  months	208	None	replace
1452	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  dayOfMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  dayOfMonth);	  float    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	208	None	replace
1453	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  [CE]  cannot  find  symbol  thisYear  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  1);	  float    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	208	None	replace
1454	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	165	None	replace
1455	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	171	None	replace
1456	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisYear  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	171	None	replace
1457	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	171	None	replace
1458	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
1459	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month).intValue();  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month).intValue();  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month).intValue();	  int    thisMonth    =    iChronology.getMonthOfSecond(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	246	None	replace
1460	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  18);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  18);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  18);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
1461	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  1,  MIN);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  1,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  1,  MIN);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
1462	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  1,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  1,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  1,  iMin);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  iMin	117	None	replace
1463	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  18);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  18);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  18);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
1464	[BUG]  [BUGGY]  if(month  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	171	None	replace
1465	[BUG]  [BUGGY]  if(month  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	171	None	replace
1466	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    Integer    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	15	None	replace
1467	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    Integer    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	15	None	replace
1468	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisMonth  =  iChronology.getMonthOfDay(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    Integer    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
1469	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  time);  [CE]  cannot  find  symbol  time  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  time);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  time);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  time	226	None	replace
1470	[BUG]  [BUGGY]  if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	147	None	replace
1471	[BUG]  [BUGGY]  if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	147	None	replace
1472	[BUG]  [BUGGY]  if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisYear  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	147	None	replace
1473	[BUG]  [BUGGY]  if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  return  instant;  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  return  instant;  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  return  instant;  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	147	None	replace
1474	[BUG]  [BUGGY]  if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [CE]  illegal  start  of  expression  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
1475	[BUG]  [BUGGY]  if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  return  instant  +  1;  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  return  instant  +  1;  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  return  instant  +  1;  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	147	None	replace
1476	[BUG]  [BUGGY]  if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  illegal  start  of  expression  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
1477	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  iMin);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol  iMin	92	None	replace
1478	[BUG]  [BUGGY]  int  thisYear  =  iChronology.dayOfMonth(instant,  iMax);  [CE]  no  suitable  method  found  for  dayOfMonth(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.dayOfMonth(instant,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.dayOfMonth(instant,  iMax);	  int    thisYear    =    iChronology.getYearMonth(instant,    iMax);    	non-compiled	[CE]  no  suitable  method  found  for  dayOfMonth(long,int)	236	None	replace
1479	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  -iMax);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  -iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  -iMax);	  int    thisYear    =    iChronology.getYearMonth(instant,    iMax);    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
1480	[BUG]  [BUGGY]  if(month  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  }  [CE]  ')'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month;    	non-compiled	[CE]  ')'  expected	173	None	replace
1481	[BUG]  [BUGGY]  if(month  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month;    	non-compiled	[CE]  cannot  find  symbol  thisMonth	173	None	replace
1482	[BUG]  [BUGGY]  if(month  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  }  [CE]  ')'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month;    	non-compiled	[CE]  ')'  expected	173	None	replace
1483	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  iLeapMonth);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMillis(instant,    dayOfMonth);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	77	None	replace
1484	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  MIN);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  MIN);	  int    thisYear    =    iChronology.getYearMillis(instant,    dayOfMonth);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	77	None	replace
1485	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMillis(instant,    dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	77	None	replace
1486	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  iDayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  iDayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  iDayOfMonth);	  int    thisYear    =    iChronology.getYearMillis(instant,    dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	77	None	replace
1487	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month,  MIN);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month,  MIN);	  int    thisMonth    =    iChronology.getMonthOfMinute(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	247	None	replace
1488	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month  +  1,  iMax);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month  +  1,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month  +  1,  iMax);	  int    thisMonth    =    iChronology.getMonthOfMinute(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	247	None	replace
1489	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month),  iMax);  [CE]  ';'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month),  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month),  iMax);	  int    thisMonth    =    iChronology.getMonthOfMinute(instant,    month);    	non-compiled	[CE]  ';'  expected	247	None	replace
1490	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  datePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  datePart);	  int    thisYear    =    iChronology.getYearOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  datePart	194	None	replace
1491	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  iMax);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  iMax);	  int    thisYear    =    iChronology.getYearOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
1492	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  MIN);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  MIN);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	166	None	replace
1493	[BUG]  [BUGGY]  if(month  <  MIN)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  thisMonth  =  iChronology.getDayOfMonth(instant,  month;  }  [CE]  ')'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  MIN)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  thisMonth  =  iChronology.getDayOfMonth(instant,  month;  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  MIN)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  thisMonth  =  iChronology.getDayOfMonth(instant,  month;  }	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    month;    	non-compiled	[CE]  ')'  expected	22	None	replace
1494	[BUG]  [BUGGY]  if(month  <  MIN)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(month  <  MIN)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(month  <  MIN)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    month;    	non-compiled	[CE]  cannot  find  symbol  thisMonth	22	None	replace
1495	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisMonth);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisMonth);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	142	None	replace
1496	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  months  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  months	142	None	replace
1497	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonthDay(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonthDay(instant,  datePart);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonthDay(instant,  datePart);	  Integer    thisYear    =    iChronology.getYearMonthDay(instant);    	non-compiled	[CE]  cannot  find  symbol  datePart	132	None	replace
1498	[BUG]  [BUGGY]  int  thisYear  =  iChronology.monthOfMonth();  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.monthOfMonth();  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.monthOfMonth();	  int    thisYear    =    iChronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
1499	[BUG]  [BUGGY]  int  thisYear  =  iChronology.yearOfMonth();  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.yearOfMonth();  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.yearOfMonth();	  int    thisYear    =    iChronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
1500	[BUG]  [BUGGY]  int  thisYear  =  iChronology.dayOfMonth().set(instant,  month);  [CE]  possible  loss  of  precision  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.dayOfMonth().set(instant,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.dayOfMonth().set(instant,  month);	  int    thisYear    =    iChronology.dayOfMonth();    	non-compiled	[CE]  possible  loss  of  precision	4	None	replace
1501	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfMonth(instant,  month,  iMin);	  int    thisYear    =    iChronology.getYearOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	185	None	replace
1502	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month,  MIN);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfMonth(instant,  month,  MIN);	  int    thisYear    =    iChronology.getYearOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
1503	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.yearOfMonth();  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.yearOfMonth();  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.yearOfMonth();	  int    thisMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
1504	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getDaysMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getDaysMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getDaysMonth(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    float    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
1505	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  iMax);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonth(instant,  iMax);	  Integer    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
1506	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  datePart);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonth(instant,  datePart);	  Integer    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  datePart	128	None	replace
1507	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN_MONTH);  [CE]  cannot  find  symbol  MIN_MONTH  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN_MONTH);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN_MONTH);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  MIN_MONTH	97	None	replace
1508	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant);  [thisYear]  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant);  [thisYear]  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant);  [thisYear]	  int    thisYear    =    iChronology.getYearMonth(instant);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
1509	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month);  [Timeout]  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month);  [Timeout]  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month);  [Timeout]	  int    thisYear    =    iChronology.getYearMonth(instant);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
1510	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getYearMonth(instant);  [thisYear]  [CE]  illegal  start  of  expression  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getYearMonth(instant);  [thisYear]  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getYearMonth(instant);  [thisYear]	  int    thisYear    =    iChronology.getYearMonth(instant);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
1511	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month,  MIN);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  month,  MIN);	  int    months    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	29	None	replace
1512	[BUG]  [BUGGY]  byte  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  byte  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	byte  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);	  long    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	54	None	replace
1513	[BUG]  [BUGGY]  short  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  short  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	short  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);	  long    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	54	None	replace
1514	[BUG]  [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN);  [CE]  cannot  find  symbol  thisYear  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN);	  long    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	54	None	replace
1515	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  IM_MONTH);  [CE]  cannot  find  symbol  IM_MONTH  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  IM_MONTH);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  IM_MONTH);	  int    thisYear    =    iChronology.getYear(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  IM_MONTH	82	None	replace
1516	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  iHeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  iHeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    hour);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	111	None	replace
1517	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  min,  iMax);  [CE]  cannot  find  symbol  min  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  min,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  min,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  min	179	None	replace
1518	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	179	None	replace
1519	[BUG]  [BUGGY]  long  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	179	None	replace
1520	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month  +  1);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month  +  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  month  +  1);	  int    thisYear    =    iChronology.getYearMillis(instant,    month);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	72	None	replace
1521	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month  +  1,  iMax);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month  +  1,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  month  +  1,  iMax);	  int    thisYear    =    iChronology.getYearMillis(instant,    month);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	72	None	replace
1522	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month,  dayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  month,  dayOfMonth);	  int    thisYear    =    iChronology.getYearMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	72	None	replace
1523	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month,  iMin);	  int    thisYear    =    iChronology.getYearMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	164	None	replace
1524	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month,  MIN);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month,  MIN);	  int    thisYear    =    iChronology.getYearMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
1525	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  date);  [CE]  cannot  find  symbol  date  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  date);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  date);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  date	155	None	replace
1526	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  isize);  [CE]  cannot  find  symbol  isize  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  isize);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  isize);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  isize	253	None	replace
1527	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month,  MIN);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month,  MIN);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
1528	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month,  iMin);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	67	None	replace
1529	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month,  iMin);	  int    thisYear    =    iChronology.getYearMonthDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	162	None	replace
1530	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month,  MIN);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month,  MIN);	  int    thisYear    =    iChronology.getYearMonthDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
1531	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  null,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  null,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  null,  iMin);	  int    thisYear    =    iChronology.getYearValue(instant,    null);    	non-compiled	[CE]  cannot  find  symbol  iMin	63	None	replace
1532	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  IME_MONTH);  [CE]  cannot  find  symbol  IME_MONTH  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  IME_MONTH);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  IME_MONTH);	  int    thisYear    =    iChronology.getYear(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  IME_MONTH	86	None	replace
1533	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)+  iMax;  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)+  iMax;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month)+  iMax;	  int    thisYear    =    iChronology.getYearMonth(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
1534	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MILLIS);  [CE]  cannot  find  symbol  MILLIS  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MILLIS);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MILLIS);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  MILLIS	255	None	replace
1535	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN;  [CE]  ')'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN;	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iMin);    	non-compiled	[CE]  ')'  expected	255	None	replace
1536	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  date);  [CE]  cannot  find  symbol  date  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  date);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  date);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iDayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  date	174	None	replace
1537	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  day,  iLeapMonth);  [CE]  cannot  find  symbol  day  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  day,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  day,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  day	124	None	replace
1538	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  datePart,  iLeapMonth);  [CE]  cannot  find  symbol  datePart  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  datePart,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  datePart,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  datePart	124	None	replace
1539	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  iMin,  iLeapMonth);  [CE]  cannot  find  symbol  iMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  iMin,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  iMin,  iLeapMonth);	  int    thisYear    =    iChronology.getYearValue(instant,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	60	None	replace
1540	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MAX_MONTH,  iMax);  [CE]  cannot  find  symbol  MAX_MONTH  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MAX_MONTH,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MAX_MONTH,  iMax);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  MAX_MONTH	33	None	replace
1541	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  iMax;  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  iMax;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  iMax;	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
1542	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN;  [CE]  ')'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN;	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iMinutes);    	non-compiled	[CE]  ')'  expected	214	None	replace
1543	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN  +  1);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN  +  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN  +  1);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iMinutes);    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
1544	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  thisYear);	  int    thisYear    =    iChronology.getYearMonthDayOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	203	None	replace
1545	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  datePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  datePart);	  int    thisYear    =    iChronology.getYearMonthDayOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  datePart	203	None	replace
1546	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  1,  MIN);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  1,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  1,  MIN);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
1547	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  1,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  1,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  1,  iMin);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  iMin	119	None	replace
1548	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  MIN);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  MIN);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
1549	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  MIN);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  MIN);	  int    thisYear    =    iChronology.getMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
1550	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iMin);	  int    thisYear    =    iChronology.getMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	53	None	replace
1551	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN;  [CE]  ')'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  MIN;	  int    thisYear    =    iChronology.getYear(instant,    month,    iMinute);    	non-compiled	[CE]  ')'  expected	84	None	replace
1552	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	125	None	replace
1553	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	125	None	replace
1554	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  [CE]  cannot  find  symbol  thisYear  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	9	None	replace
1555	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  iMax);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  iMax);	  int    thisMonth    =    iChronology.getMonthOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
1556	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month),  iMax  -  1;  [CE]  ';'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month),  iMax  -  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month),  iMax  -  1;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  ';'  expected	71	None	replace
1557	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month  +  1,  iMax);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month  +  1,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  month  +  1,  iMax);	  Integer    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	127	None	replace
1558	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisDay);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisDay);	  int    thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	234	None	replace
1559	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisMinute);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisMinute);	  int    thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	234	None	replace
1560	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisHeap);  [CE]  cannot  find  symbol  thisHeap  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisHeap);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  thisHeap);	  int    thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeap	234	None	replace
1561	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  MIN);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  MIN);	  int    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
1562	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1,  MIN);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1,  MIN);	  int    thisYear    =    iChronology.getYearMonth(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
1563	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1,  iMin);	  int    thisYear    =    iChronology.getYearMonth(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  iMin	186	None	replace
1564	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  MIN);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  -  MIN);	  int    thisYear    =    iChronology.getYearMonth(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
1565	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  iMin);	  int    thisYear    =    iChronology.getYearMonthDayOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	204	None	replace
1566	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  MIN);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month,  MIN);	  int    thisYear    =    iChronology.getYearMonthDayOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	204	None	replace
1567	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month)-  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month)-  1;	  int    thisYear    =    iChronology.getYearMonthDayOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	204	None	replace
1568	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month,  MIN);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonths(instant,  month,  MIN);	  int    thisYear    =    iChronology.getYearMonths(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
1569	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month)-  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonths(instant,  month)-  1;	  int    thisYear    =    iChronology.getYearMonths(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
1570	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  no  suitable  method  found  for  getDayOfMonth(long,long)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);	  long    thisYear    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(long,long)	13	None	replace
1571	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getMonthOfYear(instant,  month);  [CE]  no  suitable  method  found  for  getDayOfMonth(long,long)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getMonthOfYear(instant,  month);	  long    thisYear    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(long,long)	13	None	replace
1572	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  thisYear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);	  long    thisYear    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	13	None	replace
1573	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  11);  [CE]  cannot  find  symbol  thisYear  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  11);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  11);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	68	None	replace
1574	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  iMax);  [CE]  int  cannot  be  dereferenced  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  iMax);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month).getMonthOfYear(instant,    month);    	non-compiled	[CE]  int  cannot  be  dereferenced	257	None	replace
1575	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  MIN);  [CE]  int  cannot  be  dereferenced  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  MIN);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month).getMonthOfYear(instant,    month);    	non-compiled	[CE]  int  cannot  be  dereferenced	257	None	replace
1576	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  thisYear  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month).getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	257	None	replace
1577	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  iMin);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month).getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	257	None	replace
1578	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  thisMonth);  [CE]  int  cannot  be  dereferenced  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  thisMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  thisMonth);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month).getMonthOfYear(instant,    month);    	non-compiled	[CE]  int  cannot  be  dereferenced	257	None	replace
1579	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  months,  MIN,  iLeapMonth);  [CE]  cannot  find  symbol  months  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  months,  MIN,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  months,  MIN,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  months	31	None	replace
1580	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN,  leapMonth);  [CE]  cannot  find  symbol  leapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN,  leapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN,  leapMonth);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  leapMonth	31	None	replace
1581	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  day,  iLeapMonth);  [CE]  cannot  find  symbol  day  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  day,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  day,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  day	31	None	replace
1582	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  minuendMonth,  iLeapMonth);  [CE]  cannot  find  symbol  minuendMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  minuendMonth,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  minuendMonth,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	31	None	replace
1583	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  thisYear,  thisLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  thisYear,  thisLeapMonth);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	251	None	replace
1584	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  thisYear,  iMax);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  thisYear,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  thisYear,  iMax);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	251	None	replace
1585	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  thisYear,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  thisYear,  thisMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  thisYear,  thisMonth);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	251	None	replace
1586	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  thisYear,  thisMinute);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  thisYear,  thisMinute);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	251	None	replace
1587	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  MIN);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month,  MIN);	  int    thisYear    =    iChronology.getYearMonthDay(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
1588	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  months,  MIN,  iLeapMonth);  [CE]  cannot  find  symbol  months  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  months,  MIN,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  months,  MIN,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  months	133	None	replace
1589	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  leapMonth);  [CE]  cannot  find  symbol  leapMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  leapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  leapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  leapMonth	133	None	replace
1590	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN_MONTH,  iLeapMonth);  [CE]  cannot  find  symbol  MIN_MONTH  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN_MONTH,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN_MONTH,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  MIN_MONTH	133	None	replace
1591	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  leapMonth);  [CE]  cannot  find  symbol  leapMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  leapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  leapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  leapMonth	133	None	replace
1592	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMillis(instant,  iMax);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMillis(instant,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMillis(instant,  iMax);	  Integer    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	238	None	replace
1593	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMillis(instant,  1);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMillis(instant,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMillis(instant,  1);	  Integer    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	238	None	replace
1594	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)+  iMax;  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)+  iMax;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month)+  iMax;	  int    thisMonth    =    iChronology.getYearMonth(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
1595	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)+  MIN;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)+  MIN;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month)+  MIN;	  int    thisMonth    =    iChronology.getYearMonth(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
1596	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  month,  MIN);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  month,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  month,  MIN);	  int    thisMonth    =    iChronology.getDaysMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
1597	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  year,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  year,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  year,  month);	  int    month    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	27	None	replace
1598	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1));  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1));  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1));	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month));    	non-compiled	[CE]  ';'  expected	172	None	replace
1599	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisYear  might  not  have  been  initialized  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisYear    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  thisYear  might  not  have  been  initialized	143	None	replace
1600	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN_MONTH);  [CE]  cannot  find  symbol  MIN_MONTH  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN_MONTH);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN_MONTH);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iRight);    	non-compiled	[CE]  cannot  find  symbol  MIN_MONTH	175	None	replace
1601	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  IM_MONTH);  [CE]  cannot  find  symbol  IM_MONTH  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  IM_MONTH);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  IM_MONTH);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iRight);    	non-compiled	[CE]  cannot  find  symbol  IM_MONTH	175	None	replace
1602	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  thisYear,  iMax);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  thisYear,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  thisYear,  iMax);	  int    thisYear    =    iChronology.getYearMillis(instant,    thisYear);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	75	None	replace
1603	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month),  iMax  -  1;  [CE]  ';'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month),  iMax  -  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month),  iMax  -  1;	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month)-    1;    	non-compiled	[CE]  ';'  expected	108	None	replace
1604	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisMonth);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  thisMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol	198	None	replace
1605	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iMax);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month,    iMax);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	81	None	replace
1606	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  min,  iMax);  [CE]  cannot  find  symbol  min  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  min,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  min,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  min	81	None	replace
1607	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iMax);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  month,  MIN,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month,    iMax);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	81	None	replace
1608	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  MIN);  [CE]  cannot  find  symbol  thisYear  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  MIN);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	177	None	replace
1609	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  2,  iMax  -  1);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  2,  iMax  -  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  2,  iMax  -  1);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	177	None	replace
1610	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  18);  [CE]  cannot  find  symbol  thisYear  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  18);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  18);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	177	None	replace
1611	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  date);  [CE]  cannot  find  symbol  date  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  date);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  date);	  Integer    thisYear    =    iChronology.getYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  date	237	None	replace
1612	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month  +  1,  iMax);  [CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month  +  1,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMillisOfDay(instant,  month  +  1,  iMax);	  int    thisMonth    =    iChronology.getMillisOfDay(instant,    month);    	non-compiled	[CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;	106	None	replace
1613	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  months,  MIN);  [CE]  cannot  find  symbol  months  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  months,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMillisOfDay(instant,  months,  MIN);	  int    thisMonth    =    iChronology.getMillisOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  months	106	None	replace
1614	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  datePart);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMillisOfDay(instant,  month,  datePart);	  int    thisMonth    =    iChronology.getMillisOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  datePart	106	None	replace
1615	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  IM_DAY);  [CE]  cannot  find  symbol  IM_DAY  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  IM_DAY);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  IM_DAY);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iDate);    	non-compiled	[CE]  cannot  find  symbol  IM_DAY	103	None	replace
1616	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  months,  MIN,  iLeapMonth);  [CE]  cannot  find  symbol  months  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  months,  MIN,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  months,  MIN,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  months	96	None	replace
1617	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  FIELD_MONTH,  iLeapMonth);  [CE]  cannot  find  symbol  FIELD_MONTH  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  FIELD_MONTH,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  FIELD_MONTH,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  FIELD_MONTH	96	None	replace
1618	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  leapMonth);  [CE]  cannot  find  symbol  leapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  leapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  leapMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  leapMonth	96	None	replace
1619	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN_MONTH,  iLeapMonth);  [CE]  cannot  find  symbol  MIN_MONTH  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN_MONTH,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN_MONTH,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  MIN_MONTH	96	None	replace
1620	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  minuendMonth,  iLeapMonth);  [CE]  cannot  find  symbol  minuendMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  minuendMonth,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  minuendMonth,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	96	None	replace
1621	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  months  +  1,  MIN,  iMax);  [CE]  cannot  find  symbol  months  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  months  +  1,  MIN,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  months  +  1,  MIN,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  months	230	None	replace
1622	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  MAX_MONTH,  iMax);  [CE]  cannot  find  symbol  MAX_MONTH  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  MAX_MONTH,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1,  MAX_MONTH,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  MAX_MONTH	230	None	replace
1623	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  iMax,  1);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  iMax,  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  iMax,  1);	  Integer    thisYear    =    iChronology.getYear(instant,    1);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	239	None	replace
1624	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  MIN);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  MIN);	  Integer    thisYear    =    iChronology.getYear(instant,    1);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	239	None	replace
1625	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  null,  iMax);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  null,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  null,  iMax);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    null);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
1626	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisMinute);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisMinute);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    null);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	93	None	replace
1627	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	144	None	add
1628	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getStandardOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getStandardOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getStandardOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	144	None	add
1629	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getWeekOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getWeekOfYear(instant);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getWeekOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	144	None	add
1630	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1,  MIN);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1,  MIN);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
1631	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1,  iMin);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  iMin	34	None	replace
1632	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1,  MIN);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1,  MIN);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
1633	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1,  iMin);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  iMin	100	None	replace
1634	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  thisYear  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  float    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	208	None	replace
1635	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  datePart);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  datePart);	  float    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  datePart	208	None	replace
1636	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN_MONTH);  [CE]  cannot  find  symbol  MIN_MONTH  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN_MONTH);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN_MONTH);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month,    iMinute);    	non-compiled	[CE]  cannot  find  symbol  MIN_MONTH	35	None	replace
1637	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  MAX_MONTH,  iMax);  [CE]  cannot  find  symbol  MAX_MONTH  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  MAX_MONTH,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  MAX_MONTH,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  MAX_MONTH	260	None	replace
1638	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN);	  Integer    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
1639	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  month)-  1;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonth(instant,  month)-  1;	  Integer    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
1640	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay();  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay();  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfDay();	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMONTth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
1641	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month,  MIN);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  month,  MIN);	  int    thisYear    =    iChronology.getYearOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	225	None	replace
1642	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iWeekMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iWeekMonth);	  int    thisYear    =    iChronology.getYearOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	225	None	replace
1643	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iDays);  [CE]  cannot  find  symbol  iDays  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iDays);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  month,  iDays);	  int    thisYear    =    iChronology.getYearOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iDays	225	None	replace
1644	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  MIN);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1,  MIN);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	229	None	replace
1645	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  dayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1,  dayOfMonth);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	229	None	replace
1646	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  datePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1,  datePart);	  int    thisYear    =    iChronology.getYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  datePart	229	None	replace
1647	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  dayOfMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  dayOfMonth);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	52	None	replace
1648	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  datePart);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  datePart);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  datePart	52	None	replace
1649	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  months,  MIN);  [CE]  cannot  find  symbol  months  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  months,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  months,  MIN);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iMinute);    	non-compiled	[CE]  cannot  find  symbol  months	99	None	replace
1650	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  MIN);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  MIN);	  int    thisYear    =    iChronology.getYearMonthMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	258	None	replace
1651	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMonth(instant,  month,  iMin);	  int    thisYear    =    iChronology.getYearMonthMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	258	None	replace
1652	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  month).getMonth();  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  month).getMonth();  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  month).getMonth();	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisMonth    =    iChronology.getDayOfMonth(instant,    month).getMonth();    	non-compiled	[CE]  cannot  find  symbol	219	None	replace
1653	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  day,  iLeapMonth);  [CE]  cannot  find  symbol  day  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  day,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  day,  iLeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  day	80	None	replace
1654	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  datePart,  iLeapMonth);  [CE]  cannot  find  symbol  datePart  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  datePart,  iLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  datePart,  iLeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  datePart	80	None	replace
1655	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  datePart,  iLeapMonth);  [CE]  cannot  find  symbol  datePart  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  datePart,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  datePart,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  datePart	70	None	replace
1656	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  leapMonth);  [CE]  cannot  find  symbol  leapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  leapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  leapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  leapMonth	70	None	replace
1657	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  value);  [CE]  cannot  find  symbol  value  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  value);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  value);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    valueToAdd);    	non-compiled	[CE]  cannot  find  symbol  value	201	None	replace
1658	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  iMax);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iMax);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	154	None	replace
1659	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  min,  iMax);  [CE]  cannot  find  symbol  min  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  min,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  min,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  min	154	None	replace
1660	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(this,  month,  MIN,  iMax);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(this,  month,  MIN,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(this,  month,  MIN,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iMax);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	154	None	replace
1661	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)-  4;  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)-  4;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month)-  4;	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
1662	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month)-  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month)-  1;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)-    1;    [timeout]    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
1663	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)/  1;  [timeout]  [CE]  illegal  start  of  expression  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)/  1;  [timeout]  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)/  1;  [timeout]	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)-    1;    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1664	[BUG]  [BUGGY]  if(instant  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMONTth  =  iChronology.getMonthOfYear(instant);  }  [CE]  cannot  find  symbol  thisMonth  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(instant  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMONTth  =  iChronology.getMonthOfYear(instant);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(instant  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMONTth  =  iChronology.getMonthOfYear(instant);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	145	None	replace
1665	[BUG]  [BUGGY]  if(instant  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMONTth  =  iChronology.getMonthOfYear(instant);  }  [CE]  cannot  find  symbol  thisMonth  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(instant  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMONTth  =  iChronology.getMonthOfYear(instant);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(instant  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMONTth  =  iChronology.getMonthOfYear(instant);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	145	None	replace
1666	[BUG]  [BUGGY]  if(instant  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(instant  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(instant  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	145	None	replace
1667	[BUG]  [BUGGY]  if(instant  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(instant  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(instant  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	145	None	replace
1668	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  iMax);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  iMax);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
1669	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDay);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDay);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	224	None	replace
1670	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  iMin);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iMin	224	None	replace
1671	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	224	None	replace
1672	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  time);  [CE]  cannot  find  symbol  time  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  time);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  time);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  time	56	None	replace
1673	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month,  iMin);	  int    thisMonth    =    iChronology.getMonthOfSecond(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	246	None	replace
1674	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month,  MIN);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month,  MIN);	  int    thisMonth    =    iChronology.getMonthOfSecond(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	246	None	replace
1675	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisMonth);  [CE]  cannot  find  symbol  thisYear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisMonth);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    null);    	non-compiled	[CE]  cannot  find  symbol  thisYear	148	None	replace
1676	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  MIN);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  MIN);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    day);    	non-compiled	[CE]  cannot  find  symbol	252	None	replace
1677	[BUG]  [BUGGY]  if(instant  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(instant  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(instant  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant;    	non-compiled	[CE]  cannot  find  symbol  thisMonth	146	None	replace
1678	[BUG]  [BUGGY]  if(instant  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMonth  =  iChronology.getMonthOfYear(instant,  thisMonth);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(instant  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMonth  =  iChronology.getMonthOfYear(instant,  thisMonth);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(instant  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMonth  =  iChronology.getMonthOfYear(instant,  thisMonth);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant;    	non-compiled	[CE]  cannot  find  symbol  thisMonth	146	None	replace
1679	[BUG]  [BUGGY]  if(instant  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisMonth);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(instant  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisMonth);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(instant  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisMonth);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant;    	non-compiled	[CE]  cannot  find  symbol  thisMonth	146	None	replace
1680	[BUG]  [BUGGY]  if(instant  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  }  else  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(instant  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  }  else  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(instant  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  }  else  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant;    	non-compiled	[CE]  cannot  find  symbol  thisMonth	146	None	replace
1681	[BUG]  [BUGGY]  if(instant  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMonth  =  iChronology.getMonthOfYear(instant,  MIN,  iMax);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(instant  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMonth  =  iChronology.getMonthOfYear(instant,  MIN,  iMax);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(instant  <  MIN)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMonth  =  iChronology.getMonthOfYear(instant,  MIN,  iMax);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant;    	non-compiled	[CE]  cannot  find  symbol  thisMonth	146	None	replace
1682	[BUG]  [BUGGY]  if(instant  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  if(instant  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	if(instant  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant;    	non-compiled	[CE]  cannot  find  symbol  thisMonth	146	None	replace
1683	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getYearMillis(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getYearMillis(instant,  datePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getYearMillis(instant,  datePart);	  long    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  datePart	73	None	replace
1684	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month,  MIN);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month,  MIN);	  int    thisYear    =    iChronology.getYearMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
1685	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MILLIS);  [CE]  cannot  find  symbol  MILLIS  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MILLIS);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MILLIS);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  MILLIS	47	None	replace
1686	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1,  MIN);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1,  MIN);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
1687	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1,  iMin);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  iMin	38	None	replace
1688	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  MIN);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  MIN);	  int    thisYear    =    iChronology.getYearMonthDay(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
1689	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  new  Long(month));  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  new  Long(month));  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  new  Long(month));	  int    thisYear    =    iChronology.getYear(instant,    months);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	109	None	replace
1690	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  _monthToUse);  [CE]  cannot  find  symbol  _monthToUse  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  _monthToUse);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  _monthToUse);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iDays);    	non-compiled	[CE]  cannot  find  symbol  _monthToUse	241	None	replace
1691	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  new  Long(month);  [CE]  ')'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  new  Long(month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  new  Long(month);	  int    thisYear    =    iChronology.getYear(instant,    date);    	non-compiled	[CE]  ')'  expected	254	None	replace
1692	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MILLISECOND);  [CE]  cannot  find  symbol  MILLISECOND  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MILLISECOND);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MILLISECOND);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iMinute);    	non-compiled	[CE]  cannot  find  symbol  MILLISECOND	49	None	replace
1693	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN  +  1);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN  +  1);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iMinute);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	49	None	replace
1694	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN;  [CE]  ')'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN;	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iMinute);    	non-compiled	[CE]  ')'  expected	49	None	replace
1695	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	170	None	add
1696	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	170	None	add
1697	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getSecondOfDay(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getSecondOfDay(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getSecondOfDay(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	170	None	add
1698	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month  [CE]  ')'  expected  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month	  	non-compiled	[CE]  ')'  expected	170	None	add
1699	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  1,  MIN);  [CE]  cannot  find  symbol  thisYear  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  1,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  1,  MIN);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	181	None	replace
1700	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  11);  [CE]  cannot  find  symbol  thisYear  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  11);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  11);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	181	None	replace
1701	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  thisYear);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  thisYear);	  int    thisYear    =    iChronology.getYearMonthMillis(instant);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	193	None	replace
1702	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  31);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	add	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  31);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1);    [timeout]    	compilable	  [FE]  ExceptionInInitializerError  	122	1	replace
1703	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  31);  [FE]  ExceptionInInitializerError  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  31);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  31);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1);    [timeout]    	compilable	  [FE]  ExceptionInInitializerError  	122	1	replace
1704	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  month,  MIN);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  month,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  month,  MIN);	  int    month    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	245	None	replace
1705	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  MAX_MONTH,  iMax);  [CE]  cannot  find  symbol  MAX_MONTH  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  MAX_MONTH,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  MAX_MONTH,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  MAX_MONTH	178	None	replace
1706	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months  +  1,  MIN,  iMax);  [CE]  cannot  find  symbol  months  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months  +  1,  MIN,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  months  +  1,  MIN,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  cannot  find  symbol  months	178	None	replace
1707	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  *  MIN  +  1,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  *  MIN  +  1,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  *  MIN  +  1,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	178	None	replace
1708	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month,  MIN);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  month,  MIN);	  int    thisYear    =    iChronology.getYearValue(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
1709	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month)-  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  month)-  1;	  int    thisYear    =    iChronology.getYearValue(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
1710	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month)+  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  month)+  1;	  int    thisYear    =    iChronology.getYearValue(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
1711	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        month);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	19	None	add
1712	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        month);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	19	None	add
1713	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        month);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	19	None	add
1714	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        month);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	19	None	add
1715	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getMonthOfMillis(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getMonthOfMillis(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	                int        thisMonth        =        iChronology.getDayOfMonth(instant,        month);        int    thisMONTth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMonth  =  iChronology.getMonthOfMillis(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	19	None	add
1716	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MAX_MONTH,  iMax);  [CE]  cannot  find  symbol  MAX_MONTH  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MAX_MONTH,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MAX_MONTH,  iMax);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  MAX_MONTH	118	None	replace
1717	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  -1);  [CE]  cannot  find  symbol  thisYear  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  -1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  -1);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  cannot  find  symbol  thisYear	231	None	replace
1718	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  IM_MONTH);  [CE]  cannot  find  symbol  IM_MONTH  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  IM_MONTH);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  IM_MONTH);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  IM_MONTH	213	None	replace
1719	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MILLIS);  [CE]  cannot  find  symbol  MILLIS  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MILLIS);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MILLIS);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  MILLIS	213	None	replace
1720	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  1  -  MIN);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  1  -  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  1  -  MIN);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    1);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	160	None	replace
1721	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  1,  iMax);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  1,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  1,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    1);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	160	None	replace
1722	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  30);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  30);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  30);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    1);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	160	None	replace
1723	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  4);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  4);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  4);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    1);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	160	None	replace
1724	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  year);  [CE]  cannot  find  symbol  year  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  year);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  year);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  year	167	None	replace
1725	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  iMin,  iLeapMonth);  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  iMin,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  iMin,  iLeapMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	42	None	replace
1726	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  MIN  +  1);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  MIN  +  1);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  MIN  +  1);	  int    thisMonth    =    iChronology.getYearMonth(instant,    iMax);    	non-compiled	[CE]  cannot  find  symbol	221	None	replace
1727	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  datePart);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  datePart);	  int    thisMonth    =    iChronology.getYearMonth(instant,    iMax);    	non-compiled	[CE]  cannot  find  symbol  datePart	221	None	replace
1728	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  datePart);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  datePart);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  datePart	10	None	replace
1729	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  thisMonth);  [CE]  no  suitable  method  found  for  dayOfMonth(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  thisMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.dayOfMonth(instant,  thisMonth);	  int    thisMonth    =    iChronology.dayOfMonth(instant);    	non-compiled	[CE]  no  suitable  method  found  for  dayOfMonth(long,int)	39	None	replace
1730	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  MIN);  [CE]  no  suitable  method  found  for  dayOfMonth(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.dayOfMonth(instant,  MIN);	  int    thisMonth    =    iChronology.dayOfMonth(instant);    	non-compiled	[CE]  no  suitable  method  found  for  dayOfMonth(long,int)	39	None	replace
1731	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iEnd);  [CE]  cannot  find  symbol  iEnd  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iEnd);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  iEnd);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iEnd	240	None	replace
1732	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  datePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN,  datePart);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  datePart	240	None	replace
1733	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  iHeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  iHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	207	None	replace
1734	[BUG]  [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN);  [CE]  cannot  find  symbol  thisYear  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN);	  long    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	163	None	replace
1735	[BUG]  [BUGGY]  short  thisYear  =  iChronology.getDayOfMonth(instant,  month);  [CE]  possible  loss  of  precision  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  short  thisYear  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	short  thisYear  =  iChronology.getDayOfMonth(instant,  month);	  long    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  possible  loss  of  precision	163	None	replace
1736	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1);  [CE]  no  suitable  method  found  for  getDayOfMonth(long,long)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1);	  long    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(long,long)	163	None	replace
1737	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  iMax;  [CE]  cannot  find  symbol  thisYear  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  iMax;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  iMax;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  thisYear	69	None	replace
1738	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  iMax);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  long  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iMax);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	44	None	replace
1739	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  min,  iMax);  [CE]  cannot  find  symbol  min  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  min,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  min,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  min	44	None	replace
1740	[BUG]  [BUGGY]  boolean  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMax);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  boolean  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	boolean  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iMax);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	44	None	replace
1741	[BUG]  [BUGGY]  short  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMax);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  short  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	short  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    iMax);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	44	None	replace
1742	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month).intValue();  [CE]  int  cannot  be  dereferenced  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month).intValue();  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month).intValue();	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  int  cannot  be  dereferenced	183	None	replace
1743	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  iMax);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	183	None	replace
1744	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month).longValue();  [CE]  int  cannot  be  dereferenced  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month).longValue();  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month).longValue();	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  int  cannot  be  dereferenced	183	None	replace
1745	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  IM_DAY);  [CE]  cannot  find  symbol  IM_DAY  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  IM_DAY);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  IM_DAY);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  IM_DAY	156	None	replace
1746	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN_MONTH);  [CE]  cannot  find  symbol  MIN_MONTH  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN_MONTH);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN_MONTH);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month,    iRight);    	non-compiled	[CE]  cannot  find  symbol  MIN_MONTH	210	None	replace
1747	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1,  MIN);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1,  MIN);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1,  MIN);	  int    thisYear    =    iChronology.getYearMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
1748	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1,  iMin);	  int    thisYear    =    iChronology.getYearMonth(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  iMin	135	None	replace
1749	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  datePart);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN,  datePart);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    MIN);    	non-compiled	[CE]  cannot  find  symbol  datePart	48	None	replace
1750	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  time);  [CE]  cannot  find  symbol  time  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  time);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  time);	  Integer    thisYear    =    iChronology.getYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  time	211	None	replace
1751	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  iMax);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearValue(instant,  iMax);	  Integer    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
1752	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  datePart);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearValue(instant,  datePart);	  Integer    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol  datePart	212	None	replace
1753	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  iMin);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearValue(instant,  iMin);	  Integer    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol  iMin	212	None	replace
1754	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  MIN);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearValue(instant,  MIN);	  Integer    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
1755	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  value);  [CE]  cannot  find  symbol  value  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant,  value);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearValue(instant,  value);	  Integer    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol  value	212	None	replace
1756	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  iMin);	  int    thisYear    =    iChronology.getYearMonth(instant,    1);    	non-compiled	[CE]  cannot  find  symbol  iMin	5	None	replace
1757	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  iDayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  iDayOfMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  iDayOfMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    1);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	5	None	replace
1758	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisYear  might  not  have  been  initialized  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  might  not  have  been  initialized	18	None	replace
1759	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisYear  =  iChronology.getDayOfMonth(instant,  month);  [timeout]  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisYear  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisYear  =  iChronology.getDayOfMonth(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[timeout]	18	None	replace
1760	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  year);  [timeout]  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  year);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  year);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[timeout]	18	None	replace
1761	[BUG]  [BUGGY]  Char  thisYear  =  iChronology.getYearMillis(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  Char  thisYear  =  iChronology.getYearMillis(instant,  thisYear);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Char  thisYear  =  iChronology.getYearMillis(instant,  thisYear);	  char    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
1762	[BUG]  [BUGGY]  char  thisMonth  =  iChronology.getDaysMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  char  thisMonth  =  iChronology.getDaysMonth(instant,  month);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisMonth  =  iChronology.getDaysMonth(instant,  month);	          int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    char    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	189	None	replace
1763	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  months,  MIN,  iLeapMonth);  [CE]  cannot  find  symbol  months  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  months,  MIN,  iLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  months,  MIN,  iLeapMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  months	115	None	replace
1764	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN,  leapMonth);  [CE]  cannot  find  symbol  leapMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN,  leapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN,  leapMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  leapMonth	115	None	replace
1765	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  leapMonth);  [CE]  cannot  find  symbol  leapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  leapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  leapMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  leapMonth	115	None	replace
1766	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  IM_MONTH);  [CE]  cannot  find  symbol  IM_MONTH  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  IM_MONTH);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  IM_MONTH);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  IM_MONTH	187	None	replace
1767	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MILLIS);  [CE]  cannot  find  symbol  MILLIS  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MILLIS);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  MILLIS);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iMin);    	non-compiled	[CE]  cannot  find  symbol  MILLIS	187	None	replace
1768	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  iMax;  [CE]  cannot  find  symbol  thisYear  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  iMax;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  iMax;	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  thisYear	107	None	replace
1769	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  MIN;  [CE]  cannot  find  symbol  thisYear  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  MIN;  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  MIN;	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  thisYear	107	None	replace
1770	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  iMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  months,  iMax);	  int    month    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	28	None	replace
1771	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  date);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  date);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  date);	  int    month    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	28	None	replace
1772	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  day);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  day);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  day);	  int    month    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	28	None	replace
1773	[BUG]  [BUGGY]  int  thisYear  =  iChronology.dayOfMonthValue(instant,  iMax);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.dayOfMonthValue(instant,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.dayOfMonthValue(instant,  iMax);	  int    thisYear    =    iChronology.getYearValue(instant,    iMax);    	non-compiled	[CE]  cannot  find  symbol	263	None	replace
1774	[BUG]  [BUGGY]  int  thisYear  =  iChronology.setYearValue(instant,  iMax);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.setYearValue(instant,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.setYearValue(instant,  iMax);	  int    thisYear    =    iChronology.getYearValue(instant,    iMax);    	non-compiled	[CE]  cannot  find  symbol	263	None	replace
1775	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  MIN,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  MIN,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  MIN,  iMin);	  int    thisYear    =    iChronology.getYearValue(instant,    iMax);    	non-compiled	[CE]  cannot  find  symbol  iMin	263	None	replace
1776	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  MIN  +  1);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  MIN  +  1);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  MIN  +  1);	  int    thisYear    =    iChronology.getYearValue(instant,    iMax);    	non-compiled	[CE]  cannot  find  symbol	263	None	replace
1777	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MAX_MONTH,  iMax);  [CE]  cannot  find  symbol  MAX_MONTH  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MAX_MONTH,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  MAX_MONTH,  iMax);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  cannot  find  symbol  MAX_MONTH	136	None	replace
1778	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  year);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  year);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	25	None	replace
1779	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	25	None	replace
1780	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  iMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  iMax);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	25	None	replace
1781	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  null,  iMax);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  null,  iMax);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  null,  iMax);	  int    thisYear    =    iChronology.getYearMonth(instant,    null);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
1782	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  null,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  null,  thisLeapMonth);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  null,  thisLeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    null);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	112	None	replace
1783	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  null,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  null,  thisDay);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  null,  thisDay);	  int    thisYear    =    iChronology.getYear(instant,    null);    	non-compiled	[CE]  cannot  find  symbol  thisDay	112	None	replace
1784	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  null,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  null,  datePart);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  null,  datePart);	  int    thisYear    =    iChronology.getYear(instant,    null);    	non-compiled	[CE]  cannot  find  symbol  datePart	112	None	replace
1785	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  MIN);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month,  MIN);	  int    month    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	26	None	replace
1786	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  datePart);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  datePart);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  datePart	243	None	replace
1787	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  18);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  18);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  18);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	243	None	replace
1788	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  iMin);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  iMin);	  int    thisYear    =    iChronology.getYearValue(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iMin	62	None	replace
1789	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  thisDay);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  thisYear,  thisDay);	  int    thisYear    =    iChronology.getYearValue(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	62	None	replace
1790	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  thisYear  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	  int    thisMonth    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	8	None	replace
1791	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisMonth);  [CE]  cannot  find  symbol  thisYear  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisMonth);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisMonth);	  int    thisMonth    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	8	None	replace
1792	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  MIN);  [CE]  cannot  find  symbol  thisYear  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  MIN);	  int    thisMonth    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	8	None	replace
1793	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  MIN);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  MIN);	  int    month    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	190	None	replace
1794	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN_MONTH);  [CE]  cannot  find  symbol  MIN_MONTH  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN_MONTH);  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN_MONTH);	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iMinute);    	non-compiled	[CE]  cannot  find  symbol  MIN_MONTH	137	None	replace
1795	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN;  [CE]  ')'  expected  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN;	  int    thisYear    =    iChronology.getYearMonth(instant,    month,    iMinute);    	non-compiled	[CE]  ')'  expected	137	None	replace
1796	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)-  4;  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)-  4;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month)-  4;	  int    thisYear    =    iChronology.getYearMonth(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
1797	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1)-  1;  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1)-  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1)-  1;	  int    thisYear    =    iChronology.getYearMonth(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
1798	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  1  -  MIN);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  1  -  MIN);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  1  -  MIN);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    1);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	51	None	replace
1799	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  1,  iMax);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  1,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  1,  iMax);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    1);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	51	None	replace
1800	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  4);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  4);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  4);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    1);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	51	None	replace
1801	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  30);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  30);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  30);	  int    thisYear    =    iChronology.getYearMonthMillis(instant,    month,    1);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	51	None	replace
1802	[BUG]  [BUGGY]  char  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  iMax);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  char  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  iMax);  [BUGGY]      int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  iMax);	  int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month    +    1,    iMax);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	244	None	replace
1803	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month)+  1;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month)+  1;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)+    1;    [timeout]    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
1804	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  MIN;  [timeout]  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  MIN;  [BUGGY]        int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  MIN;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)+    1;    [timeout]    	non-compiled	[timeout]	123	None	replace
