bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  year);  [CE]  cannot  find  symbol  year  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  year);	  int    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  year	2	None	replace
2	[BUG]  [BUGGY]  int  thisYear  =  iChronology.dayOfMonth(instant);  [CE]  no  suitable  method  found  for  dayOfMonth(long)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.dayOfMonth(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.dayOfMonth(instant);	  int    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  no  suitable  method  found  for  dayOfMonth(long)	2	None	replace
3	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  months);  [CE]  cannot  find  symbol  months  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  months);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  months);	  int    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  months	2	None	replace
4	[BUG]  [BUGGY]  int  thisYear  =  iChronology.dayOfMonth();  [CE]  incompatible  types  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.dayOfMonth();  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.dayOfMonth();	  int    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  incompatible  types	2	None	replace
5	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  1);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  1);	  int    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
6	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  null);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  null);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  null);	  int    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
7	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  day);  [CE]  cannot  find  symbol  day  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  day);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  day);	  int    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  day	2	None	replace
8	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant);  [CE]  cannot  find  symbol  thisYear  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	23	None	replace
9	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant);  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
10	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	23	None	replace
11	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	23	None	replace
12	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  [CE]  cannot  find  symbol  year  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  year	23	None	replace
13	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getDayOfMonth(instant);  [CE]  no  suitable  method  found  for  getDayOfMonth(long,long)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  long  thisYear  =  iChronology.getDayOfMonth(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getDayOfMonth(instant);	  int    thisYear    =    iChronology.getDayOfMonth(instant);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(long,long)	3	None	replace
14	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	26	None	add
15	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    Integer  thisMonth  =  iChronology.getDayOfMonth(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	26	None	add
16	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  year);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  year);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMonth  =  iChronology.getDayOfMonth(instant,  year);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	26	None	add
17	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMonth  =  iChronology.getDayOfMonth(instant,  months);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	26	None	add
18	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisYear  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisYear  =  iChronology.getDayOfMonth(instant,  month);	  	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	26	None	add
19	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	add	        int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	26	8	add
20	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	26	8	add
21	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month));  [CE]  ';'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month));  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMonth  =  iChronology.getDayOfMonth(instant,  month));	  	non-compiled	[CE]  ';'  expected	26	None	add
22	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month;  [CE]  ')'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month;  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMonth  =  iChronology.getDayOfMonth(instant,  month;	  	non-compiled	[CE]  ')'  expected	26	None	add
23	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	21	None	replace
24	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfDay(instant);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	21	None	replace
25	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	21	None	replace
26	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	21	None	replace
27	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  year);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  year);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	21	None	replace
28	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  months);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	21	None	replace
29	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  thisYear  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  month);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	21	None	replace
30	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getDayOfMonth(instant);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	21	None	replace
31	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iLeapMonth);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iLeapMonth);	      int    thisYear    =    iChronology.getYearMonthDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
32	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iHeapMonth);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iHeapMonth);	      int    thisYear    =    iChronology.getYearMonthDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	13	None	replace
33	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iMax);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iMax);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iMax);	      int    thisYear    =    iChronology.getYearMonthDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
34	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month  +  1);	      int    thisYear    =    iChronology.getYearMonthDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
35	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iMinute);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iMinute);	      int    thisYear    =    iChronology.getYearMonthDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	13	None	replace
36	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  1;  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month)+  1;	      int    thisYear    =    iChronology.getYearMonthDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
37	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month)-  1;  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month)-  1;	      int    thisYear    =    iChronology.getYearMonthDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
38	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month  -  1);	      int    thisYear    =    iChronology.getYearMonthDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
39	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant);  [CE]  no  suitable  method  found  for  dayOfMonth(long)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.dayOfMonth(instant);	      int    thisMonth    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  no  suitable  method  found  for  dayOfMonth(long)	18	None	replace
40	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth();  [CE]  incompatible  types  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth();  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.dayOfMonth();	      int    thisMonth    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  incompatible  types	18	None	replace
41	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  year);  [CE]  cannot  find  symbol  year  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  year);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  year);	      int    thisMonth    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  year	18	None	replace
42	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  iLeapMonth);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  iLeapMonth);	      int    thisMonth    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
43	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  dayOfMonth);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  dayOfMonth);	      int    thisMonth    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	18	None	replace
44	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMax);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMax);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMax);	      int    thisYear    =    iChronology.getYearMonthMillis(instant,    month);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	12	None	replace
45	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iLeapMonth);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iLeapMonth);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iLeapMonth);	      int    thisYear    =    iChronology.getYearMonthMillis(instant,    month);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	12	None	replace
46	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iHeapMonth);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iHeapMonth);	      int    thisYear    =    iChronology.getYearMonthMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	12	None	replace
47	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMin);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMin);	      int    thisYear    =    iChronology.getYearMonthMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	12	None	replace
48	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  MIN);	      int    thisYear    =    iChronology.getYearMonthMillis(instant,    month);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	12	None	replace
49	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMinute);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iMinute);	      int    thisYear    =    iChronology.getYearMonthMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	12	None	replace
50	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  dayOfMonth);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  dayOfMonth);	      int    thisYear    =    iChronology.getYearMonthMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	12	None	replace
51	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  1);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  1);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  1);	      int    thisYear    =    iChronology.getYearMonthMillis(instant,    month);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	12	None	replace
52	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1);	      int    thisYear    =    iChronology.getYearMonthMillis(instant,    month);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	12	None	replace
53	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
54	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  long  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getDaysInYearMonth(instant,  month);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	6	None	replace
55	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  yearToUse);  [CE]  cannot  find  symbol  yearToUse  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  yearToUse);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  yearToUse);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  yearToUse	6	None	replace
56	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  months);  [CE]  cannot  find  symbol  months  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  months);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  months);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  months	6	None	replace
57	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfDay(instant,  month);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfDay(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfDay(instant,  month);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
58	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  month);	  int    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
59	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  year);  [CE]  cannot  find  symbol  year  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  year);	  int    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol  year	15	None	replace
60	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  iLeapMonth);	  int    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
61	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  iHeapMonth);	  int    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	15	None	replace
62	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  thisYear);	  int    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
63	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  null);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  null);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  null);	  int    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
64	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  day);  [CE]  cannot  find  symbol  day  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  day);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  day);	  int    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol  day	15	None	replace
65	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  datePart);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  datePart);	  int    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol  datePart	15	None	replace
66	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  1);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  1);	  int    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
67	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
68	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1);  [CE]  cannot  find  symbol  thisYear  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	20	None	replace
69	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1;  [CE]  cannot  find  symbol  thisYear  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1;  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1;	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	20	None	replace
70	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	20	None	replace
71	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1;  [CE]  cannot  find  symbol  thisYear  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1;  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1;	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	20	None	replace
72	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  month);	  int    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	16	None	replace
73	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getYearMillis(instant);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  long  thisYear  =  iChronology.getYearMillis(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getYearMillis(instant);	  int    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	16	None	replace
74	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  year);	  int    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  year	16	None	replace
75	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  thisYear);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  thisYear);	  int    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	16	None	replace
76	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  datePart);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  datePart);	  int    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  datePart	16	None	replace
77	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  dayOfMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  dayOfMonth);	  int    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	16	None	replace
78	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  months);  [CE]  cannot  find  symbol  months  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  months);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  months);	  int    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  months	16	None	replace
79	[BUG]  [BUGGY]  char  thisYear  =  iChronology.getYearMillis(instant);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  char  thisYear  =  iChronology.getYearMillis(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	char  thisYear  =  iChronology.getYearMillis(instant);	  int    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	16	None	replace
80	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iLeapMonth);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	1	None	replace
81	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iMax);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	1	None	replace
82	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  iHeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	1	None	replace
83	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  MIN);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  MIN);	  int    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	1	None	replace
84	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  iMinute);	  int    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	1	None	replace
85	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iDays);  [CE]  cannot  find  symbol  iDays  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iDays);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  iDays);	  int    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iDays	1	None	replace
86	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  iMin);	  int    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	1	None	replace
87	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iWeekMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  iWeekMonth);	  int    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	1	None	replace
88	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iDayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iDayOfMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  iDayOfMonth);	  int    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	1	None	replace
89	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  year);  [CE]  cannot  find  symbol  year  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  year);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  year	14	None	replace
90	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  months);  [CE]  cannot  find  symbol  months  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  months);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  months);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  months	14	None	replace
91	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  day);  [CE]  cannot  find  symbol  day  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  day);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  day);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  day	14	None	replace
92	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  1);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  1);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
93	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  null);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  null);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  null);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
94	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  hour);  [CE]  cannot  find  symbol  hour  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  hour);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  hour);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  hour	14	None	replace
95	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  datePart);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  datePart);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  datePart	14	None	replace
96	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
97	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	24	None	replace
98	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iMax);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
99	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iMinute);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	24	None	replace
100	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
101	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iLocale);  [CE]  cannot  find  symbol  iLocale  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iLocale);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iLocale);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iLocale	24	None	replace
102	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iWeekMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iWeekMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	24	None	replace
103	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iDate);  [CE]  cannot  find  symbol  iDate  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iDate);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iDate);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iDate	24	None	replace
104	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  yearToUse);  [CE]  cannot  find  symbol  yearToUse  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  yearToUse);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  yearToUse);	  int    thisYear    =    iChronology.getMonthOfYear(instant);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  yearToUse	4	None	replace
105	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  year);	  int    thisYear    =    iChronology.getMonthOfYear(instant);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  year	4	None	replace
106	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month);  [CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getMillisOfDay(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMillisOfDay(instant,  month);	      int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;	27	None	replace
107	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  1;  [CE]  cannot  find  symbol  thisYear  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  1;  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  1;	      int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	27	None	replace
108	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  1;  [CE]  cannot  find  symbol  thisYear  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  1;  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  1;	      int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	27	None	replace
109	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  months);  [CE]  cannot  find  symbol  months  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  months);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  months);	  int    thisYear    =    iChronology.getYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  months	25	None	replace
110	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  day);  [CE]  cannot  find  symbol  day  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  day);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  day);	  int    thisYear    =    iChronology.getYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  day	25	None	replace
111	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  hour);  [CE]  cannot  find  symbol  hour  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  hour);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  hour);	  int    thisYear    =    iChronology.getYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  hour	25	None	replace
112	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  null);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  null);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  null);	  int    thisYear    =    iChronology.getYear(instant,    year);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	25	None	replace
113	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  timePart);  [CE]  cannot  find  symbol  timePart  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  timePart);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  timePart);	  int    thisYear    =    iChronology.getYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  timePart	25	None	replace
114	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  week);  [CE]  cannot  find  symbol  week  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  week);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  week);	  int    thisYear    =    iChronology.getYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  week	25	None	replace
115	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  iLeapMonth);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  iLeapMonth);	      int    thisMonth    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
116	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  iHeapMonth);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  iHeapMonth);	      int    thisMonth    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	17	None	replace
117	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  1);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month  +  1);	      int    thisMonth    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
118	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  iMax);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  iMax);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  iMax);	      int    thisMonth    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
119	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  1);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  1);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month  -  1);	      int    thisMonth    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
120	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)+  1;  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month)+  1;	      int    thisMonth    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
121	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month)-  1;  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month)-  1;	      int    thisMonth    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
122	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1);  [timeout]  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    [timeout]    	non-compiled	[timeout]	8	None	replace
123	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  1;  [timeout]  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  1;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    [timeout]    	non-compiled	[timeout]	8	None	replace
124	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	8	None	replace
125	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	8	None	replace
126	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  1;  [timeout]  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  1;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    [timeout]    	non-compiled	[timeout]	8	None	replace
127	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  month);	      Integer    thisYear    =    iChronology.getYear(instant);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	28	None	replace
128	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonth(instant);	      Integer    thisYear    =    iChronology.getYear(instant);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
129	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  Integer  thisYear  =  iChronology.getYearMonth(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonth(instant,  month);	      Integer    thisYear    =    iChronology.getYear(instant);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
130	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getMonthOfYear(instant);  [timeout]  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  Integer  thisYear  =  iChronology.getMonthOfYear(instant);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getMonthOfYear(instant);	      Integer    thisYear    =    iChronology.getYear(instant);    	non-compiled	[timeout]	28	None	replace
131	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getDayOfMonth(instant);  [timeout]  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  Integer  thisYear  =  iChronology.getDayOfMonth(instant);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getDayOfMonth(instant);	      Integer    thisYear    =    iChronology.getYear(instant);    	non-compiled	[timeout]	28	None	replace
132	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMonthDay(instant);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  Integer  thisYear  =  iChronology.getYearMonthDay(instant);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMonthDay(instant);	      Integer    thisYear    =    iChronology.getYear(instant);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
133	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
134	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	9	None	replace
135	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1);	  int    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
136	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iMax);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
137	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  iMinute);	  int    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	9	None	replace
138	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)-  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month)-  1;	  int    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
139	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)+  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month)+  1;	  int    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
140	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iLocale);  [CE]  cannot  find  symbol  iLocale  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iLocale);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  iLocale);	  int    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iLocale	9	None	replace
141	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	22	None	add
142	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    Integer  thisMonth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	22	None	add
143	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisYear  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	22	None	add
144	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	add	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	22	8	add
145	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	22	8	add
146	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant;  [CE]  ')'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant;  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant;	  	non-compiled	[CE]  ')'  expected	22	None	add
147	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	22	None	add
148	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  null);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  null);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  null);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	22	None	add
149	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  char  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  char  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    char  thisMonth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	22	None	add
150	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant);	  int    thisYear    =    iChronology.getYearMonthDay(instant);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	7	None	replace
151	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  year);	  int    thisYear    =    iChronology.getYearMonthDay(instant);    	non-compiled	[CE]  cannot  find  symbol  year	7	None	replace
152	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  months);  [CE]  cannot  find  symbol  months  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  months);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  months);	  int    thisYear    =    iChronology.getYearMonthDay(instant);    	non-compiled	[CE]  cannot  find  symbol  months	7	None	replace
153	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iLeapMonth);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iLeapMonth);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iLeapMonth);	      int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	11	None	replace
154	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMax);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMax);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMax);	      int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	11	None	replace
155	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iHeapMonth);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iHeapMonth);	      int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	11	None	replace
156	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMin);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMin);	      int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	11	None	replace
157	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMinute);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iMinute);	      int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinute	11	None	replace
158	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  MIN);	      int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	11	None	replace
159	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  dayOfMonth);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  dayOfMonth);	      int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	11	None	replace
160	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  1);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  1);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  1);	      int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	11	None	replace
161	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iWeekMonth);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iWeekMonth);	      int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	11	None	replace
162	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
163	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getDayOfMonth(instant,  month);  [CE]  no  suitable  method  found  for  getDayOfMonth(long,long)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  long  thisYear  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	long  thisYear  =  iChronology.getDayOfMonth(instant,  month);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(long,long)	5	None	replace
164	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfDay(instant,  month);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
165	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	19	None	add
166	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	19	None	add
167	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	19	None	add
168	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisYear  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	19	None	add
169	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	19	None	add
170	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	add	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	19	8	add
171	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	19	8	add
172	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month));  [CE]  ';'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month));  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month));	  	non-compiled	[CE]  ';'  expected	19	None	add
173	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  [CE]  ')'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month;	  	non-compiled	[CE]  ')'  expected	19	None	add
174	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iDayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iDayOfMonth);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iDayOfMonth);	      int    thisYear    =    iChronology.getYearMonthMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	12	None	replace
175	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iRight);  [CE]  cannot  find  symbol  iRight  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iRight);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iRight);	      int    thisYear    =    iChronology.getYearMonthMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iRight	12	None	replace
176	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iWeekMonth);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  iWeekMonth);	      int    thisYear    =    iChronology.getYearMonthMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	12	None	replace
177	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1);  [CE]  cannot  find  symbol  thisYear  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	20	None	replace
178	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  iMax);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  iMax);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	20	None	replace
179	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  iMax);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	20	None	replace
180	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  month);	      int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
181	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  1);  [CE]  cannot  find  symbol  thisYear  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  1);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  1);	      int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisYear	27	None	replace
182	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  time);  [CE]  cannot  find  symbol  time  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  time);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  time);	  int    thisYear    =    iChronology.getYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  time	25	None	replace
183	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	19	None	add
184	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  char  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  char  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    char  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	19	None	add
185	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfMonth(instant,  month);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
186	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1);	  int    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
187	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  iMin);	  int    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	9	None	replace
188	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  float  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  float  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    float  thisMonth  =  iChronology.getDayOfMonth(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	26	None	add
189	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  char  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  char  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    char  thisMonth  =  iChronology.getDayOfMonth(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	26	None	add
190	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	21	None	replace
191	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getMonthOfYear(month);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	21	None	replace
192	[BUG]  [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  month  =  iChronology.getMonthOfYear(instant,  month);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	21	None	replace
193	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant);	      	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	10	None	replace
194	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant);	  int    thisYear    =    iChronology.getDayOfMonth(instant);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
195	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant);  [timeout]  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant);  [timeout]  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant);  [timeout]	  int    thisYear    =    iChronology.getDayOfMonth(instant);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
196	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iLocale);  [CE]  cannot  find  symbol  iLocale  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iLocale);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  iLocale);	  int    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iLocale	1	None	replace
197	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iRight);  [CE]  cannot  find  symbol  iRight  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iRight);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  iRight);	  int    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iRight	1	None	replace
198	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  months);  [CE]  cannot  find  symbol  months  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  months);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  months);	      int    thisMonth    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  months	18	None	replace
199	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  1);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  1);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  1);	      int    thisMonth    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
200	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  day);  [CE]  cannot  find  symbol  day  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  day);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  day);	      int    thisMonth    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  day	18	None	replace
201	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  valueToAdd);  [CE]  cannot  find  symbol  valueToAdd  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  valueToAdd);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  valueToAdd);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  valueToAdd	14	None	replace
202	[BUG]  [BUGGY]  float  thisYear  =  iChronology.getYearMillis(instant);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  float  thisYear  =  iChronology.getYearMillis(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisYear  =  iChronology.getYearMillis(instant);	  int    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	16	None	replace
203	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfYear(instant);	  int    thisYear    =    iChronology.getYearMonthDay(instant);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
204	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfYear(instant,  month);	  int    thisYear    =    iChronology.getYearMonthDay(instant);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
205	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(thisYear,  month);	  int    thisYear    =    iChronology.getYearMonthDay(instant);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
206	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  float  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  float  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    float  thisMonth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	22	None	add
207	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  [CE]  cannot  find  symbol  months  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  months	23	None	replace
208	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisYear  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	23	None	replace
209	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  day);  [CE]  cannot  find  symbol  day  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  day);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  day);	      int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  day	11	None	replace
210	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iRight);  [CE]  cannot  find  symbol  iRight  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iRight);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month,  iRight);	      int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iRight	11	None	replace
211	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  year);  [CE]  cannot  find  symbol  year  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  year);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  year);	      Integer    thisYear    =    iChronology.getYear(instant);    	non-compiled	[CE]  cannot  find  symbol  year	28	None	replace
212	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  Integer  thisYear  =  iChronology.getYearValue(instant);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearValue(instant);	      Integer    thisYear    =    iChronology.getYear(instant);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
213	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iMin);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	24	None	replace
214	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iMinutes);  [CE]  cannot  find  symbol  iMinutes  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iMinutes);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iMinutes);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinutes	24	None	replace
215	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iMinit);  [CE]  cannot  find  symbol  iMinit  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iMinit);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iMinit);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMinit	24	None	replace
216	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
217	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  valueToAdd);  [CE]  cannot  find  symbol  valueToAdd  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  valueToAdd);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  valueToAdd);	  int    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol  valueToAdd	15	None	replace
218	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  months);  [CE]  cannot  find  symbol  months  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  months);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  months);	  int    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol  months	15	None	replace
219	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month).getMonth();  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month).getMonth();  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    int  thisMonth  =  iChronology.getDayOfMonth(instant,  month).getMonth();	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	26	None	add
220	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonths(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonths(instant,  month);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
221	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  iMax);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  iMax);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  iMax);	      int    thisMonth    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
222	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  iHeapMonth);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  iHeapMonth);	      int    thisMonth    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	18	None	replace
223	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  iMin);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  iMin);	      int    thisMonth    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  iMin	18	None	replace
224	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
225	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  month);	  int    thisYear    =    iChronology.getMonthOfYear(instant);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
226	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months);  [CE]  cannot  find  symbol  months  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  months);	  int    thisYear    =    iChronology.getMonthOfYear(instant);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  months	4	None	replace
227	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  iMax);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  iMax);	  int    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	16	None	replace
228	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  hour);  [CE]  cannot  find  symbol  hour  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  hour);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  hour);	  int    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  cannot  find  symbol  hour	16	None	replace
229	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1);	  int    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	1	None	replace
230	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  iMax);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	1	None	replace
231	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  [CE]  cannot  find  symbol  thisYear  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  1);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisYear	23	None	replace
232	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  datePart);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  datePart);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  datePart	23	None	replace
233	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  day);  [CE]  cannot  find  symbol  day  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  day);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  day);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  day	23	None	replace
234	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  thisYear);	  int    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
235	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  datePart);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  datePart);	  int    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  datePart	2	None	replace
236	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  iMax);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  iMax);	  int    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
237	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  months);  [CE]  cannot  find  symbol  months  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  months);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  months);	      Integer    thisYear    =    iChronology.getYear(instant);    	non-compiled	[CE]  cannot  find  symbol  months	28	None	replace
238	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYearMillis(instant);  [CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  Integer  thisYear  =  iChronology.getYearMillis(instant);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYearMillis(instant);	      Integer    thisYear    =    iChronology.getYear(instant);    	non-compiled	[CE]  method  getYearMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	28	None	replace
239	[BUG]  [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  1);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  Integer  thisYear  =  iChronology.getYear(instant,  1);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	Integer  thisYear  =  iChronology.getYear(instant,  1);	      Integer    thisYear    =    iChronology.getYear(instant);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	28	None	replace
240	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
241	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iDays);  [CE]  cannot  find  symbol  iDays  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iDays);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iDays);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iDays	24	None	replace
242	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	20	None	replace
243	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1);	      int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	11	None	replace
244	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  iMax);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  iMax);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDayMillis(instant,  month  +  1,  iMax);	      int    thisYear    =    iChronology.getYearMonthDayMillis(instant,    month);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	11	None	replace
245	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  month);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	21	None	replace
246	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month);  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfSecond(instant,  month);	      int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
247	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month);  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getMonthOfMinute(instant,  month);	      int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
248	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iMin);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  iMin);	      int    thisYear    =    iChronology.getYearMonthDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	13	None	replace
249	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  month,  MIN);	      int    thisYear    =    iChronology.getYearMonthDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
250	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  datePart);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  datePart);	  int    thisYear    =    iChronology.getYearMonthDay(instant);    	non-compiled	[CE]  cannot  find  symbol  datePart	7	None	replace
251	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  thisYear);	  int    thisYear    =    iChronology.getYearMonthDay(instant);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
252	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  day);  [CE]  cannot  find  symbol  day  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthDay(instant,  day);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthDay(instant,  day);	  int    thisYear    =    iChronology.getYearMonthDay(instant);    	non-compiled	[CE]  cannot  find  symbol  day	7	None	replace
253	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	8	None	replace
254	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  date);  [CE]  cannot  find  symbol  date  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  date);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYear(instant,  date);	  int    thisYear    =    iChronology.getYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  date	25	None	replace
255	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  iMin);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  iMin);	      int    thisMonth    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iMin	17	None	replace
256	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month,  MIN);	      int    thisMonth    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
257	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  month);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	19	None	add
258	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthMonth(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMonth(instant,  month);	      	non-compiled	[CE]  cannot  find  symbol	10	None	replace
259	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMONTthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMONTthOfYear(instant);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMONTthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	22	None	add
260	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  iMax);  [CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  iMax);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month  +  1,  iMax);	      int    thisYear    =    iChronology.getYearMonthMillis(instant,    month);    	non-compiled	[CE]  method  getYearMonthMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	12	None	replace
261	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  datePart);  [BUGGY]    int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month,  datePart);	      int    thisYear    =    iChronology.getYearMonthMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  datePart	12	None	replace
262	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN);	  int    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
263	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  iMax);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  iMax);	  int    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
264	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  iMin);	  int    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol  iMin	15	None	replace
265	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  iDayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);      [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  iDayOfMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	295	295	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  iDayOfMonth);	  int    thisYear    =    iChronology.getYearValue(instant);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	15	None	replace
