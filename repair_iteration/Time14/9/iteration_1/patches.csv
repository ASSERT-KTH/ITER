bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth;  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth;	      iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
2	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth.getLeapMonth();  [CE]  int  cannot  be  dereferenced  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iLeapMonth  =  leapMonth.getLeapMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth.getLeapMonth();	      iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  int  cannot  be  dereferenced	20	None	replace
3	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.dayOfMonth();  [CE]  incompatible  types  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iLeapMonth  =  iChronology.dayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.dayOfMonth();	      iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  incompatible  types	20	None	replace
4	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth,  chronology.getLeapMonth();  [CE]  ';'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iLeapMonth  =  leapMonth,  chronology.getLeapMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth,  chronology.getLeapMonth();	      iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  ';'  expected	20	None	replace
5	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth  +  iChronology.getLeapMonth();  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iLeapMonth  =  leapMonth  +  iChronology.getLeapMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth  +  iChronology.getLeapMonth();	      iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
6	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth;	      iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
7	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iLeapMonth  =  leapMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth;	      iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	20	None	replace
8	[BUG]  [BUGGY]  iLeapMonth  =  chronology.getLeapMonth();  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iLeapMonth  =  chronology.getLeapMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  chronology.getLeapMonth();	      iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
9	[BUG]  [BUGGY]  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iDayOfMonth  =  chronology.getDayOfMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	9	None	replace
10	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	9	None	replace
11	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth()  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth()  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth()	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  ';'  expected	9	None	replace
12	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth();  }	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	9	None	replace
13	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMon  [CE]  ';'  expected  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMon  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMon	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  ';'  expected	9	None	replace
14	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	9	None	replace
15	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  [CE]  illegal  start  of  expression  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
16	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth  [CE]  ';'  expected  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  ';'  expected	9	None	replace
17	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth);	  iChronology    =    chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	19	None	replace
18	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(iChronology);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getBasicChronology(iChronology);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(iChronology);	  iChronology    =    chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
19	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(iChronology);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.withBasicChronology(iChronology);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(iChronology);	  iChronology    =    chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
20	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getBasicChronology(dayOfMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(dayOfMonth);	  iChronology    =    chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	19	None	replace
21	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth);	  iChronology    =    chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	19	None	replace
22	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.getBasicChronology());  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  new  BasicChronology(chronology.getBasicChronology());  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.getBasicChronology());	  iChronology    =    chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
23	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(null);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getBasicChronology(null);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(null);	  iChronology    =    chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
24	[BUG]  [BUGGY]  iChronology  =  this.chronology.getBasicChronology();  [CE]  cannot  find  symbol  chronology  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  this.chronology.getBasicChronology();  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getBasicChronology();	  iChronology    =    chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol  chronology	19	None	replace
25	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth);	  iChronology    =    chronology.getChronology();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	12	None	replace
26	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getChronology(dayOfMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(dayOfMonth);	  iChronology    =    chronology.getChronology();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	12	None	replace
27	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iChronology);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getChronology(iChronology);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iChronology);	  iChronology    =    chronology.getChronology();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
28	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(null);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getChronology(null);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(null);	  iChronology    =    chronology.getChronology();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
29	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  leapMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  leapMonth);	  iChronology    =    chronology.getChronology();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	12	None	replace
30	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(true);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getChronology(true);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(true);	  iChronology    =    chronology.getChronology();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
31	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(false);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getChronology(false);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(false);	  iChronology    =    chronology.getChronology();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
32	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iChronology).getChronology();  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getChronology(iChronology).getChronology();  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iChronology).getChronology();	  iChronology    =    chronology.getChronology();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
33	[BUG]  [BUGGY]  iChronology  =  chronology.monthOfYear;  [CE]  cannot  find  symbol  monthOfYear  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.monthOfYear;  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.monthOfYear;	  iChronology    =    chronology.dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  monthOfYear	11	None	replace
34	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfYear;  [CE]  cannot  find  symbol  dayOfYear  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.dayOfYear;  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfYear;	  iChronology    =    chronology.dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfYear	11	None	replace
35	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth  +  leapMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.dayOfMonth  +  leapMonth;  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth  +  leapMonth;	  iChronology    =    chronology.dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	11	None	replace
36	[BUG]  [BUGGY]  iChronology  =  chronology.getDayOfMonth();  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getDayOfMonth();  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDayOfMonth();	  iChronology    =    chronology.dayOfMonth;    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	11	None	replace
37	[BUG]  [BUGGY]  iChronology  =  chronology.monthOfYear();  [CE]  incompatible  types  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.monthOfYear();  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.monthOfYear();	  iChronology    =    chronology.dayOfMonth;    	non-compiled	[CE]  incompatible  types	11	None	replace
38	[BUG]  [BUGGY]  iChronology  =  chronology.monthOfMonth;  [CE]  cannot  find  symbol  monthOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.monthOfMonth;  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.monthOfMonth;	  iChronology    =    chronology.dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  monthOfMonth	11	None	replace
39	[BUG]  [BUGGY]  iChronology  =  chronology.getMonthOfYear();  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getMonthOfYear();  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getMonthOfYear();	  iChronology    =    chronology.dayOfMonth;    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	11	None	replace
40	[BUG]  [BUGGY]  iMonth  =  chronology.getMonthOfYear();  [CE]  cannot  find  symbol  iMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMonth  =  chronology.getMonthOfYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonthOfYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMonth	26	None	replace
41	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	26	None	replace
42	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getMonthOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getMonthOfYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getMonthOfYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	26	None	replace
43	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	26	None	replace
44	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfDay();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfDay();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfDay();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	26	None	replace
45	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.dayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.dayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.dayOfMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	26	None	replace
46	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getdayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getdayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getdayOfMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	26	None	replace
47	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  *  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  *  leapMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  *  leapMonth;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	26	None	replace
48	[BUG]  [BUGGY]  iChronology  =  chronology.withDayOfMonth();  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.withDayOfMonth();  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withDayOfMonth();	  iChronology    =    chronology.withUTC();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
49	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(switchMonth);  [CE]  cannot  find  symbol  switchMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.withUTC(switchMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(switchMonth);	  iChronology    =    chronology.withUTC();    	non-compiled	[CE]  cannot  find  symbol  switchMonth	23	None	replace
50	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC();  [CE]  incompatible  types  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC();  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC();	  iChronology    =    chronology.withUTC();    	non-compiled	[CE]  incompatible  types	23	None	replace
51	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(),  leapMonth;  [CE]  ';'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.withUTC(),  leapMonth;  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(),  leapMonth;	  iChronology    =    chronology.withUTC();    	non-compiled	[CE]  ';'  expected	23	None	replace
52	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth;  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  +  leapMonth;	  iChronology    =    chronology.withUTC();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	23	None	replace
53	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(spikeMonth);  [CE]  cannot  find  symbol  spikeMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.withUTC(spikeMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(spikeMonth);	  iChronology    =    chronology.withUTC();    	non-compiled	[CE]  cannot  find  symbol  spikeMonth	23	None	replace
54	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(stackMonth);  [CE]  cannot  find  symbol  stackMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.withUTC(stackMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(stackMonth);	  iChronology    =    chronology.withUTC();    	non-compiled	[CE]  cannot  find  symbol  stackMonth	23	None	replace
55	[BUG]  [BUGGY]  iMin  =  this.iChronology.getMinYear();  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  this.iChronology.getMinYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  this.iChronology.getMinYear();	      iMin    =    iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	7	None	replace
56	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear()  +  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  iChronology.getMinYear()  +  leapMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear()  +  leapMonth;	      iMin    =    iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	7	None	replace
57	[BUG]  [BUGGY]  iMin  =  chronology.getMaxYear();  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  chronology.getMaxYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMaxYear();	      iMin    =    iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	7	None	replace
58	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear(stackMonth);  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  chronology.getMinYear(stackMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear(stackMonth);	      iMin    =    iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	7	None	replace
59	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear(dayOfMonth);  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  iChronology.getMinYear(dayOfMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear(dayOfMonth);	      iMin    =    iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	7	None	replace
60	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear(switchMonth);  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  chronology.getMinYear(switchMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear(switchMonth);	      iMin    =    iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	7	None	replace
61	[BUG]  [BUGGY]  iMax  =  chronology.getMinYear();  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMax  =  chronology.getMinYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMax  =  chronology.getMinYear();	      iMin    =    iChronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	7	None	replace
62	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  +  leapMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  +  leapMonth;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	4	None	replace
63	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMinYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMinYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMinYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	4	None	replace
64	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	4	None	replace
65	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	4	None	replace
66	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	4	None	replace
67	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	4	None	replace
68	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	4	None	replace
69	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	15	None	replace
70	[BUG]  [BUGGY]  iChronology  =  iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth());  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
71	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	15	None	replace
72	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfYear());  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfYear());  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfYear());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
73	[BUG]  [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  chronology  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  chronology	15	None	replace
74	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
75	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)  [CE]  ';'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  ';'  expected	13	None	replace
76	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
77	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  leapMonth);  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  leapMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  ';'  expected	13	None	replace
78	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth));  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth));  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth));	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  ';'  expected	13	None	replace
79	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  leapMonth);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  leapMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
80	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  1;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  1;  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  1;	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
81	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth;  [CE]  ')'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth;  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth;	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  ')'  expected	13	None	replace
82	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getDayOfMonth();	      int    leapMonth    =    iChronology.getDayOfMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	25	None	replace
83	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  +  leapMonth;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  +  leapMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth()  +  leapMonth;	      int    leapMonth    =    iChronology.getDayOfMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	25	None	replace
84	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  -  leapMonth;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  -  leapMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth()  -  leapMonth;	      int    leapMonth    =    iChronology.getDayOfMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	25	None	replace
85	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  +  1;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  +  1;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth()  +  1;	      int    leapMonth    =    iChronology.getDayOfMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	25	None	replace
86	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  -  1;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  -  1;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth()  -  1;	      int    leapMonth    =    iChronology.getDayOfMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	25	None	replace
87	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.dayOfMonth();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  leapMonth  =  iChronology.dayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.dayOfMonth();	      int    leapMonth    =    iChronology.getDayOfMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	25	None	replace
88	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth;  [CE]  cannot  find  symbol  iField  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth;	      iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iField	5	None	replace
89	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfYear();  [CE]  cannot  find  symbol  iField  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iField  =  DateTimeFieldType.dayOfYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfYear();	      iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iField	5	None	replace
90	[BUG]  [BUGGY]  DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth();	      iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
91	[BUG]  [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth();  [CE]  incompatible  types  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iField  =  DateTimeFieldType.dayOfMonth();	      iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  incompatible  types	5	None	replace
92	[BUG]  [BUGGY]  iField  =  dateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  iField  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iField  =  dateTimeFieldType.dayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  dateTimeFieldType.dayOfMonth();	      iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iField	5	None	replace
93	[BUG]  [BUGGY]  this.dayOfMonth  =  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  this.dayOfMonth  =  DateTimeFieldType.dayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	this.dayOfMonth  =  DateTimeFieldType.dayOfMonth();	      iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	5	None	replace
94	[BUG]  [BUGGY]  dayOfMonth  =  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  dayOfMonth  =  DateTimeFieldType.dayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	dayOfMonth  =  DateTimeFieldType.dayOfMonth();	      iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	5	None	replace
95	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
96	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
97	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  null);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  null);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  null);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
98	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  false);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  false);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  false);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
99	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  1);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  1);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  1);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
100	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
101	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  height);  [CE]  cannot  find  symbol  height  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  height);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  height);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  height	16	None	replace
102	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth)  [CE]  ';'  expected  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth)  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth)	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  ';'  expected	16	None	replace
103	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth;  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth;	      int    iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
104	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth();  [CE]  incompatible  types  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.dayOfMonth();	      int    iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  incompatible  types	3	None	replace
105	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  -  leapMonth;  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  -  leapMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth()  -  leapMonth;	      int    iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
106	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth;	      int    iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
107	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(dayOfMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth(dayOfMonth);	      int    iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	3	None	replace
108	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.dayOfMonth;	      int    iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	3	None	replace
109	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.monthOfYear();  [CE]  incompatible  types  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iLeapMonth  =  iChronology.monthOfYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.monthOfYear();	      int    iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  incompatible  types	3	None	replace
110	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  leapMonth;  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  +  leapMonth;	  iChronology    =    chronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	14	None	replace
111	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth;  [CE]  ';'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth;  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth(),  leapMonth;	  iChronology    =    chronology.dayOfMonth();    	non-compiled	[CE]  ';'  expected	14	None	replace
112	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  *  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.dayOfMonth()  *  leapMonth;  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  *  leapMonth;	  iChronology    =    chronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	14	None	replace
113	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth;  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  -  leapMonth;	  iChronology    =    chronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	14	None	replace
114	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth);  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth(),  leapMonth);	  iChronology    =    chronology.dayOfMonth();    	non-compiled	[CE]  ';'  expected	14	None	replace
115	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfYear();  [CE]  incompatible  types  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.dayOfYear();  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfYear();	  iChronology    =    chronology.dayOfMonth();    	non-compiled	[CE]  incompatible  types	14	None	replace
116	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  --  leapMonth;  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.dayOfMonth()  --  leapMonth;  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  --  leapMonth;	  iChronology    =    chronology.dayOfMonth();    	non-compiled	[CE]  ';'  expected	14	None	replace
117	[BUG]  [BUGGY]  int  min  =  chronology.getMinYear();  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  min  =  chronology.getMinYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMinYear();	      int    min    =    iChronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	6	None	replace
118	[BUG]  [BUGGY]  int  min  =  this.dayOfMonth.getMinYear();  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  min  =  this.dayOfMonth.getMinYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  this.dayOfMonth.getMinYear();	      int    min    =    iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	6	None	replace
119	[BUG]  [BUGGY]  int  min  =  this.iChronology.getMinYear();  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  min  =  this.iChronology.getMinYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  this.iChronology.getMinYear();	      int    min    =    iChronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	6	None	replace
120	[BUG]  [BUGGY]  int  min  =  dataArea.getMinYear();  [CE]  cannot  find  symbol  dataArea  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  min  =  dataArea.getMinYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  dataArea.getMinYear();	      int    min    =    iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  dataArea	6	None	replace
121	[BUG]  [BUGGY]  int  min  =  chronology.getMaxYear();  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  min  =  chronology.getMaxYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMaxYear();	      int    min    =    iChronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	6	None	replace
122	[BUG]  [BUGGY]  int  min  =  chronology.getMinX();  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  min  =  chronology.getMinX();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMinX();	      int    min    =    iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
123	[BUG]  [BUGGY]  int  min  =  iChronology.getMaxYear();  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  min  =  iChronology.getMaxYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMaxYear();	      int    min    =    iChronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	6	None	replace
124	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;	      int    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
125	[BUG]  [BUGGY]  int  iLeapMonth  =  this.chronology.getLeapMonth();  [CE]  cannot  find  symbol  chronology  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iLeapMonth  =  this.chronology.getLeapMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  this.chronology.getLeapMonth();	      int    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  chronology	10	None	replace
126	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth;  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth;	      int    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
127	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getLeapMonth();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  leapMonth  =  iChronology.getLeapMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getLeapMonth();	      int    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	10	None	replace
128	[BUG]  [BUGGY]  int  iLeapMonth  =  leapMonth.getLeapMonth();  [CE]  int  cannot  be  dereferenced  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iLeapMonth  =  leapMonth.getLeapMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  leapMonth.getLeapMonth();	      int    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  int  cannot  be  dereferenced	10	None	replace
129	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.dayOfMonth();  [CE]  incompatible  types  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iLeapMonth  =  chronology.dayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.dayOfMonth();	      int    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  incompatible  types	10	None	replace
130	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	22	None	replace
131	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withUTC();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withUTC();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	22	None	replace
132	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	22	None	replace
133	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  2;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  2;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  2;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	22	None	replace
134	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  -  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  -  leapMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  -  leapMonth;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	22	None	replace
135	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	22	None	replace
136	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  -  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  -  1;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  -  1;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	22	None	replace
137	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear()  +  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  chronology.getMinYear()  +  leapMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear()  +  leapMonth;	      iMin    =    chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	8	None	replace
138	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear(dayOfMonth);  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  chronology.getMinYear(dayOfMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear(dayOfMonth);	      iMin    =    chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	8	None	replace
139	[BUG]  [BUGGY]  iMin  =  chronology.getMinDayOfMonth();  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  chronology.getMinDayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinDayOfMonth();	      iMin    =    chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	8	None	replace
140	[BUG]  [BUGGY]  iMin  =  chronology.getDayOfMonth();  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  chronology.getDayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getDayOfMonth();	      iMin    =    chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	8	None	replace
141	[BUG]  [BUGGY]  int  iMin  =  chronology.getMinYear();  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iMin  =  chronology.getMinYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  chronology.getMinYear();	      iMin    =    chronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	8	None	replace
142	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	17	None	replace
143	[BUG]  [BUGGY]  iChronology  =  iChronology.getInstance(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  iChronology.getInstance(DateTimeFieldType.dayOfMonth());  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  iChronology.getInstance(DateTimeFieldType.dayOfMonth());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
144	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	17	None	replace
145	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfYear());  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfYear());  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfYear());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
146	[BUG]  [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  chronology  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth());  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  chronology	17	None	replace
147	[BUG]  [BUGGY]  iMin  =  chronology.getMinMonth();  [CE]  cannot  find  symbol  iMin  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  chronology.getMinMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinMonth();	      iMin    =    iChronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	21	None	replace
148	[BUG]  [BUGGY]  iMin  =  chronology.getMinYearMonth();  [CE]  cannot  find  symbol  iMin  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  chronology.getMinYearMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYearMonth();	      iMin    =    iChronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	21	None	replace
149	[BUG]  [BUGGY]  iMin  =  iChronology.getMinMonth()  +  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  iChronology.getMinMonth()  +  leapMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinMonth()  +  leapMonth;	      iMin    =    iChronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	21	None	replace
150	[BUG]  [BUGGY]  iMin  =  chronology.getMinInt();  [CE]  cannot  find  symbol  iMin  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  chronology.getMinInt();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinInt();	      iMin    =    iChronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	21	None	replace
151	[BUG]  [BUGGY]  iMin  =  chronology.getMinWeekMonth();  [CE]  cannot  find  symbol  iMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  chronology.getMinWeekMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinWeekMonth();	      iMin    =    iChronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	21	None	replace
152	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYearMonth();  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  iChronology.getMinYearMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYearMonth();	      iMin    =    iChronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	21	None	replace
153	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth);	  iChronology    =    chronology.getInstance();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	18	None	replace
154	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth);	  iChronology    =    chronology.getInstance();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	18	None	replace
155	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(dayOfMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(dayOfMonth);	  iChronology    =    chronology.getInstance();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	18	None	replace
156	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(false);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(false);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(false);	  iChronology    =    chronology.getInstance();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
157	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(true);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(true);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(true);	  iChronology    =    chronology.getInstance();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
158	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getDayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getDayOfMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	2	None	replace
159	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	2	None	replace
160	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iLeapMonth  =  chronology.getLeapMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iLeapMonth  =  chronology.getLeapMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iLeapMonth  =  chronology.getLeapMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	2	None	replace
161	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	2	None	replace
162	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	2	None	replace
163	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastDayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastDayOfMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	2	None	replace
164	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  MIN);  [CE]  cannot  find  symbol  DateTimeZone  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  MIN);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  MIN);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	24	None	replace
165	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  1);  [CE]  cannot  find  symbol  DateTimeZone  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  1);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  1);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	24	None	replace
166	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  30);  [CE]  cannot  find  symbol  DateTimeZone  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  30);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  30);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	24	None	replace
167	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	24	None	replace
168	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  +  1);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  +  1);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  +  1);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	24	None	replace
169	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  31);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  31);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  31);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	24	None	replace
170	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	24	None	replace
171	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  40);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  40);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  40);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	24	None	replace
172	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	1	None	replace
173	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  dayOfMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  dayOfMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  dayOfMonth);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	1	None	replace
174	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  jumpMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  jumpMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  jumpMonth);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	1	None	replace
175	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	1	None	replace
176	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	1	None	replace
177	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	1	None	replace
178	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	1	None	replace
179	[BUG]  [BUGGY]  int  iLeapMonth  =  ichronology.getLeapMonth();  [CE]  cannot  find  symbol  ichronology  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iLeapMonth  =  ichronology.getLeapMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  ichronology.getLeapMonth();	      int    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  ichronology	10	None	replace
180	[BUG]  [BUGGY]  int  iLeapMonth  =  data.getLeapMonth();  [CE]  cannot  find  symbol  data  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iLeapMonth  =  data.getLeapMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  data.getLeapMonth();	      int    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  data	10	None	replace
181	[BUG]  [BUGGY]  int  iLeapMonth  =  iFieldType.getLeapMonth();  [CE]  cannot  find  symbol  iFieldType  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iLeapMonth  =  iFieldType.getLeapMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iFieldType.getLeapMonth();	      int    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  iFieldType	10	None	replace
182	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  jumpMonth);  [CE]  cannot  find  symbol  jumpMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  jumpMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  jumpMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  jumpMonth	15	None	replace
183	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  1);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  1);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	15	None	replace
184	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  null);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  null);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  null);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
185	[BUG]  [BUGGY]  iMin  =  iChronology.getMinMonth()  +  1;  [CE]  cannot  find  symbol  iMin  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  iChronology.getMinMonth()  +  1;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinMonth()  +  1;	      iMin    =    iChronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	21	None	replace
186	[BUG]  [BUGGY]  iMin  =  this.iChronology.getMinMonth();  [CE]  cannot  find  symbol  iMin  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  this.iChronology.getMinMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  this.iChronology.getMinMonth();	      iMin    =    iChronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	21	None	replace
187	[BUG]  [BUGGY]  iMin  =  0,  iChronology.getMinMonth();  [CE]  ';'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  0,  iChronology.getMinMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  0,  iChronology.getMinMonth();	      iMin    =    iChronology.getMinMonth();    	non-compiled	[CE]  ';'  expected	21	None	replace
188	[BUG]  [BUGGY]  iMin  =  iChronology.getMinMonth()  +  2;  [CE]  cannot  find  symbol  iMin  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  iChronology.getMinMonth()  +  2;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinMonth()  +  2;	      iMin    =    iChronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	21	None	replace
189	[BUG]  [BUGGY]  int  min  =  this.chronology.getMinYear();  [CE]  cannot  find  symbol  chronology  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  min  =  this.chronology.getMinYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  this.chronology.getMinYear();	      int    min    =    iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  chronology	6	None	replace
190	[BUG]  [BUGGY]  int  min  =  data.getMinYear();  [CE]  cannot  find  symbol  data  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  min  =  data.getMinYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  data.getMinYear();	      int    min    =    iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  data	6	None	replace
191	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  min  =  iChronology.getMinYear(dayOfMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(dayOfMonth);	      int    min    =    iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	6	None	replace
192	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear()  +  1;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  min  =  iChronology.getMinYear()  +  1;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear()  +  1;	      int    min    =    iChronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	6	None	replace
193	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth);  [CE]  cannot  find  symbol  jumpMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  jumpMonth	17	None	replace
194	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  dayOfMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  dayOfMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	17	None	replace
195	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  null);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  null);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  null);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
196	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  timeZone.getDefault());  [CE]  cannot  find  symbol  timeZone  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  timeZone.getDefault());  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  timeZone.getDefault());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  timeZone	17	None	replace
197	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  30);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  30);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  30);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
198	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  leapMonth);  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  leapMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  leapMonth);	  iChronology    =    chronology.dayOfMonth();    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	14	None	replace
199	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  1;  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  +  1;	  iChronology    =    chronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	14	None	replace
200	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth());  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth());  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth());	  iChronology    =    chronology.dayOfMonth();    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	14	None	replace
201	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.dayOfMonth);	  iChronology    =    chronology.withUTC();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	23	None	replace
202	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(strMonth);  [CE]  cannot  find  symbol  strMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.withUTC(strMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(strMonth);	  iChronology    =    chronology.withUTC();    	non-compiled	[CE]  cannot  find  symbol  strMonth	23	None	replace
203	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iChronology);  [CE]  no  suitable  method  found  for  withUTC(BasicChronology)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.withUTC(iChronology);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iChronology);	  iChronology    =    chronology.withUTC();    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(BasicChronology)	23	None	replace
204	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(true);  [CE]  no  suitable  method  found  for  withUTC(boolean)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.withUTC(true);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(true);	  iChronology    =    chronology.withUTC();    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(boolean)	23	None	replace
205	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(null);  [CE]  no  suitable  method  found  for  withUTC(<null>)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.withUTC(null);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(null);	  iChronology    =    chronology.withUTC();    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(<null>)	23	None	replace
206	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology);  [CE]  no  suitable  method  found  for  withUTC(BasicChronology)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.iChronology);	  iChronology    =    chronology.withUTC();    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(BasicChronology)	23	None	replace
207	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(spriteMonth);  [CE]  cannot  find  symbol  spriteMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.withUTC(spriteMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(spriteMonth);	  iChronology    =    chronology.withUTC();    	non-compiled	[CE]  cannot  find  symbol  spriteMonth	23	None	replace
208	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(dayOfMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth(dayOfMonth);	      iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	20	None	replace
209	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.dayOfMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iLeapMonth  =  iChronology.dayOfMonth;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.dayOfMonth;	      iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	20	None	replace
210	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonthOfYear();  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iLeapMonth  =  iChronology.getLeapMonthOfYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonthOfYear();	      iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
211	[BUG]  [BUGGY]  iChronology  =  DateTimeFieldType.dayOfMonth();  [CE]  incompatible  types  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  DateTimeFieldType.dayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  DateTimeFieldType.dayOfMonth();	      iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  incompatible  types	5	None	replace
212	[BUG]  [BUGGY]  iDayOfMonth  =  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iDayOfMonth  =  DateTimeFieldType.dayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iDayOfMonth  =  DateTimeFieldType.dayOfMonth();	      iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	5	None	replace
213	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  +  1;  [CE]  cannot  find  symbol  iField  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  +  1;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()  +  1;	      iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iField	5	None	replace
214	[BUG]  [BUGGY]  iMin  =  this.chronology.getMinYear();  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  this.chronology.getMinYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  this.chronology.getMinYear();	      iMin    =    chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	8	None	replace
215	[BUG]  [BUGGY]  iMin  =  iChronology.getMaxYear();  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  iChronology.getMaxYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMaxYear();	      iMin    =    chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	8	None	replace
216	[BUG]  [BUGGY]  iMin  =  data.getMinYear();  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  data.getMinYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  data.getMinYear();	      iMin    =    chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	8	None	replace
217	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  +  1;  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  +  1;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth()  +  1;	      int    iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
218	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  -  1;  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  -  1;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth()  -  1;	      int    iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
219	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(chronology);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(chronology);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth(chronology);	      int    iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
220	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonthOfYear();  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonthOfYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonthOfYear();	      int    iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
221	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth  +  1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.dayOfMonth  +  1;  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth  +  1;	  iChronology    =    chronology.dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	11	None	replace
222	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth-1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.dayOfMonth-1;  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth-1;	  iChronology    =    chronology.dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	11	None	replace
223	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(iFieldType);  [CE]  cannot  find  symbol  iFieldType  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.withBasicChronology(iFieldType);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(iFieldType);	  iChronology    =    chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol  iFieldType	19	None	replace
224	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(true);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getBasicChronology(true);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(true);	  iChronology    =    chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
225	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.hourOfYear);  [CE]  cannot  find  symbol  hourOfYear  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getBasicChronology(this.hourOfYear);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.hourOfYear);	  iChronology    =    chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol  hourOfYear	19	None	replace
226	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(false);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getBasicChronology(false);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(false);	  iChronology    =    chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
227	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  -  1);  [CE]  cannot  find  symbol  DateTimeZone  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  -  1);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  -  1);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	24	None	replace
228	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this);  [CE]  cannot  find  symbol  DateTimeZone  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	24	None	replace
229	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  iChronology.getDayOfMonth();  [CE]  incompatible  types  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  iChronology.getDayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  iChronology.getDayOfMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  incompatible  types	9	None	replace
230	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	9	None	replace
231	[BUG]  [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Node  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
232	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	9	None	replace
233	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	9	None	replace
234	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	9	None	replace
235	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	2	None	replace
236	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getWeeksInYearMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getWeeksInYearMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getWeeksInYearMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	2	None	replace
237	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(chronology);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(chronology);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth(chronology);	      int    leapMonth    =    iChronology.getDayOfMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	25	None	replace
238	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getYearMonth();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  leapMonth  =  iChronology.getYearMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getYearMonth();	      int    leapMonth    =    iChronology.getDayOfMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	25	None	replace
239	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(true);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(true);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth(true);	      int    leapMonth    =    iChronology.getDayOfMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	25	None	replace
240	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth;  [CE]  ')'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth;  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth;	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  ')'  expected	16	None	replace
241	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-1);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-1);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-1);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
242	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  2);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  2);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  2);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
243	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMONTth);  [CE]  cannot  find  symbol  leapMONTth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMONTth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMONTth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  leapMONTth	16	None	replace
244	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	22	None	replace
245	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN).withUTC();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN).withUTC();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	22	None	replace
246	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false).withUTC();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false).withUTC();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	22	None	replace
247	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear()  +  1;  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  iChronology.getMinYear()  +  1;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear()  +  1;	      iMin    =    iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	7	None	replace
248	[BUG]  [BUGGY]  iMin  =  0,  iChronology.getMinYear();  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  0,  iChronology.getMinYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  0,  iChronology.getMinYear();	      iMin    =    iChronology.getMinYear();    	non-compiled	[CE]  ';'  expected	7	None	replace
249	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinyOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinyOfYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinyOfYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	4	None	replace
250	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	4	None	replace
251	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  +  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  +  1;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  +  1;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	4	None	replace
252	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinInYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinInYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinInYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	4	None	replace
253	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	1	None	replace
254	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	1	None	replace
255	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  30);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  30);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  30);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	1	None	replace
256	[BUG]  [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  chronology  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  chronology	13	None	replace
257	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMONTth);  [CE]  cannot  find  symbol  leapMONTth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMONTth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMONTth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  leapMONTth	13	None	replace
258	[BUG]  [BUGGY]  iChronology  =  data.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  data  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  data.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  data.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  data	13	None	replace
259	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.millisOfDay());  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(this.millisOfDay());  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.millisOfDay());	  iChronology    =    chronology.getInstance();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
260	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.getDefault());  [CE]  cannot  find  symbol  DateTimeZone  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.getDefault());  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.getDefault());	  iChronology    =    chronology.getInstance();    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	18	None	replace
261	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DEFAULT_TIME_ZONE);  [CE]  cannot  find  symbol  DEFAULT_TIME_ZONE  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DEFAULT_TIME_ZONE);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DEFAULT_TIME_ZONE);	  iChronology    =    chronology.getInstance();    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TIME_ZONE	18	None	replace
262	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getMonthOfYear();  [CE]  incompatible  types  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getMonthOfYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getMonthOfYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  incompatible  types	26	None	replace
263	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear();  [CE]  incompatible  types  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  incompatible  types	26	None	replace
264	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getWeekOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getWeekOfYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getWeekOfYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	26	None	replace
265	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getStartOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getStartOfYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getStartOfYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	26	None	replace
266	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.millisOfDay());  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getChronology(this.millisOfDay());  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.millisOfDay());	  iChronology    =    chronology.getChronology();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
267	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iMonth  =  chronology.getMonthOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iMonth  =  chronology.getMonthOfYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iMonth  =  chronology.getMonthOfYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	26	None	replace
268	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  1;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  1;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	26	None	replace
269	[BUG]  [BUGGY]  int  iMonth  =  chronology.getMonthOfYear();  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iMonth  =  chronology.getMonthOfYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMonth  =  chronology.getMonthOfYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	26	None	replace
270	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  iMonth  =  chronology.getMonthOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  iMonth  =  chronology.getMonthOfYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  iMonth  =  chronology.getMonthOfYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	26	None	replace
271	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear(1);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear(1);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear(1);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	26	None	replace
272	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	9	None	replace
273	[BUG]  [BUGGY]  if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	9	None	replace
274	[BUG]  [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	9	None	replace
275	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDay  [CE]  illegal  start  of  expression  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDay  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDay	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
276	[BUG]  [BUGGY]  if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDay  [CE]  illegal  start  of  expression  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDay  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDay	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
277	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  [CE]  illegal  start  of  expression  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
278	[BUG]  [BUGGY]  if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  [CE]  illegal  start  of  expression  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
279	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonthOfYear();  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonthOfYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonthOfYear();	      int    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
280	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(dayOfMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth(dayOfMonth);	      int    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	10	None	replace
281	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
282	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  jumpingMonth);  [CE]  cannot  find  symbol  jumpingMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  jumpingMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  jumpingMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  jumpingMonth	13	None	replace
283	[BUG]  [BUGGY]  MIN  =  chronology.getMinYear();  [CE]  cannot  assign  a  value  to  final  variable  MIN  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  MIN  =  chronology.getMinYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	MIN  =  chronology.getMinYear();	      iMin    =    iChronology.getMinYear();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  MIN	7	None	replace
284	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth());  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth());	  iChronology    =    chronology.getChronology();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
285	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getChronology(this);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this);	  iChronology    =    chronology.getChronology();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
286	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(chronology);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getChronology(chronology);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(chronology);	  iChronology    =    chronology.getChronology();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
287	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayOfMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayOfMonth);	  iChronology    =    chronology.getChronology();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	12	None	replace
288	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth);	  iChronology    =    chronology.getChronology();    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	12	None	replace
289	[BUG]  [BUGGY]  int  iLeapMonth  =  this.iChronology.getLeapMonth();  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iLeapMonth  =  this.iChronology.getLeapMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  this.iChronology.getLeapMonth();	      int    iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
290	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getLeapMonth();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  leapMonth  =  chronology.getLeapMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getLeapMonth();	      int    iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	3	None	replace
291	[BUG]  [BUGGY]  int  iLeapMonth  =  hiChronology.getLeapMonth();  [CE]  cannot  find  symbol  hiChronology  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iLeapMonth  =  hiChronology.getLeapMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  hiChronology.getLeapMonth();	      int    iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  hiChronology	3	None	replace
292	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	2	None	replace
293	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth  +  chronology.getLeapMonth();  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iLeapMonth  =  leapMonth  +  chronology.getLeapMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth  +  chronology.getLeapMonth();	      iLeapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
294	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth,  leapMonth);  [CE]  ';'  expected  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.dayOfMonth,  leapMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth,  leapMonth);	  iChronology    =    chronology.dayOfMonth;    	non-compiled	[CE]  ';'  expected	11	None	replace
295	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	1	None	replace
296	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	1	None	replace
297	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC);	  iChronology    =    chronology.getInstance();    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	18	None	replace
298	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis());  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis());  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis());	  iChronology    =    chronology.getInstance();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
299	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayOfMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayOfMonth);	  iChronology    =    chronology.getInstance();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	18	None	replace
300	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DEFAULT_TIME_MONTH);  [CE]  cannot  find  symbol  DEFAULT_TIME_MONTH  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DEFAULT_TIME_MONTH);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DEFAULT_TIME_MONTH);	  iChronology    =    chronology.getInstance();    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TIME_MONTH	18	None	replace
301	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth());  [CE]  cannot  find  symbol  DateTimeFormat  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth());  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth());	  iChronology    =    chronology.getInstance();    	non-compiled	[CE]  cannot  find  symbol  DateTimeFormat	18	None	replace
302	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  dayOfMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  dayOfMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	15	None	replace
303	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  pointOfMonth);  [CE]  cannot  find  symbol  pointOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  pointOfMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  pointOfMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  pointOfMonth	15	None	replace
304	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear()  +  1;  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  chronology.getMinYear()  +  1;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear()  +  1;	      iMin    =    chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	8	None	replace
305	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  hourMonth);  [CE]  cannot  find  symbol  hourMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  hourMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  hourMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  hourMonth	17	None	replace
306	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  timeZone.getZone());  [CE]  cannot  find  symbol  timeZone  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  timeZone.getZone());  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  timeZone.getZone());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  timeZone	17	None	replace
307	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  iField  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.dayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.dayOfMonth();	      iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iField	5	None	replace
308	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.DAY_OF_MONTH;  [CE]  cannot  find  symbol  iField  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.DAY_OF_MONTH;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.DAY_OF_MONTH;	      iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iField	5	None	replace
309	[BUG]  [BUGGY]  int  min  =  interval.getMinYear();  [CE]  cannot  find  symbol  interval  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  min  =  interval.getMinYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  interval.getMinYear();	      int    min    =    iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  interval	6	None	replace
310	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(chronology);  [CE]  method  getMinYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  min  =  iChronology.getMinYear(chronology);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(chronology);	      int    min    =    iChronology.getMinYear();    	non-compiled	[CE]  method  getMinYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	6	None	replace
311	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  1;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  1;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	22	None	replace
312	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iFieldType);  [CE]  cannot  find  symbol  iFieldType  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.withUTC(iFieldType);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iFieldType);	  iChronology    =    chronology.withUTC();    	non-compiled	[CE]  cannot  find  symbol  iFieldType	23	None	replace
313	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.withUTC();  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.withUTC();  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  ||  chronology.withUTC();	  iChronology    =    chronology.withUTC();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	23	None	replace
314	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iDateTimeZone.getDefault());  [CE]  cannot  find  symbol  iDateTimeZone  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.withUTC(iDateTimeZone.getDefault());  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iDateTimeZone.getDefault());	  iChronology    =    chronology.withUTC();    	non-compiled	[CE]  cannot  find  symbol  iDateTimeZone	23	None	replace
315	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iDateTimeFieldType);  [CE]  cannot  find  symbol  iDateTimeFieldType  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.withUTC(iDateTimeFieldType);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iDateTimeFieldType);	  iChronology    =    chronology.withUTC();    	non-compiled	[CE]  cannot  find  symbol  iDateTimeFieldType	23	None	replace
316	[BUG]  [BUGGY]  int  iMin  =  chronology.getMinMonth();  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  int  iMin  =  chronology.getMinMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  chronology.getMinMonth();	      iMin    =    iChronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
317	[BUG]  [BUGGY]  iMin  =  interval.getMinMonth();  [CE]  cannot  find  symbol  iMin  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iMin  =  interval.getMinMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  interval.getMinMonth();	      iMin    =    iChronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	21	None	replace
318	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());  [CE]  cannot  find  symbol  dayOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());	  iChronology    =    chronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	14	None	replace
319	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());	  iChronology    =    chronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	14	None	replace
320	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  dayOfMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  dayOfMonth;  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  dayOfMonth;	  iChronology    =    chronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	14	None	replace
321	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  dayOfMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  dayOfMonth;  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  dayOfMonth;	  iChronology    =    chronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	14	None	replace
322	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth);	  iChronology    =    chronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	14	None	replace
323	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  1;  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  1;	  iChronology    =    chronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	14	None	replace
324	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
325	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpingMonth);  [CE]  cannot  find  symbol  jumpingMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpingMonth);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpingMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  jumpingMonth	16	None	replace
326	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  3);  [CE]  cannot  find  symbol  DateTimeZone  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  3);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  3);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	24	None	replace
327	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getBasicChronology(this);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this);	  iChronology    =    chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
328	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.chronology);  [CE]  cannot  find  symbol  chronology  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getBasicChronology(this.chronology);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.chronology);	  iChronology    =    chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol  chronology	19	None	replace
329	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(chronology);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());    [BUGGY]  iChronology  =  chronology.getBasicChronology(chronology);  [BUGGY]    iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(chronology);	  iChronology    =    chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
