bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth);	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    new    BasicChronology(chronology.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	322	None	replace
2	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfYear()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfYear()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfYear()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth);	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    new    BasicChronology(chronology.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	322	None	replace
3	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  &&  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  &&  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  &&  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth);	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    new    BasicChronology(chronology.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	322	None	replace
4	[BUG]  [BUGGY]  iChronology  =  chronology.monthOfYear()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.monthOfYear()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.monthOfYear()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth);	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    new    BasicChronology(chronology.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	322	None	replace
5	[BUG]  [BUGGY]  iChronology  =  chronology.monthOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.monthOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.monthOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth);	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    new    BasicChronology(chronology.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	322	None	replace
6	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth,  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth,  leapMonth);	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    new    BasicChronology(chronology.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	322	None	replace
7	[BUG]  [BUGGY]  iMonth  =  chronology.getYearOfYear();  [CE]  cannot  find  symbol  iMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getYearOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getYearOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMonth	42	None	replace
8	[BUG]  [BUGGY]  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  [CE]  cannot  find  symbol  iMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonthOfYear()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMonth	42	None	replace
9	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getMonthOfYear();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getMonthOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	42	None	replace
10	[BUG]  [BUGGY]  iMonth  =  chronology.getMonthOfYear(dayOfMonth);  [CE]  cannot  find  symbol  iMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMonthOfYear(dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonthOfYear(dayOfMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMonth	42	None	replace
11	[BUG]  [BUGGY]  iMonth  =  chronology.getMonthOfYear(stackMonth);  [CE]  cannot  find  symbol  iMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMonthOfYear(stackMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonthOfYear(stackMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMonth	42	None	replace
12	[BUG]  [BUGGY]  iYear  =  chronology.getMonthOfYear();  [CE]  cannot  find  symbol  iYear  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iYear  =  chronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iYear  =  chronology.getMonthOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iYear	42	None	replace
13	[BUG]  [BUGGY]  iMax  =  chronology.getMonthOfYear();  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMax  =  chronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMax  =  chronology.getMonthOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	42	None	replace
14	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  *  leapMonth;  [CE]  cannot  find  symbol  iField  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()  *  leapMonth;	  iField    =    DateTimeFieldType.dayOfMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iField	88	None	replace
15	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfYear()  +  leapMonth;  [CE]  cannot  find  symbol  iField  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.dayOfYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfYear()  +  leapMonth;	  iField    =    DateTimeFieldType.dayOfMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iField	88	None	replace
16	[BUG]  [BUGGY]  iField  =  dateTimeFieldType.dayOfMonth()  +  leapMonth;  [CE]  cannot  find  symbol  iField  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  dateTimeFieldType.dayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  dateTimeFieldType.dayOfMonth()  +  leapMonth;	  iField    =    DateTimeFieldType.dayOfMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iField	88	None	replace
17	[BUG]  [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth;	  iField    =    DateTimeFieldType.dayOfMonth()    +    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	88	None	replace
18	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth  *  2;  [CE]  cannot  find  symbol  iField  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth  *  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth  *  2;	  iField    =    DateTimeFieldType.dayOfMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iField	88	None	replace
19	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth,  chronology;  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth,  chronology;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth,  chronology;	  iField    =    DateTimeFieldType.dayOfMonth()    +    leapMonth;    	non-compiled	[CE]  ';'  expected	88	None	replace
20	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth  *  1;  [CE]  cannot  find  symbol  iField  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth  *  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth  *  1;	  iField    =    DateTimeFieldType.dayOfMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iField	88	None	replace
21	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfYear,  this.dayOfMonth);  [CE]  cannot  find  symbol  dayOfYear  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfYear,  this.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfYear,  this.dayOfMonth);	  iChronology    =    chronology.getInstance(this.dayOfMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfYear	299	None	replace
22	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayOfYear);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayOfYear);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayOfYear);	  iChronology    =    chronology.getInstance(this.dayOfMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	299	None	replace
23	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayOfMinute);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayOfMinute);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayOfMinute);	  iChronology    =    chronology.getInstance(this.dayOfMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	299	None	replace
24	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayOfMillis);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayOfMillis);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayOfMillis);	  iChronology    =    chronology.getInstance(this.dayOfMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	299	None	replace
25	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayOfMinutes);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayOfMinutes);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayOfMinutes);	  iChronology    =    chronology.getInstance(this.dayOfMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	299	None	replace
26	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayOfDay);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayOfDay);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayOfDay);	  iChronology    =    chronology.getInstance(this.dayOfMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	299	None	replace
27	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayOfMinimum);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayOfMinimum);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayOfMinimum);	  iChronology    =    chronology.getInstance(this.dayOfMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	299	None	replace
28	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapY);  [CE]  cannot  find  symbol  leapY  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapY);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapY);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMONTth);    	non-compiled	[CE]  cannot  find  symbol  leapY	257	None	replace
29	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  minute);  [CE]  cannot  find  symbol  minute  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  minute);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  minute);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMONTth);    	non-compiled	[CE]  cannot  find  symbol  minute	257	None	replace
30	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  min);  [CE]  cannot  find  symbol  min  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  min);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  min);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMONTth);    	non-compiled	[CE]  cannot  find  symbol  min	257	None	replace
31	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  year);  [CE]  cannot  find  symbol  year  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  year);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  year);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMONTth);    	non-compiled	[CE]  cannot  find  symbol  year	257	None	replace
32	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leap);  [CE]  cannot  find  symbol  leap  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leap);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leap);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMONTth);    	non-compiled	[CE]  cannot  find  symbol  leap	257	None	replace
33	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  30);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  30);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  30);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMONTth);    	non-compiled	[CE]  cannot  find  symbol	257	None	replace
34	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  this);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  this);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  this);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    null);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
35	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  0,  null);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  0,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  0,  null);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    null);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
36	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  dataArea,  null);  [CE]  cannot  find  symbol  dataArea  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  dataArea,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  dataArea,  null);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    null);    	non-compiled	[CE]  cannot  find  symbol  dataArea	97	None	replace
37	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  null,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  null,  iLeapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  null,  iLeapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    null);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
38	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  Null);  [CE]  cannot  find  symbol  Null  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  Null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  Null);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    null);    	non-compiled	[CE]  cannot  find  symbol  Null	97	None	replace
39	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  30);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  30);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  30);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    null);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
40	[BUG]  [BUGGY]  DayOfYear  iField  =  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  DayOfYear  iField  =  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	DayOfYear  iField  =  DateTimeFieldType.dayOfMonth();	  iField    =    DateTimeFieldType.dayOfYear();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
41	[BUG]  [BUGGY]  this.dayOfMonth  =  DateTimeFieldType.dayOfYear();  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  this.dayOfMonth  =  DateTimeFieldType.dayOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	this.dayOfMonth  =  DateTimeFieldType.dayOfYear();	  iField    =    DateTimeFieldType.dayOfYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	89	None	replace
42	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMONTH();  [CE]  cannot  find  symbol  iField  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.dayOfMONTH();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMONTH();	  iField    =    DateTimeFieldType.dayOfYear();    	non-compiled	[CE]  cannot  find  symbol  iField	89	None	replace
43	[BUG]  [BUGGY]  dayOfMonth  =  DateTimeFieldType.dayOfYear();  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  dayOfMonth  =  DateTimeFieldType.dayOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	dayOfMonth  =  DateTimeFieldType.dayOfYear();	  iField    =    DateTimeFieldType.dayOfYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	89	None	replace
44	[BUG]  [BUGGY]  iChronology  =(this.chronology!=  null)?  this.chronology.getBasicChronology()  :  chronology.getBasicChronology();  [CE]  cannot  find  symbol  chronology  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =(this.chronology!=  null)?  this.chronology.getBasicChronology()  :  chronology.getBasicChronology();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =(this.chronology!=  null)?  this.chronology.getBasicChronology()  :  chronology.getBasicChronology();	  iChronology    =    this.chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol  chronology	24	None	replace
45	[BUG]  [BUGGY]  iChronology  =  (iChronology!=  null)?  this.chronology.getBasicChronology()  :  chronology.getBasicChronology();  [CE]  cannot  find  symbol  chronology  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  (iChronology!=  null)?  this.chronology.getBasicChronology()  :  chronology.getBasicChronology();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  (iChronology!=  null)?  this.chronology.getBasicChronology()  :  chronology.getBasicChronology();	  iChronology    =    this.chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol  chronology	24	None	replace
46	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(this.chronology.getBasicChronology());  [CE]  cannot  find  symbol  chronology  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(this.chronology.getBasicChronology());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(this.chronology.getBasicChronology());	  iChronology    =    this.chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol  chronology	24	None	replace
47	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(this.chronology.getBasicChronology(),  leapMonth);  [CE]  cannot  find  symbol  chronology  [FE]                                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(this.chronology.getBasicChronology(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(this.chronology.getBasicChronology(),  leapMonth);	  iChronology    =    this.chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol  chronology	24	None	replace
48	[BUG]  [BUGGY]  iChronology  =  (iChronology!=  null)?  this.chronology.getBasicChronology()  :  null;  [CE]  cannot  find  symbol  chronology  [FE]                                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  (iChronology!=  null)?  this.chronology.getBasicChronology()  :  null;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  (iChronology!=  null)?  this.chronology.getBasicChronology()  :  null;	  iChronology    =    this.chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol  chronology	24	None	replace
49	[BUG]  [BUGGY]  iChronology  =(this.chronology!=  null)?  this.chronology.getBasicChronology()  :  new  BasicChronology(this.chronology);  [CE]  cannot  find  symbol  chronology  [FE]                                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =(this.chronology!=  null)?  this.chronology.getBasicChronology()  :  new  BasicChronology(this.chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =(this.chronology!=  null)?  this.chronology.getBasicChronology()  :  new  BasicChronology(this.chronology);	  iChronology    =    this.chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol  chronology	24	None	replace
50	[BUG]  [BUGGY]  iChronology  =  (iChronology  ==  null)?  this.chronology.getBasicChronology()  :  null;  [CE]  cannot  find  symbol  chronology  [FE]                                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  (iChronology  ==  null)?  this.chronology.getBasicChronology()  :  null;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  (iChronology  ==  null)?  this.chronology.getBasicChronology()  :  null;	  iChronology    =    this.chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol  chronology	24	None	replace
51	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true,  null);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true,  null);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    true);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
52	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true,  false);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true,  false);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    true);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
53	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true,  chronology);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true,  chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true,  chronology);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    true);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
54	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true,  iLeapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true,  iLeapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    true);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
55	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  0,  true);  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  0,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  0,  true);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    true);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
56	[BUG]  [BUGGY]  iChronology  =  iChronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true);  [CE]  cannot  find  symbol  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  iChronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  iChronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    true);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
57	[BUG]  [BUGGY]  iMonth  =  chronology.getDayOfMonth();  [CE]  cannot  find  symbol  iMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMonth	41	None	replace
58	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	41	None	replace
59	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	41	None	replace
60	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth()  *  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth()  *  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	41	None	replace
61	[BUG]  [BUGGY]  iMonth  =  chronology.getDayOfMonth();  this.chronology  =  DateTimeUtils.getChronology(chronology);  [CE]  cannot  find  symbol  iMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getDayOfMonth();  this.chronology  =  DateTimeUtils.getChronology(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getDayOfMonth();  this.chronology  =  DateTimeUtils.getChronology(chronology);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMonth	41	None	replace
62	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  leapMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  leapMonth;	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth!=    null?    chronology.dayOfMonth    :    dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	321	None	replace
63	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  leapMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  leapMonth;	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth!=    null?    chronology.dayOfMonth    :    dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	321	None	replace
64	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfYear()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  leapMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfYear()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfYear()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  leapMonth;	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth!=    null?    chronology.dayOfMonth    :    dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	321	None	replace
65	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  &&  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  dayOfMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  &&  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  dayOfMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  &&  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  dayOfMonth;	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth!=    null?    chronology.dayOfMonth    :    dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	321	None	replace
66	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfYear()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  dayOfMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfYear()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  dayOfMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfYear()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  dayOfMonth;	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth!=    null?    chronology.dayOfMonth    :    dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	321	None	replace
67	[BUG]  [BUGGY]  iChronology  =  this.dayOfMonth.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.dayOfMonth.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.dayOfMonth.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);	  iChronology    =    data.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	258	None	replace
68	[BUG]  [BUGGY]  iChronology  =  Chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  Chronology  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  Chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  Chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);	  iChronology    =    data.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  Chronology	258	None	replace
69	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.DAYOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.DAYOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.DAYOfMonth(),  leapMonth);	  iChronology    =    data.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	258	None	replace
70	[BUG]  [BUGGY]  iChronology  =  type.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  type  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  type.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  type.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);	  iChronology    =    data.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  type	258	None	replace
71	[BUG]  [BUGGY]  iChronology  =  this.data.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  data  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.data.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.data.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);	  iChronology    =    data.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  data	258	None	replace
72	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  iMax);  iMin  =  chronology.getMinYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  iMax);  iMin  =  chronology.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  iMax);  iMin  =  chronology.getMinYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	63	None	replace
73	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  leapMonth);  iMin  =  chronology.getMinYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  leapMonth);  iMin  =  chronology.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  leapMonth);  iMin  =  chronology.getMinYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	63	None	replace
74	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  MIN);  iMin  =  chronology.getMinYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  MIN);  iMin  =  chronology.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  MIN);  iMin  =  chronology.getMinYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	63	None	replace
75	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  iLeapMonth);  iMin  =  chronology.getMinYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  iLeapMonth);  iMin  =  chronology.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  iLeapMonth);  iMin  =  chronology.getMinYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	63	None	replace
76	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1);  iMin  =  chronology.getMinYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1);  iMin  =  chronology.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1);  iMin  =  chronology.getMinYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	63	None	replace
77	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	63	None	replace
78	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    -    1;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	136	None	replace
79	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  *  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  *  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  *  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    -    1;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	136	None	replace
80	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  *  1000;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  *  1000;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  *  1000;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    -    1;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	136	None	replace
81	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withUTC()  -  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withUTC()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withUTC()  -  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    -    1;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	136	None	replace
82	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth().withUTC()  -  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth().withUTC()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth().withUTC()  -  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    -    1;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	136	None	replace
83	[BUG]  [BUGGY]  int  min  =  iField.getMinYear();  [CE]  cannot  find  symbol  iField  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iField.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iField.getMinYear();	  int    min    =    dataArea.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iField	120	None	replace
84	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfYear);  [CE]  cannot  find  symbol  dayOfYear  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfYear);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfYear);	  iChronology    =    chronology.getInstance(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfYear	153	None	replace
85	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth  +  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth  +  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth  +  leapMonth);	  iChronology    =    chronology.getInstance(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	153	None	replace
86	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfYear,  leapMonth);  [CE]  cannot  find  symbol  dayOfYear  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfYear,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfYear,  leapMonth);	  iChronology    =    chronology.getInstance(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfYear	153	None	replace
87	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth);	  iChronology    =    chronology.getInstance(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	153	None	replace
88	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth-1);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth-1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth-1);	  iChronology    =    chronology.getInstance(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	153	None	replace
89	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth),  leapMonth);  [CE]  ';'  expected  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth),  leapMonth);	  iChronology    =    chronology.getInstance(this.dayOfMonth);    	non-compiled	[CE]  ';'  expected	153	None	replace
90	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth)+  leapMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth)+  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth)+  leapMonth;	  iChronology    =    chronology.getInstance(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	153	None	replace
91	[BUG]  [BUGGY]  Integer  iLeapMonth  =  chronology.getLeapMonth();  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iLeapMonth  =  chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iLeapMonth  =  chronology.getLeapMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
92	[BUG]  [BUGGY]  iHeapMonth  =  chronology.getLeapMonth();  [CE]  cannot  find  symbol  iHeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iHeapMonth  =  chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iHeapMonth  =  chronology.getLeapMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	160	None	replace
93	[BUG]  [BUGGY]  iLeapMonth  =  chronology.getHeapMonth();  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  chronology.getHeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  chronology.getHeapMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
94	[BUG]  [BUGGY]  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
95	[BUG]  [BUGGY]  iLeapMonth  =  chronology.getRightMonth();  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  chronology.getRightMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  chronology.getRightMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
96	[BUG]  [BUGGY]  iLeapMonth  =  Chronology.getLeapMonth();  [CE]  cannot  find  symbol  Chronology  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  Chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  Chronology.getLeapMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  Chronology	160	None	replace
97	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    -    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	134	None	replace
98	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  -  leapMonth  +  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  -  leapMonth  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  -  leapMonth  +  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    -    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	134	None	replace
99	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  *  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  *  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    -    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	134	None	replace
100	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withUTC()  -  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withUTC()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withUTC()  -  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    -    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	134	None	replace
101	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth()  -  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth()  -  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    -    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	134	None	replace
102	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  -  leapMonth  +  2;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  -  leapMonth  +  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  -  leapMonth  +  2;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    -    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	134	None	replace
103	[BUG]  [BUGGY]  iLeapMonth  =  chronology.getLeapMonth()  +  1;  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  chronology.getLeapMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  chronology.getLeapMonth()  +  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	292	None	replace
104	[BUG]  [BUGGY]  iLeapMonth  =  chronology.getLastMonth();  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  chronology.getLastMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  chronology.getLastMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLastMonth();    	non-compiled	[CE]  cannot  find  symbol	235	None	replace
105	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastMonth()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastMonth()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLastMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	235	None	replace
106	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getFirstDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getFirstDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getFirstDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLastMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	235	None	replace
107	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLastMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	235	None	replace
108	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastMonth()  *  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastMonth()  *  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLastMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	235	None	replace
109	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iLeapMonth  =  chronology.getLastMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iLeapMonth  =  chronology.getLastMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iLeapMonth  =  chronology.getLastMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLastMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	235	None	replace
110	[BUG]  [BUGGY]  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	14	None	replace
111	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  *  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  *  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	14	None	replace
112	[BUG]  [BUGGY]  iDayOfMonth  =  chronology.getDayOfMonth()  *  leapMonth;  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iDayOfMonth  =  chronology.getDayOfMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iDayOfMonth  =  chronology.getDayOfMonth()  *  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	14	None	replace
113	[BUG]  [BUGGY]  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	14	None	replace
114	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	14	None	replace
115	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  /  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  /  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  /  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	14	None	replace
116	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1)  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1)  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1)	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth)    	non-compiled	[CE]  ';'  expected	75	None	replace
117	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)&  MIN  *  leapMonth  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)&  MIN  *  leapMonth  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)&  MIN  *  leapMonth	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth)    	non-compiled	[CE]  ';'  expected	75	None	replace
118	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  ';'  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  ';'  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  ';'	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth)    	non-compiled	[CE]  ';'  expected	75	None	replace
119	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfYear(),  leapMonth)  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfYear(),  leapMonth)  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfYear(),  leapMonth)	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth)    	non-compiled	[CE]  ';'  expected	75	None	replace
120	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)/  ';'  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)/  ';'  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)/  ';'	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth)    	non-compiled	[CE]  ';'  expected	75	None	replace
121	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  MIN  +  leapMonth  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  MIN  +  leapMonth  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  MIN  +  leapMonth	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth)    	non-compiled	[CE]  ';'  expected	75	None	replace
122	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  MIN  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  MIN  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  MIN	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth)    	non-compiled	[CE]  ';'  expected	75	None	replace
123	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  *  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  *  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	62	None	replace
124	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  /  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  /  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  /  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	62	None	replace
125	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	62	None	replace
126	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMinYear()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMinYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMinYear()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	62	None	replace
127	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  -  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  -  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	62	None	replace
128	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear()  *  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear()  *  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iMin	62	None	replace
129	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	62	None	replace
130	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true,  leapMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true,  leapMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    true);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	254	None	replace
131	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true,  dayOfMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true,  dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true,  dayOfMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    true);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	254	None	replace
132	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true,  false);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true,  false);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true,  false);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    true);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	254	None	replace
133	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true,  MIN);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true,  MIN);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true,  MIN);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    true);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	254	None	replace
134	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  true);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  true);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  true);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    true);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	254	None	replace
135	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  0,  true);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  0,  true);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  0,  true);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    true);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	254	None	replace
136	[BUG]  [BUGGY]  int  leapMonth  =  this.chronology.getLeapMonth();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  this.chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  this.chronology.getLeapMonth();	  int    leapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	290	None	replace
137	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getLeapMonth()  +  leapMonth;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getLeapMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getLeapMonth()  +  leapMonth;	  int    leapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	290	None	replace
138	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getWeekMonth();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getWeekMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getWeekMonth();	  int    leapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	290	None	replace
139	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getDateTimeFieldType().dayOfMonth();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getDateTimeFieldType().dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getDateTimeFieldType().dayOfMonth();	  int    leapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	290	None	replace
140	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getSecondMonth();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getSecondMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getSecondMonth();	  int    leapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	290	None	replace
141	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getLeapMonth()  -  leapMonth;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getLeapMonth()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getLeapMonth()  -  leapMonth;	  int    leapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	290	None	replace
142	[BUG]  [BUGGY]  int  leapMonth  =  chronology.dayOfMonth();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.dayOfMonth();	  int    leapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	290	None	replace
143	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfYear);  [CE]  cannot  find  symbol  dayOfYear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfYear);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfYear);	  iChronology    =    chronology.getChronology(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfYear	25	None	replace
144	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth  +  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth  +  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth  +  leapMonth);	  iChronology    =    chronology.getChronology(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	25	None	replace
145	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfYear,  leapMonth);  [CE]  cannot  find  symbol  dayOfYear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfYear,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfYear,  leapMonth);	  iChronology    =    chronology.getChronology(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfYear	25	None	replace
146	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth)+  leapMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth)+  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth)+  leapMonth;	  iChronology    =    chronology.getChronology(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	25	None	replace
147	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth),  leapMonth);  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth),  leapMonth);	  iChronology    =    chronology.getChronology(this.dayOfMonth);    	non-compiled	[CE]  ';'  expected	25	None	replace
148	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth),  leapMonth;  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth),  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth),  leapMonth;	  iChronology    =    chronology.getChronology(this.dayOfMonth);    	non-compiled	[CE]  ';'  expected	25	None	replace
149	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth-1);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth-1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth-1);	  iChronology    =    chronology.getChronology(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	25	None	replace
150	[BUG]  [BUGGY]  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth;  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth;	  iLeapMonth    =    iChronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
151	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  /  leapMonth;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  /  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth()  /  leapMonth;	  iLeapMonth    =    iChronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
152	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  +  1;  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  +  1;	  iLeapMonth    =    iChronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
153	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  +  2;  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  +  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  +  2;	  iLeapMonth    =    iChronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
154	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  -  leapMonth;  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth()  -  leapMonth;	  iLeapMonth    =    iChronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
155	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  +  31;  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  +  31;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  +  31;	  iLeapMonth    =    iChronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
156	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth.getLeapMonth()  *  iChronology;  [CE]  int  cannot  be  dereferenced  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth.getLeapMonth()  *  iChronology;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth.getLeapMonth()  *  iChronology;	  iLeapMonth    =    iChronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  int  cannot  be  dereferenced	6	None	replace
157	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth  +  1;  [CE]  ';'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth  +  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC(),    leapMonth;    	non-compiled	[CE]  ';'  expected	130	None	replace
158	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth,  MIN;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth,  MIN;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth,  MIN;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC(),    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	130	None	replace
159	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withUTC(),  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withUTC(),  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withUTC(),  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC(),    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	130	None	replace
160	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth  +  2;  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth  +  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth  +  2;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC(),    leapMonth;    	non-compiled	[CE]  ';'  expected	130	None	replace
161	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN).withUTC(),  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN).withUTC(),  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN).withUTC(),  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC(),    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	130	None	replace
162	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth,  1;  [CE]  <identifier>  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth,  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth,  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC(),    leapMonth;    	non-compiled	[CE]  <identifier>  expected	130	None	replace
163	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth,  30;  [CE]  <identifier>  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth,  30;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth,  30;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC(),    leapMonth;    	non-compiled	[CE]  <identifier>  expected	130	None	replace
164	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getLeapMonth()  +  leapMonth;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getLeapMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getLeapMonth()  +  leapMonth;	  int    iLeapMonth    =    iChronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	103	None	replace
165	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth  +  1;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth  +  1;	  int    iLeapMonth    =    iChronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
166	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  /  leapMonth;  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  /  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth()  /  leapMonth;	  int    iLeapMonth    =    iChronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
167	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(iChronology);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(iChronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth(iChronology);	  int    iLeapMonth    =    iChronology.getLeapMonth(chronology);    	non-compiled	[CE]  cannot  find  symbol	219	None	replace
168	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getLeapMonth(iChronology);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getLeapMonth(iChronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getLeapMonth(iChronology);	  int    iLeapMonth    =    iChronology.getLeapMonth(chronology);    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	219	None	replace
169	[BUG]  [BUGGY]  int  iLeapMonth  =  this.chronology.getLeapMonth(iChronology);  [CE]  cannot  find  symbol  chronology  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  this.chronology.getLeapMonth(iChronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  this.chronology.getLeapMonth(iChronology);	  int    iLeapMonth    =    iChronology.getLeapMonth(chronology);    	non-compiled	[CE]  cannot  find  symbol  chronology	219	None	replace
170	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(dayOfMonth,  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(dayOfMonth,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth(dayOfMonth,  leapMonth);	  int    iLeapMonth    =    iChronology.getLeapMonth(chronology);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	219	None	replace
171	[BUG]  [BUGGY]  Integer  iLeapMonth  =  chronology.getLeapMonth(iChronology);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iLeapMonth  =  chronology.getLeapMonth(iChronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iLeapMonth  =  chronology.getLeapMonth(iChronology);	  int    iLeapMonth    =    iChronology.getLeapMonth(chronology);    	non-compiled	[CE]  cannot  find  symbol	219	None	replace
172	[BUG]  [BUGGY]  int  iLeapMonth  =  data.getLeapMonth(chronology);  [CE]  cannot  find  symbol  data  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  data.getLeapMonth(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  data.getLeapMonth(chronology);	  int    iLeapMonth    =    iChronology.getLeapMonth(chronology);    	non-compiled	[CE]  cannot  find  symbol  data	219	None	replace
173	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(iChronology,  leapMonth);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(iChronology,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth(iChronology,  leapMonth);	  int    iLeapMonth    =    iChronology.getLeapMonth(chronology);    	non-compiled	[CE]  cannot  find  symbol	219	None	replace
174	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth.getDefault());  [CE]  int  cannot  be  dereferenced  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth.getDefault());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth.getDefault());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getDefault());    	non-compiled	[CE]  int  cannot  be  dereferenced	196	None	replace
175	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth).getDefault());  [CE]  ';'  expected  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth).getDefault());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth).getDefault());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getDefault());    	non-compiled	[CE]  ';'  expected	196	None	replace
176	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth.getValue());  [CE]  int  cannot  be  dereferenced  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth.getValue());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth.getValue());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getDefault());    	non-compiled	[CE]  int  cannot  be  dereferenced	196	None	replace
177	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth.getDefault());  [CE]  cannot  find  symbol  jumpMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth.getDefault());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth.getDefault());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  jumpMonth	196	None	replace
178	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMONTth.getDefault());  [CE]  cannot  find  symbol  leapMONTth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMONTth.getDefault());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMONTth.getDefault());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  leapMONTth	196	None	replace
179	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapYear.getDefault());  [CE]  cannot  find  symbol  leapYear  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapYear.getDefault());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapYear.getDefault());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  leapYear	196	None	replace
180	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonths.getDefault());  [CE]  cannot  find  symbol  leapMonths  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonths.getDefault());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonths.getDefault());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  leapMonths	196	None	replace
181	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapmonth.getDefault());  [CE]  cannot  find  symbol  leapmonth  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapmonth.getDefault());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapmonth.getDefault());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  leapmonth	196	None	replace
182	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth  +  1;  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth  +  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth(),  leapMonth  +  1;	  iChronology    =    chronology.dayOfMonth(),    leapMonth;    	non-compiled	[CE]  ';'  expected	111	None	replace
183	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth  +  2;  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth  +  2;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth(),  leapMonth  +  2;	  iChronology    =    chronology.dayOfMonth(),    leapMonth;    	non-compiled	[CE]  ';'  expected	111	None	replace
184	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth  -  1;  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth  -  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth(),  leapMonth  -  1;	  iChronology    =    chronology.dayOfMonth(),    leapMonth;    	non-compiled	[CE]  ';'  expected	111	None	replace
185	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth  *  2;  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth  *  2;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth(),  leapMonth  *  2;	  iChronology    =    chronology.dayOfMonth(),    leapMonth;    	non-compiled	[CE]  ';'  expected	111	None	replace
186	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth  -  leapMonth;  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth  -  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth(),  leapMonth  -  leapMonth;	  iChronology    =    chronology.dayOfMonth(),    leapMonth;    	non-compiled	[CE]  ';'  expected	111	None	replace
187	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth  +  3;  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth  +  3;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth(),  leapMonth  +  3;	  iChronology    =    chronology.dayOfMonth(),    leapMonth;    	non-compiled	[CE]  ';'  expected	111	None	replace
188	[BUG]  [BUGGY]  int  min  =  chronology.getMaxYear()  +  leapMonth;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  chronology.getMaxYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMaxYear()  +  leapMonth;	  int    min    =    chronology.getMaxYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	121	None	replace
189	[BUG]  [BUGGY]  int  min  =  chronology.getMaxYear()  -  leapMonth;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  chronology.getMaxYear()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMaxYear()  -  leapMonth;	  int    min    =    chronology.getMaxYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	121	None	replace
190	[BUG]  [BUGGY]  int  min  =  chronology.getMaxDayOfMonth();  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  chronology.getMaxDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMaxDayOfMonth();	  int    min    =    chronology.getMaxYear();    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
191	[BUG]  [BUGGY]  int  min  =  chronology.getMaxYear()  -  1;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  chronology.getMaxYear()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMaxYear()  -  1;	  int    min    =    chronology.getMaxYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	121	None	replace
192	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(stackMonth);  [CE]  cannot  find  symbol  stackMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(stackMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth(stackMonth);	  iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  stackMonth	208	None	replace
193	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(switchMonth);  [CE]  cannot  find  symbol  switchMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(switchMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth(switchMonth);	  iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  switchMonth	208	None	replace
194	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(edgeMonth);  [CE]  cannot  find  symbol  edgeMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(edgeMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth(edgeMonth);	  iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  edgeMonth	208	None	replace
195	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(switchedMonth);  [CE]  cannot  find  symbol  switchedMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(switchedMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth(switchedMonth);	  iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  switchedMonth	208	None	replace
196	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(spikeMonth);  [CE]  cannot  find  symbol  spikeMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(spikeMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth(spikeMonth);	  iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  spikeMonth	208	None	replace
197	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(secondMonth);  [CE]  cannot  find  symbol  secondMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(secondMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth(secondMonth);	  iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  secondMonth	208	None	replace
198	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(switcherMonth);  [CE]  cannot  find  symbol  switcherMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(switcherMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth(switcherMonth);	  iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  switcherMonth	208	None	replace
199	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(scrollMonth);  [CE]  cannot  find  symbol  scrollMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(scrollMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth(scrollMonth);	  iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  scrollMonth	208	None	replace
200	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(signature);  [CE]  cannot  find  symbol  signature  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(signature);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth(signature);	  iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  signature	208	None	replace
201	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfYear(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfYear(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfYear(),  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    hourMonth);    	non-compiled	[CE]  cannot  find  symbol	305	None	replace
202	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapY);  [CE]  cannot  find  symbol  leapY  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapY);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapY);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    hourMonth);    	non-compiled	[CE]  cannot  find  symbol  leapY	305	None	replace
203	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMONTH(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMONTH(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMONTH(),  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    hourMonth);    	non-compiled	[CE]  cannot  find  symbol	305	None	replace
204	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapWidth);  [CE]  cannot  find  symbol  leapWidth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapWidth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapWidth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    hourMonth);    	non-compiled	[CE]  cannot  find  symbol  leapWidth	305	None	replace
205	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapmonth);  [CE]  cannot  find  symbol  leapmonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapmonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapmonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    hourMonth);    	non-compiled	[CE]  cannot  find  symbol  leapmonth	305	None	replace
206	[BUG]  [BUGGY]  iMonthOfYear  =  chronology.getMonthOfYear();  [CE]  cannot  find  symbol  iMonthOfYear  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonthOfYear  =  chronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonthOfYear  =  chronology.getMonthOfYear();	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iMonthOfYear	12	None	replace
207	[BUG]  [BUGGY]  int  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iDayOfMonth  =  chronology.getDayOfMonth();	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	12	None	replace
208	[BUG]  [BUGGY]  iDate  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  iDate  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iDate  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iDate  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDate	12	None	replace
209	[BUG]  [BUGGY]  iDate  =  chronology.getDateTimeField(DateTimeFieldType.monthOfYear(),  leapMonth);  [CE]  cannot  find  symbol  iDate  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iDate  =  chronology.getDateTimeField(DateTimeFieldType.monthOfYear(),  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iDate  =  chronology.getDateTimeField(DateTimeFieldType.monthOfYear(),  leapMonth);	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDate	12	None	replace
210	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	16	None	replace
211	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getDayOfMonth  [CE]  ';'  expected  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getDayOfMonth  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getDayOfMonth	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth    	non-compiled	[CE]  ';'  expected	16	None	replace
212	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getDayOfMonth  [CE]  ';'  expected  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getDayOfMonth  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getDayOfMonth	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth    	non-compiled	[CE]  ';'  expected	16	None	replace
213	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	16	None	replace
214	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  [CE]  illegal  start  of  expression  [FE]                                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
215	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getDayOfMonth()  [CE]  ';'  expected  [FE]                                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getDayOfMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getDayOfMonth()	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth    	non-compiled	[CE]  ';'  expected	16	None	replace
216	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	16	None	replace
217	[BUG]  [BUGGY]  int  min  =  this.chronology.getMinYear()  -  leapMonth;  [CE]  cannot  find  symbol  chronology  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  this.chronology.getMinYear()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  this.chronology.getMinYear()  -  leapMonth;	  int    min    =    this.chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  chronology	189	None	replace
218	[BUG]  [BUGGY]  int  min  =  this.chronology.getMinYear()  +  leapMonth;  [CE]  cannot  find  symbol  chronology  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  this.chronology.getMinYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  this.chronology.getMinYear()  +  leapMonth;	  int    min    =    this.chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  chronology	189	None	replace
219	[BUG]  [BUGGY]  int  min  =  this.chronology.getMinYear()  -  1;  [CE]  cannot  find  symbol  chronology  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  this.chronology.getMinYear()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  this.chronology.getMinYear()  -  1;	  int    min    =    this.chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  chronology	189	None	replace
220	[BUG]  [BUGGY]  int  min  =(this.chronology!=  null?  this.chronology.getMinYear()  :  0);  [CE]  cannot  find  symbol  chronology  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =(this.chronology!=  null?  this.chronology.getMinYear()  :  0);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =(this.chronology!=  null?  this.chronology.getMinYear()  :  0);	  int    min    =    this.chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  chronology	189	None	replace
221	[BUG]  [BUGGY]  int  min  =  this.chronology.getMinYear(),  leapMonth;  [CE]  cannot  find  symbol  chronology  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  this.chronology.getMinYear(),  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  this.chronology.getMinYear(),  leapMonth;	  int    min    =    this.chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  chronology	189	None	replace
222	[BUG]  [BUGGY]  int  min  =(this.chronology!=  null?  this.chronology.getMinYear()  :  1);  [CE]  cannot  find  symbol  chronology  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =(this.chronology!=  null?  this.chronology.getMinYear()  :  1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =(this.chronology!=  null?  this.chronology.getMinYear()  :  1);	  int    min    =    this.chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  chronology	189	None	replace
223	[BUG]  [BUGGY]  iField  =  chronology.getField(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  iField  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  chronology.getField(DateTimeFieldType.dayOfMonth());  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  chronology.getField(DateTimeFieldType.dayOfMonth());	  if(iDayOfMonth    ==    chronology.getDayOfMonth())    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    	non-compiled	[CE]  cannot  find  symbol  iField	278	None	replace
224	[BUG]  [BUGGY]  iField  =  chronology.getField(DateTimeFieldType.monthOfYear());  [CE]  cannot  find  symbol  iField  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  chronology.getField(DateTimeFieldType.monthOfYear());  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  chronology.getField(DateTimeFieldType.monthOfYear());	  if(iDayOfMonth    ==    chronology.getDayOfMonth())    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    	non-compiled	[CE]  cannot  find  symbol  iField	278	None	replace
225	[BUG]  [BUGGY]  iMonth  =  chronology.getMonth();  [CE]  cannot  find  symbol  iMonth  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonth();	  if(iDayOfMonth    ==    chronology.getDayOfMonth())    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    	non-compiled	[CE]  cannot  find  symbol  iMonth	278	None	replace
226	[BUG]  [BUGGY]  iLeapMonth  =  iLeapMonth  +  chronology.getLeapMonth();  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iLeapMonth  +  chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iLeapMonth  +  chronology.getLeapMonth();	  iLeapMonth    =    leapMonth    +    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	293	None	replace
227	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth  *  chronology.getLeapMonth();  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth  *  chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth  *  chronology.getLeapMonth();	  iLeapMonth    =    leapMonth    +    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	293	None	replace
228	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth.getLeapMonth();  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth.getLeapMonth();	  iLeapMonth    =    leapMonth    +    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	293	None	replace
229	[BUG]  [BUGGY]  iLeapMonth  =  iMin  +  chronology.getLeapMonth();  [CE]  cannot  find  symbol  iMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iMin  +  chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iMin  +  chronology.getLeapMonth();	  iLeapMonth    =    leapMonth    +    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	293	None	replace
230	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth  +  chronology.dayOfMonth();  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth  +  chronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth  +  chronology.dayOfMonth();	  iLeapMonth    =    leapMonth    +    chronology.getLeapMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	293	None	replace
231	[BUG]  [BUGGY]  iLeapMonth  =  iMax  +  chronology.getLeapMonth();  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iMax  +  chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iMax  +  chronology.getLeapMonth();	  iLeapMonth    =    leapMonth    +    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	293	None	replace
232	[BUG]  [BUGGY]  iLeapMonth  =  iChronology  +  leapMonth.getLeapMonth();  [CE]  int  cannot  be  dereferenced  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology  +  leapMonth.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology  +  leapMonth.getLeapMonth();	  iLeapMonth    =    leapMonth    +    iChronology.getLeapMonth();    	non-compiled	[CE]  int  cannot  be  dereferenced	5	None	replace
233	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth  *  iChronology.getLeapMonth();  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth  *  iChronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth  *  iChronology.getLeapMonth();	  iLeapMonth    =    leapMonth    +    iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
234	[BUG]  [BUGGY]  iLeapMonth  =  jumpMonth  +  chronology.getLeapMonth();  [CE]  cannot  find  symbol  jumpMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  jumpMonth  +  chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  jumpMonth  +  chronology.getLeapMonth();	  iLeapMonth    =    leapMonth    +    iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  jumpMonth	5	None	replace
235	[BUG]  [BUGGY]  iChronology  =  Chronology.getInstance(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  Chronology  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  Chronology.getInstance(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  Chronology.getInstance(DateTimeFieldType.dayOfMonth());	  iChronology    =    iChronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  Chronology	143	None	replace
236	[BUG]  [BUGGY]  iChronology  =  chronology.instance.getInstance(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  instance  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.instance.getInstance(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.instance.getInstance(DateTimeFieldType.dayOfMonth());	  iChronology    =    iChronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  instance	143	None	replace
237	[BUG]  [BUGGY]  iChronology  =  chronology.createChronology(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.createChronology(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.createChronology(DateTimeFieldType.dayOfMonth());	  iChronology    =    iChronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
238	[BUG]  [BUGGY]  iChronology  =  chronology.parse(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.parse(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.parse(DateTimeFieldType.dayOfMonth());	  iChronology    =    iChronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
239	[BUG]  [BUGGY]  iChronology  =  chronology.parseDateTime(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.parseDateTime(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.parseDateTime(DateTimeFieldType.dayOfMonth());	  iChronology    =    iChronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
240	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.DAYOfMonth());  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.DAYOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.DAYOfMonth());	  iChronology    =    iChronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
241	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1));  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1));  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1));	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth));    	non-compiled	[CE]  ';'  expected	78	None	replace
242	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  2));  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  2));  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  2));	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth));    	non-compiled	[CE]  ';'  expected	78	None	replace
243	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfYear(),  leapMonth));  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfYear(),  leapMonth));  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfYear(),  leapMonth));	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth));    	non-compiled	[CE]  ';'  expected	78	None	replace
244	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  1);  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  1);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth));    	non-compiled	[CE]  ';'  expected	78	None	replace
245	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  29);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  29);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  29);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    30);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	255	None	replace
246	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  40);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  40);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  40);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    30);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	255	None	replace
247	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  60);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  60);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  60);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    30);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	255	None	replace
248	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  31);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  31);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  31);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    30);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	255	None	replace
249	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  10);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  10);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  10);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    30);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	255	None	replace
250	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  32);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  32);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  32);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    30);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	255	None	replace
251	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  100);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  100);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  100);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    30);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	255	None	replace
252	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonthOfYear()  +  leapMonth;  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonthOfYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonthOfYear()  +  leapMonth;	  iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
253	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonthOfYear(dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonthOfYear(dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonthOfYear(dayOfMonth);	  iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	210	None	replace
254	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth.getLeapMonthOfYear();  [CE]  int  cannot  be  dereferenced  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth.getLeapMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth.getLeapMonthOfYear();	  iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  int  cannot  be  dereferenced	210	None	replace
255	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonthOfYear()  *  leapMonth;  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonthOfYear()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonthOfYear()  *  leapMonth;	  iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
256	[BUG]  [BUGGY]  iLeapMonth  =  chronology.getLeapMonthOfYear();  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  chronology.getLeapMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  chronology.getLeapMonthOfYear();	  iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
257	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonthOfYear()  -  leapMonth;  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonthOfYear()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonthOfYear()  -  leapMonth;	  iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
258	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonthOfYear(stackMonth);  [CE]  cannot  find  symbol  stackMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonthOfYear(stackMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonthOfYear(stackMonth);	  iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  stackMonth	210	None	replace
259	[BUG]  [BUGGY]  iMin  =  chronology.getMinMonth()  +  2;  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinMonth()  +  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinMonth()  +  2;	  iMin    =    iChronology.getMinMonth()    +    2;    	non-compiled	[CE]  cannot  find  symbol  iMin	188	None	replace
260	[BUG]  [BUGGY]  int  iMin  =  iChronology.getMinMonth()  +  2;  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  iChronology.getMinMonth()  +  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  iChronology.getMinMonth()  +  2;	  iMin    =    iChronology.getMinMonth()    +    2;    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
261	[BUG]  [BUGGY]  iMax  =  iChronology.getMinMonth();  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMax  =  iChronology.getMinMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMax  =  iChronology.getMinMonth();	  iMin    =    iChronology.getMinMonth()    +    2;    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
262	[BUG]  [BUGGY]  iMin  =  iChronology.getMaxMonth();  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMaxMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMaxMonth();	  iMin    =    iChronology.getMinMonth()    +    2;    	non-compiled	[CE]  cannot  find  symbol  iMin	188	None	replace
263	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth  *  leapMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth  *  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth  *  leapMonth;	  iChronology    =    chronology.dayOfMonth    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	35	None	replace
264	[BUG]  [BUGGY]  iChronology  =  chronology.monthOfYear  +  leapMonth;  [CE]  cannot  find  symbol  monthOfYear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.monthOfYear  +  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.monthOfYear  +  leapMonth;	  iChronology    =    chronology.dayOfMonth    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  monthOfYear	35	None	replace
265	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfYear  +  leapMonth;  [CE]  cannot  find  symbol  dayOfYear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfYear  +  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfYear  +  leapMonth;	  iChronology    =    chronology.dayOfMonth    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfYear	35	None	replace
266	[BUG]  [BUGGY]  iChronology  =  chronology.monthOfYear()  +  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.monthOfYear()  +  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.monthOfYear()  +  leapMonth;	  iChronology    =    chronology.dayOfMonth    +    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	35	None	replace
267	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfYear()  +  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfYear()  +  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfYear()  +  leapMonth;	  iChronology    =    chronology.dayOfMonth    +    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	35	None	replace
268	[BUG]  [BUGGY]  iChronology  =  chronology.monthOfMonth  +  leapMonth;  [CE]  cannot  find  symbol  monthOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.monthOfMonth  +  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.monthOfMonth  +  leapMonth;	  iChronology    =    chronology.dayOfMonth    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  monthOfMonth	35	None	replace
269	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth  +  leapY;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth  +  leapY;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth  +  leapY;	  iChronology    =    chronology.dayOfMonth    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	35	None	replace
270	[BUG]  [BUGGY]  int  min  =  chronology.getMinYear(iChronology);  [CE]  method  getMinYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  chronology.getMinYear(iChronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMinYear(iChronology);	  int    min    =    iChronology.getMinYear(chronology);    	non-compiled	[CE]  method  getMinYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	310	None	replace
271	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(dayOfMonth,  chronology);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear(dayOfMonth,  chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(dayOfMonth,  chronology);	  int    min    =    iChronology.getMinYear(chronology);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	310	None	replace
272	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(chronology,  leapMonth);  [CE]  method  getMinYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear(chronology,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(chronology,  leapMonth);	  int    min    =    iChronology.getMinYear(chronology);    	non-compiled	[CE]  method  getMinYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	310	None	replace
273	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(iMax,  chronology);  [CE]  method  getMinYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear(iMax,  chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(iMax,  chronology);	  int    min    =    iChronology.getMinYear(chronology);    	non-compiled	[CE]  method  getMinYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	310	None	replace
274	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(dayOfMonth,  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear(dayOfMonth,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(dayOfMonth,  leapMonth);	  int    min    =    iChronology.getMinYear(chronology);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	310	None	replace
275	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(year,  chronology);  [CE]  cannot  find  symbol  year  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear(year,  chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(year,  chronology);	  int    min    =    iChronology.getMinYear(chronology);    	non-compiled	[CE]  cannot  find  symbol  year	310	None	replace
276	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(second,  chronology);  [CE]  cannot  find  symbol  second  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear(second,  chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(second,  chronology);	  int    min    =    iChronology.getMinYear(chronology);    	non-compiled	[CE]  cannot  find  symbol  second	310	None	replace
277	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(dayOfMonth,  milliseconds);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear(dayOfMonth,  milliseconds);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(dayOfMonth,  milliseconds);	  int    min    =    iChronology.getMinYear(chronology);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	310	None	replace
278	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  /  leapMonth;  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  /  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth()  /  leapMonth;	  int    iLeapMonth    =    chronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
279	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth  +  1;  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth  +  1;	  int    iLeapMonth    =    chronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
280	[BUG]  [BUGGY]  int  iLeapMonth  =  this.chronology.getLeapMonth()  *  leapMonth;  [CE]  cannot  find  symbol  chronology  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  this.chronology.getLeapMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  this.chronology.getLeapMonth()  *  leapMonth;	  int    iLeapMonth    =    chronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  chronology	126	None	replace
281	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  -  leapMonth;  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth()  -  leapMonth;	  int    iLeapMonth    =    chronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
282	[BUG]  [BUGGY]  int  iLeapMonth  =  ichronology.getLeapMonth()  *  leapMonth;  [CE]  cannot  find  symbol  ichronology  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  ichronology.getLeapMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  ichronology.getLeapMonth()  *  leapMonth;	  int    iLeapMonth    =    chronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  ichronology	126	None	replace
283	[BUG]  [BUGGY]  int  iLeapMonth  =  data.getLeapMonth()  *  leapMonth;  [CE]  cannot  find  symbol  data  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  data.getLeapMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  data.getLeapMonth()  *  leapMonth;	  int    iLeapMonth    =    chronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  data	126	None	replace
284	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth,  leapMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth,  leapMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    this.dayOfMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	295	None	replace
285	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  this.dayOfMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  this.dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  this.dayOfMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    this.dayOfMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	295	None	replace
286	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth  -  leapMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth  -  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth  -  leapMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    this.dayOfMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	295	None	replace
287	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth  +  leapMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth  +  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth  +  leapMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    this.dayOfMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	295	None	replace
288	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  this.dayOfMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  this.dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  this.dayOfMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    this.dayOfMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	295	None	replace
289	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth,  leapMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth,  leapMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    this.dayOfMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	295	None	replace
290	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  +  this.dayOfMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  +  this.dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  +  this.dayOfMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    this.dayOfMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	295	None	replace
291	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth,  leapMonth  +  1);  [CE]  ';'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth,  leapMonth  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth,  leapMonth  +  1);	  iChronology    =    chronology.dayOfMonth,    leapMonth);    	non-compiled	[CE]  ';'  expected	294	None	replace
292	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth,  leapMonth  +  1;  [CE]  ';'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth,  leapMonth  +  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth,  leapMonth  +  1;	  iChronology    =    chronology.dayOfMonth,    leapMonth);    	non-compiled	[CE]  ';'  expected	294	None	replace
293	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth,  leapMonth;  [CE]  ';'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth,  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth,  leapMonth;	  iChronology    =    chronology.dayOfMonth,    leapMonth);    	non-compiled	[CE]  ';'  expected	294	None	replace
294	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth,  leapMonth,  MIN);  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth,  leapMonth,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth,  leapMonth,  MIN);	  iChronology    =    chronology.dayOfMonth,    leapMonth);    	non-compiled	[CE]  ';'  expected	294	None	replace
295	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth,  leapMonth  +  2);  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth,  leapMonth  +  2);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth,  leapMonth  +  2);	  iChronology    =    chronology.dayOfMonth,    leapMonth);    	non-compiled	[CE]  ';'  expected	294	None	replace
296	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth,  leapMonth  +  1,  leapMonth);  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth,  leapMonth  +  1,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth,  leapMonth  +  1,  leapMonth);	  iChronology    =    chronology.dayOfMonth,    leapMonth);    	non-compiled	[CE]  ';'  expected	294	None	replace
297	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth,  leapMonth  +  2;  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth,  leapMonth  +  2;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth,  leapMonth  +  2;	  iChronology    =    chronology.dayOfMonth,    leapMonth);    	non-compiled	[CE]  ';'  expected	294	None	replace
298	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth,  leapMonth  -  1);  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth,  leapMonth  -  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth,  leapMonth  -  1);	  iChronology    =    chronology.dayOfMonth,    leapMonth);    	non-compiled	[CE]  ';'  expected	294	None	replace
299	[BUG]  [BUGGY]  iLeapMonth  =  iFieldType.getLeapMonth();  [CE]  cannot  find  symbol  iFieldType  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iFieldType.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iFieldType.getLeapMonth();	  iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  iFieldType	8	None	replace
300	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMaxYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMaxYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMaxYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMaxYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	66	None	replace
301	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMaxYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	66	None	replace
302	[BUG]  [BUGGY]  iMin  =  iChronology.getMinWeekMonth();  [CE]  cannot  find  symbol  iMin  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinWeekMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinWeekMonth();	  iMin    =    interval.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	317	None	replace
303	[BUG]  [BUGGY]  iMin  =  iChronology.getMinInt();  [CE]  cannot  find  symbol  iMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinInt();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinInt();	  iMin    =    interval.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	317	None	replace
304	[BUG]  [BUGGY]  iMin  =  iChronology.getMinMillis();  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinMillis();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinMillis();	  iMin    =    interval.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	317	None	replace
305	[BUG]  [BUGGY]  iMin  =  iFieldType.getMinMonth();  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iFieldType.getMinMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iFieldType.getMinMonth();	  iMin    =    interval.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	317	None	replace
306	[BUG]  [BUGGY]  int  iMin  =  iChronology.getMinMonth();  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  iChronology.getMinMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  iChronology.getMinMonth();	  int    iMin    =    chronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol	316	None	replace
307	[BUG]  [BUGGY]  int  iMin  =  iChronology.getMinYear();  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  iChronology.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  iChronology.getMinYear();	  int    iMin    =    chronology.getMinMonth();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	316	None	replace
308	[BUG]  [BUGGY]  int  iMin  =  this.chronology.getMinMonth();  [CE]  cannot  find  symbol  chronology  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  this.chronology.getMinMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  this.chronology.getMinMonth();	  int    iMin    =    chronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  chronology	316	None	replace
309	[BUG]  [BUGGY]  int  iMin  =  chronology.getMinYearMonth();  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  chronology.getMinYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  chronology.getMinYearMonth();	  int    iMin    =    chronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol	316	None	replace
310	[BUG]  [BUGGY]  int  iMin  =  chronology.getMinMonth()  +  leapMonth;  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  chronology.getMinMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  chronology.getMinMonth()  +  leapMonth;	  int    iMin    =    chronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol	316	None	replace
311	[BUG]  [BUGGY]  int  iMin  =  iChronology.getMinWeek();  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  iChronology.getMinWeek();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  iChronology.getMinWeek();	  int    iMin    =    chronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol	316	None	replace
312	[BUG]  [BUGGY]  int  iMin  =  iChronology.getMinMth();  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  iChronology.getMinMth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  iChronology.getMinMth();	  int    iMin    =    chronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol	316	None	replace
313	[BUG]  [BUGGY]  DateTimeUtils.getChronology(chronology);  iMin  =  iChronology.getDayOfMonth();  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  DateTimeUtils.getChronology(chronology);  iMin  =  iChronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	DateTimeUtils.getChronology(chronology);  iMin  =  iChronology.getDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	64	None	replace
314	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth()  *  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth()  *  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	64	None	replace
315	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	64	None	replace
316	[BUG]  [BUGGY]  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	64	None	replace
317	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonthOfYear()  +  leapMonth;  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonthOfYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonthOfYear()  +  leapMonth;	  int    iLeapMonth    =    chronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol	279	None	replace
318	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonthOfDay();  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonthOfDay();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonthOfDay();	  int    iLeapMonth    =    chronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol	279	None	replace
319	[BUG]  [BUGGY]  int  iLeapMonth  =  this.chronology.getLeapMonthOfYear();  [CE]  cannot  find  symbol  chronology  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  this.chronology.getLeapMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  this.chronology.getLeapMonthOfYear();	  int    iLeapMonth    =    chronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  chronology	279	None	replace
320	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonthOfYear(dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonthOfYear(dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonthOfYear(dayOfMonth);	  int    iLeapMonth    =    chronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	279	None	replace
321	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonthOfYear(switchMonth);  [CE]  cannot  find  symbol  switchMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonthOfYear(switchMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonthOfYear(switchMonth);	  int    iLeapMonth    =    chronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  switchMonth	279	None	replace
322	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getLeapMonthOfYear();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getLeapMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getLeapMonthOfYear();	  int    iLeapMonth    =    chronology.getLeapMonthOfYear();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	279	None	replace
323	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth,  chronology.getDayOfMonth();  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth,  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth,  chronology.getDayOfMonth();	  iLeapMonth    =    leapMonth,    chronology.getLeapMonth();    	non-compiled	[CE]  ';'  expected	4	None	replace
324	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth,  chronology.getLeapMonth()  +  1;  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth,  chronology.getLeapMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth,  chronology.getLeapMonth()  +  1;	  iLeapMonth    =    leapMonth,    chronology.getLeapMonth();    	non-compiled	[CE]  ';'  expected	4	None	replace
325	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth  +  1,  chronology.getLeapMonth();  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth  +  1,  chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth  +  1,  chronology.getLeapMonth();	  iLeapMonth    =    leapMonth,    chronology.getLeapMonth();    	non-compiled	[CE]  ';'  expected	4	None	replace
326	[BUG]  [BUGGY]  iLeapMonth  =  MIN,  chronology.getLeapMonth();  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  MIN,  chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  MIN,  chronology.getLeapMonth();	  iLeapMonth    =    leapMonth,    chronology.getLeapMonth();    	non-compiled	[CE]  ';'  expected	4	None	replace
327	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth,  chronology.getHeapMonth();  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth,  chronology.getHeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth,  chronology.getHeapMonth();	  iLeapMonth    =    leapMonth,    chronology.getLeapMonth();    	non-compiled	[CE]  ';'  expected	4	None	replace
328	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth,  chronology.getLeapMonth()  *  2;  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth,  chronology.getLeapMonth()  *  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth,  chronology.getLeapMonth()  *  2;	  iLeapMonth    =    leapMonth,    chronology.getLeapMonth();    	non-compiled	[CE]  ';'  expected	4	None	replace
329	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth,  chronology.getWeekOfYear();  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth,  chronology.getWeekOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth,  chronology.getWeekOfYear();	  iLeapMonth    =    leapMonth,    chronology.getLeapMonth();    	non-compiled	[CE]  ';'  expected	4	None	replace
330	[BUG]  [BUGGY]  iMonth  =  chronology.getStartOfYear();  [CE]  cannot  find  symbol  iMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getStartOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getStartOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getStartOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMonth	265	None	replace
331	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getStartOfYear()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getStartOfYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getStartOfYear()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getStartOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	265	None	replace
332	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getStartOfDay();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getStartOfDay();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getStartOfDay();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getStartOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	265	None	replace
333	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getEndOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getEndOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getEndOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getStartOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	265	None	replace
334	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getStartOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getStartOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getStartOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getStartOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	265	None	replace
335	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getStartOfYear()  *  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getStartOfYear()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getStartOfYear()  *  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getStartOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	265	None	replace
336	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  +  2);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  +  2);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  +  2);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth    +    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	168	None	replace
337	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  *  1);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  *  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  *  1);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth    +    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	168	None	replace
338	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  +  3);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  +  3);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  +  3);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth    +    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	168	None	replace
339	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  +  31);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  +  31);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  +  31);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth    +    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	168	None	replace
340	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  +  4);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  +  4);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  +  4);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth    +    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	168	None	replace
341	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  +  30);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  +  30);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  +  30);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth    +    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	168	None	replace
342	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  +  1L);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  +  1L);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  +  1L);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth    +    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	168	None	replace
343	[BUG]  [BUGGY]  iMax  =  chronology.getMinimumOfYear();  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMax  =  chronology.getMinimumOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMax  =  chronology.getMinimumOfYear();	  if(iDayOfMonth!=    chronology.getDayOfMonth())    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDay    	non-compiled	[CE]  cannot  find  symbol	275	None	replace
344	[BUG]  [BUGGY]  int  min  =  chronology.getMinYear()  +  1;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  chronology.getMinYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMinYear()  +  1;	  int    min    =    iChronology.getMinYear()    +    1;    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	192	None	replace
345	[BUG]  [BUGGY]  int  min  =  chronology.getMinYear()  /  1;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  chronology.getMinYear()  /  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMinYear()  /  1;	  int    min    =    iChronology.getMinYear()    +    1;    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	192	None	replace
346	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear()  *  1;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear()  *  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear()  *  1;	  int    min    =    iChronology.getMinYear()    +    1;    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	192	None	replace
347	[BUG]  [BUGGY]  int  min  =  chronology.getMaxYear()  +  1;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  chronology.getMaxYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMaxYear()  +  1;	  int    min    =    iChronology.getMinYear()    +    1;    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	192	None	replace
348	[BUG]  [BUGGY]  int  min  =  chronology.getMinYear()  *  1;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  chronology.getMinYear()  *  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMinYear()  *  1;	  int    min    =    iChronology.getMinYear()    +    1;    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	192	None	replace
349	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this,  leapMonth);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this,  leapMonth);	  iChronology    =    chronology.getChronology(this);    	non-compiled	[CE]  cannot  find  symbol	285	None	replace
350	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this).dayOfMonth;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this).dayOfMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this).dayOfMonth;	  iChronology    =    chronology.getChronology(this);    	non-compiled	[CE]  cannot  find  symbol	285	None	replace
351	[BUG]  [BUGGY]  iChronology  =  this.chronology.getChronology(chronology);  [CE]  cannot  find  symbol  chronology  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getChronology(chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getChronology(chronology);	  iChronology    =    chronology.getChronology(this);    	non-compiled	[CE]  cannot  find  symbol  chronology	285	None	replace
352	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this)+  leapMonth;  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this)+  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this)+  leapMonth;	  iChronology    =    chronology.getChronology(this);    	non-compiled	[CE]  cannot  find  symbol	285	None	replace
353	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this).dayOfMonth();  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this).dayOfMonth();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this).dayOfMonth();	  iChronology    =    chronology.getChronology(this);    	non-compiled	[CE]  cannot  find  symbol	285	None	replace
354	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this,  jumpMonth);  [CE]  cannot  find  symbol  jumpMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this,  jumpMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this,  jumpMonth);	  iChronology    =    chronology.getChronology(this);    	non-compiled	[CE]  cannot  find  symbol  jumpMonth	285	None	replace
355	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this)+  1;  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this)+  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this)+  1;	  iChronology    =    chronology.getChronology(this);    	non-compiled	[CE]  cannot  find  symbol	285	None	replace
356	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(dayOfMonth.getDefault());  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(dayOfMonth.getDefault());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(dayOfMonth.getDefault());	  iChronology    =    chronology.withUTC(iDateTimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	314	None	replace
357	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(secondMonth.getDefault());  [CE]  cannot  find  symbol  secondMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(secondMonth.getDefault());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(secondMonth.getDefault());	  iChronology    =    chronology.withUTC(iDateTimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  secondMonth	314	None	replace
358	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(spikeMonth.getDefault());  [CE]  cannot  find  symbol  spikeMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(spikeMonth.getDefault());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(spikeMonth.getDefault());	  iChronology    =    chronology.withUTC(iDateTimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  spikeMonth	314	None	replace
359	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(switchMonth.getDefault());  [CE]  cannot  find  symbol  switchMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(switchMonth.getDefault());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(switchMonth.getDefault());	  iChronology    =    chronology.withUTC(iDateTimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  switchMonth	314	None	replace
360	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iChronology.getDefault());  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(iChronology.getDefault());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iChronology.getDefault());	  iChronology    =    chronology.withUTC(iDateTimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol	314	None	replace
361	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(stackMonth.getDefault());  [CE]  cannot  find  symbol  stackMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(stackMonth.getDefault());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(stackMonth.getDefault());	  iChronology    =    chronology.withUTC(iDateTimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  stackMonth	314	None	replace
362	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(chronology.getDateTimeZone());  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(chronology.getDateTimeZone());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(chronology.getDateTimeZone());	  iChronology    =    chronology.withUTC(iDateTimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol	314	None	replace
363	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  *  2;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  *  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  *  2;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    /    2;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	133	None	replace
364	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  2  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  2  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  2  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    /    2;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	133	None	replace
365	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  10;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  10;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  10;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    /    2;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	133	None	replace
366	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  2L;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  2L;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  2L;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    /    2;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	133	None	replace
367	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  2  +  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  2  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  2  +  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    /    2;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	133	None	replace
368	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withUTC()  /  2;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withUTC()  /  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withUTC()  /  2;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    /    2;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	133	None	replace
369	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withoutUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withoutUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withoutUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    +    1;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	311	None	replace
370	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withUTC()  +  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withUTC()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withUTC()  +  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    +    1;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	311	None	replace
371	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).dayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	135	None	replace
372	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth()  -  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth()  -  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).dayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	135	None	replace
373	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).dayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).dayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).dayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	135	None	replace
374	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth(),  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth(),  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth(),  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).dayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	135	None	replace
375	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth()  /  2;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth()  /  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth()  /  2;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).dayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	135	None	replace
376	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).monthOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).monthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).monthOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).dayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	135	None	replace
377	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(DateTimeFieldType.dayOfMonth(),  leapMonth);	  iChronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	211	None	replace
378	[BUG]  [BUGGY]  iChronology  =  (iChronology  ==  null)?  DateTimeFieldType.dayOfMonth()  :  dateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  dateTimeFieldType  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  (iChronology  ==  null)?  DateTimeFieldType.dayOfMonth()  :  dateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  (iChronology  ==  null)?  DateTimeFieldType.dayOfMonth()  :  dateTimeFieldType.dayOfMonth();	  iChronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  dateTimeFieldType	211	None	replace
379	[BUG]  [BUGGY]  iChronology  =  (iChronology!=  null)?  DateTimeFieldType.dayOfMonth()  :  dateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  dateTimeFieldType  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  (iChronology!=  null)?  DateTimeFieldType.dayOfMonth()  :  dateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  (iChronology!=  null)?  DateTimeFieldType.dayOfMonth()  :  dateTimeFieldType.dayOfMonth();	  iChronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  dateTimeFieldType	211	None	replace
380	[BUG]  [BUGGY]  iChronology  =  (iChronology  ==  null)?  DateTimeFieldType.dayOfMonth()  :  chronology.dayOfMonth();  [CE]  incompatible  types  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  (iChronology  ==  null)?  DateTimeFieldType.dayOfMonth()  :  chronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  (iChronology  ==  null)?  DateTimeFieldType.dayOfMonth()  :  chronology.dayOfMonth();	  iChronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  incompatible  types	211	None	replace
381	[BUG]  [BUGGY]  iChronology  =  (iChronology  ==  null)?  DateTimeFieldType.dayOfMonth()  :  dayOfMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  (iChronology  ==  null)?  DateTimeFieldType.dayOfMonth()  :  dayOfMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  (iChronology  ==  null)?  DateTimeFieldType.dayOfMonth()  :  dayOfMonth;	  iChronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	211	None	replace
382	[BUG]  [BUGGY]  iChronology  =  (iChronology!=  null)?  DateTimeFieldType.dayOfMonth()  :  chronology.dayOfMonth();  [CE]  incompatible  types  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  (iChronology!=  null)?  DateTimeFieldType.dayOfMonth()  :  chronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  (iChronology!=  null)?  DateTimeFieldType.dayOfMonth()  :  chronology.dayOfMonth();	  iChronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  incompatible  types	211	None	replace
383	[BUG]  [BUGGY]  iChronology  =  (iChronology!=  null)?  DateTimeFieldType.dayOfMonth()  :  dayOfMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  (iChronology!=  null)?  DateTimeFieldType.dayOfMonth()  :  dayOfMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  (iChronology!=  null)?  DateTimeFieldType.dayOfMonth()  :  dayOfMonth;	  iChronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	211	None	replace
384	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear(secondMonth);  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear(secondMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear(secondMonth);	  iMin    =    iChronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	59	None	replace
385	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear(dayOfMonth,  leapMonth);  [CE]  cannot  find  symbol  iMin  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear(dayOfMonth,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear(dayOfMonth,  leapMonth);	  iMin    =    iChronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	59	None	replace
386	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear(stackMonth);  [CE]  cannot  find  symbol  iMin  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear(stackMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear(stackMonth);	  iMin    =    iChronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	59	None	replace
387	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear(dayOfMonth  +  leapMonth);  [CE]  cannot  find  symbol  iMin  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear(dayOfMonth  +  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear(dayOfMonth  +  leapMonth);	  iMin    =    iChronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	59	None	replace
388	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear(second);  [CE]  cannot  find  symbol  iMin  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear(second);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear(second);	  iMin    =    iChronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	59	None	replace
389	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear(hourMonth);  [CE]  cannot  find  symbol  iMin  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear(hourMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear(hourMonth);	  iMin    =    iChronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	59	None	replace
390	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear(thenMonth);  [CE]  cannot  find  symbol  iMin  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear(thenMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear(thenMonth);	  iMin    =    iChronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	59	None	replace
391	[BUG]  [BUGGY]  iChronology  =  chronology.getDayOfMonth(),  leapMonth;  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDayOfMonth(),  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDayOfMonth(),  leapMonth;	  iChronology    =    chronology.getDayOfMonth();    	non-compiled	[CE]  ';'  expected	36	None	replace
392	[BUG]  [BUGGY]  iChronology  =  chronology.getDayOfMonth()  +  leapMonth;  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDayOfMonth()  +  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDayOfMonth()  +  leapMonth;	  iChronology    =    chronology.getDayOfMonth();    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	36	None	replace
393	[BUG]  [BUGGY]  iChronology  =  chronology.getDayOfMonth(),  leapMonth);  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDayOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDayOfMonth(),  leapMonth);	  iChronology    =    chronology.getDayOfMonth();    	non-compiled	[CE]  ';'  expected	36	None	replace
394	[BUG]  [BUGGY]  iChronology  =  chronology.getDayOfMonth()  -  1;  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDayOfMonth()  -  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDayOfMonth()  -  1;	  iChronology    =    chronology.getDayOfMonth();    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	36	None	replace
395	[BUG]  [BUGGY]  iChronology  =  chronology.getDayOfMonth()  *  leapMonth;  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDayOfMonth()  *  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDayOfMonth()  *  leapMonth;	  iChronology    =    chronology.getDayOfMonth();    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	36	None	replace
396	[BUG]  [BUGGY]  iChronology  =  chronology.getDayOfMonth()  -  leapMonth;  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDayOfMonth()  -  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDayOfMonth()  -  leapMonth;	  iChronology    =    chronology.getDayOfMonth();    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	36	None	replace
397	[BUG]  [BUGGY]  iChronology  =  chronology.getDayOfMonth()  +  1;  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDayOfMonth()  +  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDayOfMonth()  +  1;	  iChronology    =    chronology.getDayOfMonth();    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	36	None	replace
398	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth-2;  [CE]  cannot  find  symbol  dayOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth-2;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth-2;	  iChronology    =    chronology.dayOfMonth-1;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	222	None	replace
399	[BUG]  [BUGGY]  iChronology  =  chronology.monthOfYear-1;  [CE]  cannot  find  symbol  monthOfYear  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.monthOfYear-1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.monthOfYear-1;	  iChronology    =    chronology.dayOfMonth-1;    	non-compiled	[CE]  cannot  find  symbol  monthOfYear	222	None	replace
400	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfYear-1;  [CE]  cannot  find  symbol  dayOfYear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfYear-1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfYear-1;	  iChronology    =    chronology.dayOfMonth-1;    	non-compiled	[CE]  cannot  find  symbol  dayOfYear	222	None	replace
401	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth-1,  leapMonth;  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth-1,  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth-1,  leapMonth;	  iChronology    =    chronology.dayOfMonth-1;    	non-compiled	[CE]  ';'  expected	222	None	replace
402	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iFieldType,  iChronology);  [CE]  cannot  find  symbol  iFieldType  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iFieldType,  iChronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iFieldType,  iChronology);	  iChronology    =    chronology.getChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol  iFieldType	27	None	replace
403	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iChronology,  leapMonth);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iChronology,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iChronology,  leapMonth);	  iChronology    =    chronology.getChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
404	[BUG]  [BUGGY]  iChronology  =  iChronology.getChronology(chronology);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  iChronology.getChronology(chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  iChronology.getChronology(chronology);	  iChronology    =    chronology.getChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
405	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iFieldType);  [CE]  cannot  find  symbol  iFieldType  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iFieldType);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iFieldType);	  iChronology    =    chronology.getChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol  iFieldType	27	None	replace
406	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  iChronology);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  iChronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  iChronology);	  iChronology    =    chronology.getChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	27	None	replace
407	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iHronology);  [CE]  cannot  find  symbol  iHronology  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iHronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iHronology);	  iChronology    =    chronology.getChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol  iHronology	27	None	replace
408	[BUG]  [BUGGY]  MIN  =  iChronology.getMinYear();  [CE]  cannot  assign  a  value  to  final  variable  MIN  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  MIN  =  iChronology.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	MIN  =  iChronology.getMinYear();	  MIN    =    chronology.getMinYear();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  MIN	283	None	replace
409	[BUG]  [BUGGY]  MIN  =  chronology.getMinYear()  +  leapMonth;  [CE]  cannot  assign  a  value  to  final  variable  MIN  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  MIN  =  chronology.getMinYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	MIN  =  chronology.getMinYear()  +  leapMonth;	  MIN    =    chronology.getMinYear();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  MIN	283	None	replace
410	[BUG]  [BUGGY]  MIN  =  chronology.getMaxYear();  [CE]  cannot  assign  a  value  to  final  variable  MIN  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  MIN  =  chronology.getMaxYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	MIN  =  chronology.getMaxYear();	  MIN    =    chronology.getMinYear();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  MIN	283	None	replace
411	[BUG]  [BUGGY]  min  =  chronology.getMinYear();  [CE]  cannot  find  symbol  min  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  min  =  chronology.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	min  =  chronology.getMinYear();	  MIN    =    chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  min	283	None	replace
412	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  min);  [CE]  cannot  find  symbol  min  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  min);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  min);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    height);    	non-compiled	[CE]  cannot  find  symbol  min	101	None	replace
413	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  0,  leapMonth);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  0,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  0,  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    height);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
414	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  minute);  [CE]  cannot  find  symbol  minute  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  minute);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  minute);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    height);    	non-compiled	[CE]  cannot  find  symbol  minute	101	None	replace
415	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  intLeapMonth);  [CE]  cannot  find  symbol  intLeapMonth  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  intLeapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  intLeapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    height);    	non-compiled	[CE]  cannot  find  symbol  intLeapMonth	101	None	replace
416	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    false).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	246	None	replace
417	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    false).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	246	None	replace
418	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  false).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  false).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  false).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    false).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	246	None	replace
419	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    false).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	246	None	replace
420	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false).withUTC()  /  2;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false).withUTC()  /  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false).withUTC()  /  2;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    false).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	246	None	replace
421	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false).withUTC()  -  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false).withUTC()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false).withUTC()  -  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    false).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	246	None	replace
422	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false)?  chronology.withUTC()  :  false;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false)?  chronology.withUTC()  :  false;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false)?  chronology.withUTC()  :  false;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    false).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	246	None	replace
423	[BUG]  [BUGGY]  iChronology  =  chronology.weekOfMonth;  [CE]  cannot  find  symbol  weekOfMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.weekOfMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.weekOfMonth;	  iChronology    =    chronology.monthOfYear;    	non-compiled	[CE]  cannot  find  symbol  weekOfMonth	33	None	replace
424	[BUG]  [BUGGY]  iChronology  =  chronology.hourOfMonth;  [CE]  cannot  find  symbol  hourOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.hourOfMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.hourOfMonth;	  iChronology    =    chronology.monthOfYear;    	non-compiled	[CE]  cannot  find  symbol  hourOfMonth	33	None	replace
425	[BUG]  [BUGGY]  iChronology  =  chronology.hourOfYear;  [CE]  cannot  find  symbol  hourOfYear  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.hourOfYear;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.hourOfYear;	  iChronology    =    chronology.monthOfYear;    	non-compiled	[CE]  cannot  find  symbol  hourOfYear	33	None	replace
426	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth,  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth,  leapMonth);	  iChronology    =    chronology.dayOfYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	115	None	replace
427	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfYear(),  leapMonth);  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfYear(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfYear(),  leapMonth);	  iChronology    =    chronology.dayOfYear();    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	115	None	replace
428	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear()  *  1;  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear()  *  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear()  *  1;	  iMin    =    chronology.getMinYear()    +    1;    	non-compiled	[CE]  cannot  find  symbol  iMin	304	None	replace
429	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear()  *  leapMonth  +  1;  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear()  *  leapMonth  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear()  *  leapMonth  +  1;	  iMin    =    chronology.getMinYear()    +    1;    	non-compiled	[CE]  cannot  find  symbol  iMin	304	None	replace
430	[BUG]  [BUGGY]  iMin  =  chronology.getMaxYear()  +  1;  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMaxYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMaxYear()  +  1;	  iMin    =    chronology.getMinYear()    +    1;    	non-compiled	[CE]  cannot  find  symbol  iMin	304	None	replace
431	[BUG]  [BUGGY]  int  iMin  =  chronology.getMinYear()  +  1;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  chronology.getMinYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  chronology.getMinYear()  +  1;	  iMin    =    chronology.getMinYear()    +    1;    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	304	None	replace
432	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear()  +  2;  [CE]  cannot  find  symbol  iMin  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear()  +  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear()  +  2;	  iMin    =    chronology.getMinYear()    +    1;    	non-compiled	[CE]  cannot  find  symbol  iMin	304	None	replace
433	[BUG]  [BUGGY]  iMax  =  chronology.getMinYear()  +  1;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMax  =  chronology.getMinYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMax  =  chronology.getMinYear()  +  1;	  iMin    =    chronology.getMinYear()    +    1;    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	304	None	replace
434	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth(),  leapMonth);	  iChronology    =    chronology.getChronology(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	284	None	replace
435	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth()  +  leapMonth);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth()  +  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth()  +  leapMonth);	  iChronology    =    chronology.getChronology(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	284	None	replace
436	[BUG]  [BUGGY]  iChronology  =  iChronology.getChronology(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  iChronology.getChronology(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  iChronology.getChronology(DateTimeFieldType.dayOfMonth());	  iChronology    =    chronology.getChronology(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	284	None	replace
437	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth()  -  leapMonth);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth()  -  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth()  -  leapMonth);	  iChronology    =    chronology.getChronology(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	284	None	replace
438	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfYear());  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfYear());	  iChronology    =    chronology.getChronology(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	284	None	replace
439	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth())+  1;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth())+  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth())+  1;	  iChronology    =    chronology.getChronology(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	284	None	replace
440	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeUtils.currentTimeMillis());    	non-compiled	[CE]  cannot  find  symbol	298	None	replace
441	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.dayOfMonth());  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeUtils.dayOfMonth());	  iChronology    =    chronology.getInstance(DateTimeUtils.currentTimeMillis());    	non-compiled	[CE]  cannot  find  symbol	298	None	replace
442	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.hourOfDay());  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.hourOfDay());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeUtils.hourOfDay());	  iChronology    =    chronology.getInstance(DateTimeUtils.currentTimeMillis());    	non-compiled	[CE]  cannot  find  symbol	298	None	replace
443	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.hourOfMonth());  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.hourOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeUtils.hourOfMonth());	  iChronology    =    chronology.getInstance(DateTimeUtils.currentTimeMillis());    	non-compiled	[CE]  cannot  find  symbol	298	None	replace
444	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.secondOfDay());  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.secondOfDay());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeUtils.secondOfDay());	  iChronology    =    chronology.getInstance(DateTimeUtils.currentTimeMillis());    	non-compiled	[CE]  cannot  find  symbol	298	None	replace
445	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.hourOfYear());  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.hourOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeUtils.hourOfYear());	  iChronology    =    chronology.getInstance(DateTimeUtils.currentTimeMillis());    	non-compiled	[CE]  cannot  find  symbol	298	None	replace
446	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.MILLIS_PER_DAY);  [CE]  cannot  find  symbol  MILLIS_PER_DAY  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.MILLIS_PER_DAY);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeUtils.MILLIS_PER_DAY);	  iChronology    =    chronology.getInstance(DateTimeUtils.currentTimeMillis());    	non-compiled	[CE]  cannot  find  symbol  MILLIS_PER_DAY	298	None	replace
447	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(dayOfMonth);	  iChronology    =    chronology.withUTC(stackMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	54	None	replace
448	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iLeapMonth);  [CE]  no  suitable  method  found  for  withUTC(int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(iLeapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iLeapMonth);	  iChronology    =    chronology.withUTC(stackMonth);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(int)	54	None	replace
449	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iDayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(iDayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iDayOfMonth);	  iChronology    =    chronology.withUTC(stackMonth);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	54	None	replace
450	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(second);  [CE]  cannot  find  symbol  second  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(second);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(second);	  iChronology    =    chronology.withUTC(stackMonth);    	non-compiled	[CE]  cannot  find  symbol  second	54	None	replace
451	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(secondMonth);  [CE]  cannot  find  symbol  secondMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(secondMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(secondMonth);	  iChronology    =    chronology.withUTC(stackMonth);    	non-compiled	[CE]  cannot  find  symbol  secondMonth	54	None	replace
452	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(edgeMonth);  [CE]  cannot  find  symbol  edgeMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(edgeMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(edgeMonth);	  iChronology    =    chronology.withUTC(stackMonth);    	non-compiled	[CE]  cannot  find  symbol  edgeMonth	54	None	replace
453	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(true,  leapMonth);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(true,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(true,  leapMonth);	  iChronology    =    chronology.getInstance(true);    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
454	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(false,  leapMonth);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(false,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(false,  leapMonth);	  iChronology    =    chronology.getInstance(true);    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
455	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(false,  true);  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(false,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(false,  true);	  iChronology    =    chronology.getInstance(true);    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
456	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(false,  false);  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(false,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(false,  false);	  iChronology    =    chronology.getInstance(true);    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
457	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this,  true);  [CE]  cannot  find  symbol  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this,  true);	  iChronology    =    chronology.getInstance(true);    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
458	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(false,  null);  [CE]  cannot  find  symbol  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(false,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(false,  null);	  iChronology    =    chronology.getInstance(true);    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
459	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(null,  true);  [CE]  cannot  find  symbol  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(null,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(null,  true);	  iChronology    =    chronology.getInstance(true);    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
460	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapY);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapY);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapY);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	297	None	replace
461	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.SHORT);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.SHORT);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.SHORT);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	297	None	replace
462	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC),  leapMonth);  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC),  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC);    	non-compiled	[CE]  ';'  expected	297	None	replace
463	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.US);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.US);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.US);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	297	None	replace
464	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.MINUTE);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.MINUTE);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.MINUTE);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	297	None	replace
465	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth;  [CE]  ')'  expected  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth;	  iChronology    =    chronology.getInstance(DateTimeZone.UTC);    	non-compiled	[CE]  ')'  expected	297	None	replace
466	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapYear);  [CE]  cannot  find  symbol  leapYear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapYear);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapYear);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    jumpMonth);    	non-compiled	[CE]  cannot  find  symbol  leapYear	182	None	replace
467	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapWidth);  [CE]  cannot  find  symbol  leapWidth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapWidth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapWidth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    jumpMonth);    	non-compiled	[CE]  cannot  find  symbol  leapWidth	182	None	replace
468	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMillis);  [CE]  cannot  find  symbol  leapMillis  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMillis);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMillis);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    jumpMonth);    	non-compiled	[CE]  cannot  find  symbol  leapMillis	182	None	replace
469	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapHeight);  [CE]  cannot  find  symbol  leapHeight  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapHeight);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapHeight);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    jumpMonth);    	non-compiled	[CE]  cannot  find  symbol  leapHeight	182	None	replace
470	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfYear(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfYear(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfYear(),  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    jumpMonth);    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
471	[BUG]  [BUGGY]  iMonth  =  chronology.getMonthOfYear()  +  1;  [CE]  cannot  find  symbol  iMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMonthOfYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonthOfYear()  +  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    +    1;    	non-compiled	[CE]  cannot  find  symbol  iMonth	268	None	replace
472	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getMonthOfYear();  iMonth  =  chronology.getMonthOfYear()  +  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getMonthOfYear();  iMonth  =  chronology.getMonthOfYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getMonthOfYear();  iMonth  =  chronology.getMonthOfYear()  +  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    +    1;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	268	None	replace
473	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  *  leapMonth  +  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  *  leapMonth  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  *  leapMonth  +  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    +    1;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	268	None	replace
474	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  *  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  *  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  *  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    +    1;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	268	None	replace
475	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getMonthOfYear()  +  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getMonthOfYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getMonthOfYear()  +  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    +    1;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	268	None	replace
476	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getWeekMonth();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getWeekMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getWeekMonth();	  int    leapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	127	None	replace
477	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getSecondMonth();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getSecondMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getSecondMonth();	  int    leapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	127	None	replace
478	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getMinYear();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getMinYear();	  int    leapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	127	None	replace
479	[BUG]  [BUGGY]  int  min  =  iFieldType.getMinYear();  [CE]  cannot  find  symbol  iFieldType  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iFieldType.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iFieldType.getMinYear();	  int    min    =    interval.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iFieldType	309	None	replace
480	[BUG]  [BUGGY]  int  min  =  iChronology.getMinWeekYear();  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinWeekYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinWeekYear();	  int    min    =    interval.getMinYear();    	non-compiled	[CE]  cannot  find  symbol	309	None	replace
481	[BUG]  [BUGGY]  int  iField  =  chronology.dayOfMonth();  [CE]  incompatible  types  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iField  =  chronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iField  =  chronology.dayOfMonth();	  int    iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  incompatible  types	91	None	replace
482	[BUG]  [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth(),  leapMonth;  [CE]  incompatible  types  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth(),  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iField  =  DateTimeFieldType.dayOfMonth(),  leapMonth;	  int    iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  incompatible  types	91	None	replace
483	[BUG]  [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iField  =  DateTimeFieldType.dayOfMonth(),  leapMonth);	  int    iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  ';'  expected	91	None	replace
484	[BUG]  [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth()  -  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iField  =  DateTimeFieldType.dayOfMonth()  -  1;	  int    iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	91	None	replace
485	[BUG]  [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth()  -  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iField  =  DateTimeFieldType.dayOfMonth()  -  leapMonth;	  int    iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	91	None	replace
486	[BUG]  [BUGGY]  int  iField  =  dateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  dateTimeFieldType  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iField  =  dateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iField  =  dateTimeFieldType.dayOfMonth();	  int    iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  dateTimeFieldType	91	None	replace
487	[BUG]  [BUGGY]  DayOfMonth  iField  =  dateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  DayOfMonth  iField  =  dateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	DayOfMonth  iField  =  dateTimeFieldType.dayOfMonth();	  DayOfMonth    iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
488	[BUG]  [BUGGY]  DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth;  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth;	  DayOfMonth    iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
489	[BUG]  [BUGGY]  DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.DAYOF_MONTH;  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.DAYOF_MONTH;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.DAYOF_MONTH;	  DayOfMonth    iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
490	[BUG]  [BUGGY]  DayOfMonth  iField  =  chronology.dayOfMonth();  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  DayOfMonth  iField  =  chronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	DayOfMonth  iField  =  chronology.dayOfMonth();	  DayOfMonth    iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
491	[BUG]  [BUGGY]  DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.dayOfMonth();	  DayOfMonth    iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
492	[BUG]  [BUGGY]  DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.DAY_OF_MONTH;  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.DAY_OF_MONTH;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.DAY_OF_MONTH;	  DayOfMonth    iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
493	[BUG]  [BUGGY]  DayOfMonth  iField  =  DateTimeFieldType.dayOfYear();  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  DayOfMonth  iField  =  DateTimeFieldType.dayOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	DayOfMonth  iField  =  DateTimeFieldType.dayOfYear();	  DayOfMonth    iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
494	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  &&  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());  [CE]  cannot  find  symbol  dayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  &&  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  &&  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	318	None	replace
495	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfYear()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfYear()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfYear()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	318	None	replace
496	[BUG]  [BUGGY]  iChronology  =  chronology.monthOfYear()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.monthOfYear()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.monthOfYear()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	318	None	replace
497	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  &&  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  &&  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  &&  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	318	None	replace
498	[BUG]  [BUGGY]  iChronology  =  chronology.monthOfYear  +  1;  [CE]  cannot  find  symbol  monthOfYear  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.monthOfYear  +  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.monthOfYear  +  1;	  iChronology    =    chronology.dayOfMonth    +    1;    	non-compiled	[CE]  cannot  find  symbol  monthOfYear	221	None	replace
499	[BUG]  [BUGGY]  iChronology  =  chronology.monthOfYear()  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.monthOfYear()  +  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.monthOfYear()  +  1;	  iChronology    =    chronology.dayOfMonth    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	221	None	replace
500	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth  +  2;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth  +  2;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth  +  2;	  iChronology    =    chronology.dayOfMonth    +    1;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	221	None	replace
501	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfYear  +  1;  [CE]  cannot  find  symbol  dayOfYear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfYear  +  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfYear  +  1;	  iChronology    =    chronology.dayOfMonth    +    1;    	non-compiled	[CE]  cannot  find  symbol  dayOfYear	221	None	replace
502	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth  *  1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth  *  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth  *  1;	  iChronology    =    chronology.dayOfMonth    +    1;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	221	None	replace
503	[BUG]  [BUGGY]  iChronology  =  chronology.monthOfMonth  +  1;  [CE]  cannot  find  symbol  monthOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.monthOfMonth  +  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.monthOfMonth  +  1;	  iChronology    =    chronology.dayOfMonth    +    1;    	non-compiled	[CE]  cannot  find  symbol  monthOfMonth	221	None	replace
504	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.getDefault(),  leapMonth);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.getDefault(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.getDefault(),  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	260	None	replace
505	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.getDefault(),  dayOfMonth);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.getDefault(),  dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.getDefault(),  dayOfMonth);	  iChronology    =    chronology.getInstance(DateTimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	260	None	replace
506	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.getDefault(),  null);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.getDefault(),  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.getDefault(),  null);	  iChronology    =    chronology.getInstance(DateTimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	260	None	replace
507	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.getDefault(),  false);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.getDefault(),  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.getDefault(),  false);	  iChronology    =    chronology.getInstance(DateTimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	260	None	replace
508	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.getDefault(),  30);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.getDefault(),  30);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.getDefault(),  30);	  iChronology    =    chronology.getInstance(DateTimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	260	None	replace
509	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.getDefault(),  1);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.getDefault(),  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.getDefault(),  1);	  iChronology    =    chronology.getInstance(DateTimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	260	None	replace
510	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.getDefault(),  true);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.getDefault(),  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.getDefault(),  true);	  iChronology    =    chronology.getInstance(DateTimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	260	None	replace
511	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  /  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  /  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  /  leapMonth;	  iChronology    =    chronology.dayOfMonth()    +    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	110	None	replace
512	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  leapMonth  *  Math.max(iChronology.getDayOfMonth(),  leapMonth);  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  leapMonth  *  Math.max(iChronology.getDayOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  +  leapMonth  *  Math.max(iChronology.getDayOfMonth(),  leapMonth);	  iChronology    =    chronology.dayOfMonth()    +    leapMonth;    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	110	None	replace
513	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  leapMonth  *  Math.max(iChronology.getMillis(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  leapMonth  *  Math.max(iChronology.getMillis(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  +  leapMonth  *  Math.max(iChronology.getMillis(),  leapMonth);	  iChronology    =    chronology.dayOfMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
514	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  leapMonth  *  Math.max(iChronology.monthOfYear(),  leapMonth);  [CE]  no  suitable  method  found  for  max(DateTimeField,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  leapMonth  *  Math.max(iChronology.monthOfYear(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  +  leapMonth  *  Math.max(iChronology.monthOfYear(),  leapMonth);	  iChronology    =    chronology.dayOfMonth()    +    leapMonth;    	non-compiled	[CE]  no  suitable  method  found  for  max(DateTimeField,int)	110	None	replace
515	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  leapMonth,  MIN;  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  leapMonth,  MIN;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  +  leapMonth,  MIN;	  iChronology    =    chronology.dayOfMonth()    +    leapMonth;    	non-compiled	[CE]  ';'  expected	110	None	replace
516	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMinDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMinDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMinDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	67	None	replace
517	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	67	None	replace
518	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	67	None	replace
519	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYearMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYearMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	67	None	replace
520	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfYear);  [CE]  cannot  find  symbol  dayOfYear  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfYear);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfYear);	  iChronology    =    chronology.getBasicChronology(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfYear	17	None	replace
521	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth  +  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth  +  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth  +  leapMonth);	  iChronology    =    chronology.getBasicChronology(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	17	None	replace
522	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfYear,  leapMonth);  [CE]  cannot  find  symbol  dayOfYear  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfYear,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfYear,  leapMonth);	  iChronology    =    chronology.getBasicChronology(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfYear	17	None	replace
523	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth)+  leapMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth)+  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth)+  leapMonth;	  iChronology    =    chronology.getBasicChronology(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	17	None	replace
524	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth),  leapMonth);  [CE]  ';'  expected  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth),  leapMonth);	  iChronology    =    chronology.getBasicChronology(this.dayOfMonth);    	non-compiled	[CE]  ';'  expected	17	None	replace
525	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth-1);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth-1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth-1);	  iChronology    =    chronology.getBasicChronology(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	17	None	replace
526	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth),  leapMonth;  [CE]  ';'  expected  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth),  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth),  leapMonth;	  iChronology    =    chronology.getBasicChronology(this.dayOfMonth);    	non-compiled	[CE]  ';'  expected	17	None	replace
527	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  &  DateTimeFieldType.DAY_OF_MONTH;  [CE]  cannot  find  symbol  iField  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  &  DateTimeFieldType.DAY_OF_MONTH;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()  &  DateTimeFieldType.DAY_OF_MONTH;	  iField    =    DateTimeFieldType.dayOfMonth()    |    DateTimeFieldType.DAY_OF_MONTH;    	non-compiled	[CE]  cannot  find  symbol  iField	308	None	replace
528	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  -  DateTimeFieldType.DAY_OF_MONTH;  [CE]  cannot  find  symbol  iField  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  -  DateTimeFieldType.DAY_OF_MONTH;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()  -  DateTimeFieldType.DAY_OF_MONTH;	  iField    =    DateTimeFieldType.dayOfMonth()    |    DateTimeFieldType.DAY_OF_MONTH;    	non-compiled	[CE]  cannot  find  symbol  iField	308	None	replace
529	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  /  DateTimeFieldType.DAY_OF_MONTH;  [CE]  cannot  find  symbol  iField  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  /  DateTimeFieldType.DAY_OF_MONTH;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()  /  DateTimeFieldType.DAY_OF_MONTH;	  iField    =    DateTimeFieldType.dayOfMonth()    |    DateTimeFieldType.DAY_OF_MONTH;    	non-compiled	[CE]  cannot  find  symbol  iField	308	None	replace
530	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  +  DateTimeFieldType.DAY_OF_MONTH;  [CE]  cannot  find  symbol  iField  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  +  DateTimeFieldType.DAY_OF_MONTH;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()  +  DateTimeFieldType.DAY_OF_MONTH;	  iField    =    DateTimeFieldType.dayOfMonth()    |    DateTimeFieldType.DAY_OF_MONTH;    	non-compiled	[CE]  cannot  find  symbol  iField	308	None	replace
531	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  *  DateTimeFieldType.DAY_OF_MONTH;  [CE]  cannot  find  symbol  iField  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  *  DateTimeFieldType.DAY_OF_MONTH;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()  *  DateTimeFieldType.DAY_OF_MONTH;	  iField    =    DateTimeFieldType.dayOfMonth()    |    DateTimeFieldType.DAY_OF_MONTH;    	non-compiled	[CE]  cannot  find  symbol  iField	308	None	replace
532	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(iLeapMonth);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(iLeapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(iLeapMonth);	  iChronology    =    chronology.getInstance(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
533	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(iMax);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(iMax);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(iMax);	  iChronology    =    chronology.getInstance(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
534	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(min,  leapMonth);  [CE]  cannot  find  symbol  min  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(min,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(min,  leapMonth);	  iChronology    =    chronology.getInstance(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  min	155	None	replace
535	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(stackMonth);  [CE]  cannot  find  symbol  stackMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(stackMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(stackMonth);	  iChronology    =    chronology.getInstance(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  stackMonth	155	None	replace
536	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(iMin);  [CE]  cannot  find  symbol  iMin  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(iMin);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(iMin);	  iChronology    =    chronology.getInstance(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	155	None	replace
537	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(min);  [CE]  cannot  find  symbol  min  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(min);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(min);	  iChronology    =    chronology.getInstance(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  min	155	None	replace
538	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(second);  [CE]  cannot  find  symbol  second  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(second);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(second);	  iChronology    =    chronology.getInstance(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  second	155	None	replace
539	[BUG]  [BUGGY]  iMin  =  iChronology.getMinDayOfMonth();  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinDayOfMonth();	  iMin    =    chronology.getMinDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	139	None	replace
540	[BUG]  [BUGGY]  iMin  =  chronology.getMinDayOfMonth()  +  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinDayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinDayOfMonth()  +  leapMonth;	  iMin    =    chronology.getMinDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	139	None	replace
541	[BUG]  [BUGGY]  iMin  =  chronology.getMaxDayOfMonth();  [CE]  cannot  find  symbol  iMin  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMaxDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMaxDayOfMonth();	  iMin    =    chronology.getMinDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	139	None	replace
542	[BUG]  [BUGGY]  iMin  =  chronology.getMinDayOfYear();  [CE]  cannot  find  symbol  iMin  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinDayOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinDayOfYear();	  iMin    =    chronology.getMinDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	139	None	replace
543	[BUG]  [BUGGY]  iMin  =  this.chronology.getMinDayOfMonth();  [CE]  cannot  find  symbol  iMin  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  this.chronology.getMinDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  this.chronology.getMinDayOfMonth();	  iMin    =    chronology.getMinDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	139	None	replace
544	[BUG]  [BUGGY]  int  iMin  =  chronology.getMinDayOfMonth();  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  chronology.getMinDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  chronology.getMinDayOfMonth();	  iMin    =    chronology.getMinDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
545	[BUG]  [BUGGY]  iMax  =  chronology.getMinDayOfMonth();  [CE]  cannot  find  symbol  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMax  =  chronology.getMinDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMax  =  chronology.getMinDayOfMonth();	  iMin    =    chronology.getMinDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
546	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  leapMonth  +  1);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  leapMonth  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  leapMonth  +  1);	  iChronology    =    chronology.getChronology(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	29	None	replace
547	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  leapMonth)+  1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  leapMonth)+  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  leapMonth)+  1;	  iChronology    =    chronology.getChronology(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	29	None	replace
548	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  leapMonth,  MIN);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  leapMonth,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  leapMonth,  MIN);	  iChronology    =    chronology.getChronology(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	29	None	replace
549	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  leapY);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  leapY);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  leapY);	  iChronology    =    chronology.getChronology(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	29	None	replace
550	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  leapMonth  +  2);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  leapMonth  +  2);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  leapMonth  +  2);	  iChronology    =    chronology.getChronology(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	29	None	replace
551	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  leapMonth;  [CE]  ')'  expected  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  leapMonth;	  iChronology    =    chronology.getChronology(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  ')'  expected	29	None	replace
552	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  leapMonth-1);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  leapMonth-1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  leapMonth-1);	  iChronology    =    chronology.getChronology(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	29	None	replace
553	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.dayOfMonth()  +  leapMonth;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.dayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.dayOfMonth()  +  leapMonth;	  int    leapMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	87	None	replace
554	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.dayOfMonth()  -  leapMonth;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.dayOfMonth()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.dayOfMonth()  -  leapMonth;	  int    leapMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	87	None	replace
555	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.dayOfMonth()  *  leapMonth;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.dayOfMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.dayOfMonth()  *  leapMonth;	  int    leapMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	87	None	replace
556	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.dayOfMonth()  -  1;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.dayOfMonth()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.dayOfMonth()  -  1;	  int    leapMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	87	None	replace
557	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.dayOfYear();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.dayOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.dayOfYear();	  int    leapMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	87	None	replace
558	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.dayOfMonth()  /  2;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.dayOfMonth()  /  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.dayOfMonth()  /  2;	  int    leapMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	87	None	replace
559	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear(stackMonth,  leapMonth);  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear(stackMonth,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear(stackMonth,  leapMonth);	  iMin    =    chronology.getMinYear(stackMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	58	None	replace
560	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear(secondMonth);  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear(secondMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear(secondMonth);	  iMin    =    chronology.getMinYear(stackMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	58	None	replace
561	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear(dayOfMonth,  leapMonth);  [CE]  cannot  find  symbol  iMin  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear(dayOfMonth,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear(dayOfMonth,  leapMonth);	  iMin    =    chronology.getMinYear(stackMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	58	None	replace
562	[BUG]  [BUGGY]  iMin  =  chronology.getMaxYear(stackMonth);  [CE]  cannot  find  symbol  iMin  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMaxYear(stackMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMaxYear(stackMonth);	  iMin    =    chronology.getMinYear(stackMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	58	None	replace
563	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear(stackMonth  +  1);  [CE]  cannot  find  symbol  iMin  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear(stackMonth  +  1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear(stackMonth  +  1);	  iMin    =    chronology.getMinYear(stackMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	58	None	replace
564	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear(hourMonth);  [CE]  cannot  find  symbol  iMin  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear(hourMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear(hourMonth);	  iMin    =    chronology.getMinYear(stackMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	58	None	replace
565	[BUG]  [BUGGY]  int  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear();  [CE]  incompatible  types  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear();	  Integer    iChronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  incompatible  types	263	None	replace
566	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getMonthOfYear();  [CE]  method  getChronology  in  class  DateTimeUtils  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getMonthOfYear();	  Integer    iChronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  method  getChronology  in  class  DateTimeUtils  cannot  be  applied  to  given  types;	263	None	replace
567	[BUG]  [BUGGY]  int  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getMonthOfYear();  [CE]  incompatible  types  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getMonthOfYear();	  Integer    iChronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  incompatible  types	263	None	replace
568	[BUG]  [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  chronology  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth);	  iChronology    =    this.chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  chronology	146	None	replace
569	[BUG]  [BUGGY]  iChronology  =  (iChronology!=  null)?  this.chronology.getInstance(DateTimeFieldType.dayOfMonth()):  this.chronology.getInstance(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  chronology  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  (iChronology!=  null)?  this.chronology.getInstance(DateTimeFieldType.dayOfMonth()):  this.chronology.getInstance(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  (iChronology!=  null)?  this.chronology.getInstance(DateTimeFieldType.dayOfMonth()):  this.chronology.getInstance(DateTimeFieldType.dayOfMonth());	  iChronology    =    this.chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  chronology	146	None	replace
570	[BUG]  [BUGGY]  iChronology  =  (iChronology!=  null)?  this.chronology.getInstance(DateTimeFieldType.dayOfMonth()):  new  BasicChronology(this.chronology.getInstance(DateTimeFieldType.dayOfMonth());  [CE]  ')'  expected  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  (iChronology!=  null)?  this.chronology.getInstance(DateTimeFieldType.dayOfMonth()):  new  BasicChronology(this.chronology.getInstance(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  (iChronology!=  null)?  this.chronology.getInstance(DateTimeFieldType.dayOfMonth()):  new  BasicChronology(this.chronology.getInstance(DateTimeFieldType.dayOfMonth());	  iChronology    =    this.chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  ')'  expected	146	None	replace
571	[BUG]  [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth);	  iChronology    =    this.chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	146	None	replace
572	[BUG]  [BUGGY]  int  min  =  chronology.getMinYear()  +  leapMonth;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  chronology.getMinYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMinYear()  +  leapMonth;	  int    min    =    chronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	117	None	replace
573	[BUG]  [BUGGY]  int  min  =  chronology.getMinYear()  -  leapMonth;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  chronology.getMinYear()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMinYear()  -  leapMonth;	  int    min    =    chronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	117	None	replace
574	[BUG]  [BUGGY]  int  min  =  chronology.getMinYear()  -  1;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  chronology.getMinYear()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMinYear()  -  1;	  int    min    =    chronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	117	None	replace
575	[BUG]  [BUGGY]  int  min  =  chronology.getMinYear()  /  2;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  chronology.getMinYear()  /  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMinYear()  /  2;	  int    min    =    chronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	117	None	replace
576	[BUG]  [BUGGY]  int  min  =  chronology.getMinYear(),  leapMonth;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  chronology.getMinYear(),  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMinYear(),  leapMonth;	  int    min    =    chronology.getMinYear();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	117	None	replace
577	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  leapMonth).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  leapMonth).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  leapMonth).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	245	None	replace
578	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  dayOfMonth).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  dayOfMonth).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  dayOfMonth).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	245	None	replace
579	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN  +  leapMonth).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN  +  leapMonth).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN  +  leapMonth).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	245	None	replace
580	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  dayOfMonth).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  dayOfMonth).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  dayOfMonth).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	245	None	replace
581	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  SIZE).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  SIZE).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  SIZE).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	245	None	replace
582	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  30000).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  30000).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  30000).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	245	None	replace
583	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN],  leapMonth).withUTC();  [CE]  ')'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN],  leapMonth).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN],  leapMonth).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN).withUTC();    	non-compiled	[CE]  ')'  expected	245	None	replace
584	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN),  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN),  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN),  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	245	None	replace
585	[BUG]  [BUGGY]  int  min  =  this.dayOfMonth.getMinYear()  -  leapMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  this.dayOfMonth.getMinYear()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  this.dayOfMonth.getMinYear()  -  leapMonth;	  int    min    =    this.dayOfMonth.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	118	None	replace
586	[BUG]  [BUGGY]  int  min  =  this.dayOfMonth.getMinYear()  -  1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  this.dayOfMonth.getMinYear()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  this.dayOfMonth.getMinYear()  -  1;	  int    min    =    this.dayOfMonth.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	118	None	replace
587	[BUG]  [BUGGY]  int  min  =  this.dayOfMonth.getMinYear()  +  leapMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  this.dayOfMonth.getMinYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  this.dayOfMonth.getMinYear()  +  leapMonth;	  int    min    =    this.dayOfMonth.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	118	None	replace
588	[BUG]  [BUGGY]  int  min  =  (this.dayOfMonth!=  null)?  this.dayOfMonth.getMinYear()  :  1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  (this.dayOfMonth!=  null)?  this.dayOfMonth.getMinYear()  :  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  (this.dayOfMonth!=  null)?  this.dayOfMonth.getMinYear()  :  1;	  int    min    =    this.dayOfMonth.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	118	None	replace
589	[BUG]  [BUGGY]  int  min  =  (this.dayOfMonth!=  null)?  this.dayOfMonth.getMinYear()  :  0;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  (this.dayOfMonth!=  null)?  this.dayOfMonth.getMinYear()  :  0;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  (this.dayOfMonth!=  null)?  this.dayOfMonth.getMinYear()  :  0;	  int    min    =    this.dayOfMonth.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	118	None	replace
590	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth()  +  leapMonth);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth()  +  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth()  +  leapMonth);	  iChronology    =    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	200	None	replace
591	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology,  chronology.dayOfMonth());  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology,  chronology.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology,  chronology.dayOfMonth());	  iChronology    =    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	200	None	replace
592	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  30);  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  30);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  30);	  iChronology    =    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	200	None	replace
593	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  jumpMonth);  [CE]  cannot  find  symbol  jumpMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  jumpMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  jumpMonth);	  iChronology    =    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  jumpMonth	200	None	replace
594	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfYear());  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfYear());	  iChronology    =    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	200	None	replace
595	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  1);  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  1);	  iChronology    =    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	200	None	replace
596	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  true);  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  true);	  iChronology    =    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	200	None	replace
597	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear(dayOfMonth  +  leapMonth);  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear(dayOfMonth  +  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear(dayOfMonth  +  leapMonth);	  iMin    =    chronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	138	None	replace
598	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear(strMonth);  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear(strMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear(strMonth);	  iMin    =    chronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	138	None	replace
599	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear(dayOfMonth)+  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear(dayOfMonth)+  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear(dayOfMonth)+  leapMonth;	  iMin    =    chronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	138	None	replace
600	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  leapMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  leapMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	177	None	replace
601	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN  +  leapMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN  +  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN  +  leapMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	177	None	replace
602	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  30000);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  30000);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  30000);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	177	None	replace
603	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iChronology,  leapMonth);  [CE]  no  suitable  method  found  for  withUTC(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(iChronology,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iChronology,  leapMonth);	  iChronology    =    chronology.withUTC(iChronology);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(BasicChronology,int)	203	None	replace
604	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(dayOfMonth,  iChronology);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(dayOfMonth,  iChronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(dayOfMonth,  iChronology);	  iChronology    =    chronology.withUTC(iChronology);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	203	None	replace
605	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iFieldType,  iChronology);  [CE]  cannot  find  symbol  iFieldType  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(iFieldType,  iChronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iFieldType,  iChronology);	  iChronology    =    chronology.withUTC(iChronology);    	non-compiled	[CE]  cannot  find  symbol  iFieldType	203	None	replace
606	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iDayOfMonth,  iChronology);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(iDayOfMonth,  iChronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iDayOfMonth,  iChronology);	  iChronology    =    chronology.withUTC(iChronology);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	203	None	replace
607	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iMin,  iChronology);  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(iMin,  iChronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iMin,  iChronology);	  iChronology    =    chronology.withUTC(iChronology);    	non-compiled	[CE]  cannot  find  symbol  iMin	203	None	replace
608	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iD,  leapMonth);  [CE]  cannot  find  symbol  iD  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(iD,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iD,  leapMonth);	  iChronology    =    chronology.withUTC(iChronology);    	non-compiled	[CE]  cannot  find  symbol  iD	203	None	replace
609	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iHronology,  leapMonth);  [CE]  cannot  find  symbol  iHronology  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(iHronology,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iHronology,  leapMonth);	  iChronology    =    chronology.withUTC(iChronology);    	non-compiled	[CE]  cannot  find  symbol  iHronology	203	None	replace
610	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iWeekMonth,  iChronology);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(iWeekMonth,  iChronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iWeekMonth,  iChronology);	  iChronology    =    chronology.withUTC(iChronology);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	203	None	replace
611	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  iLeapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  iLeapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
612	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getAverageMillisPerMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getAverageMillisPerMonth());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
613	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getMillisPerMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getMillisPerMonth());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
614	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getMinYear());  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getMinYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getMinYear());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
615	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getDayOfMonth());  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getDayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getDayOfMonth());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1,    leapMonth);    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	79	None	replace
616	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  null);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  null);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
617	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getMaxYear());  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getMaxYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getMaxYear());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
618	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getMillisPerWeek());  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getMillisPerWeek());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getMillisPerWeek());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
619	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getMillisPerDay());  [CE]  cannot  find  symbol  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getMillisPerDay());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getMillisPerDay());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
620	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(true,  leapMonth);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(true,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth(true,  leapMonth);	  int    leapMonth    =    iChronology.getDayOfMonth(true);    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	239	None	replace
621	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth(true);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth(true);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getDayOfMonth(true);	  int    leapMonth    =    iChronology.getDayOfMonth(true);    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	239	None	replace
622	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(false);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(false);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth(false);	  int    leapMonth    =    iChronology.getDayOfMonth(true);    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	239	None	replace
623	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(false,  leapMonth);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(false,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth(false,  leapMonth);	  int    leapMonth    =    iChronology.getDayOfMonth(true);    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	239	None	replace
624	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(this,  leapMonth);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(this,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth(this,  leapMonth);	  int    leapMonth    =    iChronology.getDayOfMonth(true);    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	239	None	replace
625	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(null);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(null);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth(null);	  int    leapMonth    =    iChronology.getDayOfMonth(true);    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	239	None	replace
626	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(min,  leapMonth);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(min,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth(min,  leapMonth);	  int    leapMonth    =    iChronology.getDayOfMonth(true);    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	239	None	replace
627	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(dayOfMonth,  true);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(dayOfMonth,  true);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth(dayOfMonth,  true);	  int    leapMonth    =    iChronology.getDayOfMonth(true);    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	239	None	replace
628	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(true),  leapMonth;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(true),  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth(true),  leapMonth;	  int    leapMonth    =    iChronology.getDayOfMonth(true);    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	239	None	replace
629	[BUG]  [BUGGY]  iChronology  =  chronology.getMonthOfYear(),  leapMonth;  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getMonthOfYear(),  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getMonthOfYear(),  leapMonth;	  iChronology    =    chronology.getMonthOfYear();    	non-compiled	[CE]  ';'  expected	39	None	replace
630	[BUG]  [BUGGY]  iChronology  =  chronology.getMonthOfYear()  +  leapMonth;  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getMonthOfYear()  +  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getMonthOfYear()  +  leapMonth;	  iChronology    =    chronology.getMonthOfYear();    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	39	None	replace
631	[BUG]  [BUGGY]  iChronology  =  chronology.getMonthOfYear(dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getMonthOfYear(dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getMonthOfYear(dayOfMonth);	  iChronology    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	39	None	replace
632	[BUG]  [BUGGY]  iChronology  =  chronology.getMonthOfYear(),  leapMonth);  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getMonthOfYear(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getMonthOfYear(),  leapMonth);	  iChronology    =    chronology.getMonthOfYear();    	non-compiled	[CE]  ';'  expected	39	None	replace
633	[BUG]  [BUGGY]  iChronology  =  chronology.getMonthOfYear()  -  1;  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getMonthOfYear()  -  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getMonthOfYear()  -  1;	  iChronology    =    chronology.getMonthOfYear();    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	39	None	replace
634	[BUG]  [BUGGY]  iChronology  =  chronology.getMonthOfYear()  -  leapMonth;  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getMonthOfYear()  -  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getMonthOfYear()  -  leapMonth;	  iChronology    =    chronology.getMonthOfYear();    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	39	None	replace
635	[BUG]  [BUGGY]  iChronology  =  chronology.getMonthOfYear()  +  1;  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getMonthOfYear()  +  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getMonthOfYear()  +  1;	  iChronology    =    chronology.getMonthOfYear();    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	39	None	replace
636	[BUG]  [BUGGY]  iChronology  =  chronology.getMonthOfYear()  /  2;  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getMonthOfYear()  /  2;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getMonthOfYear()  /  2;	  iChronology    =    chronology.getMonthOfYear();    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	39	None	replace
637	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth(iChronology);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth(iChronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getDayOfMonth(iChronology);	  int    leapMonth    =    iChronology.getDayOfMonth(chronology);    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	237	None	replace
638	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(chronology,  leapMonth);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(chronology,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth(chronology,  leapMonth);	  int    leapMonth    =    iChronology.getDayOfMonth(chronology);    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	237	None	replace
639	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(dayOfMonth);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth(dayOfMonth);	  int    leapMonth    =    iChronology.getDayOfMonth(chronology);    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	237	None	replace
640	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(dayOfMonth,  leapMonth);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(dayOfMonth,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth(dayOfMonth,  leapMonth);	  int    leapMonth    =    iChronology.getDayOfMonth(chronology);    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	237	None	replace
641	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth(switchMonth);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth(switchMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getDayOfMonth(switchMonth);	  int    leapMonth    =    iChronology.getDayOfMonth(chronology);    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	237	None	replace
642	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(this.dayOfMonth);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(this.dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth(this.dayOfMonth);	  int    leapMonth    =    iChronology.getDayOfMonth(chronology);    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	237	None	replace
643	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1;  [CE]  ')'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1;	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth;    	non-compiled	[CE]  ')'  expected	240	None	replace
644	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  3);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  3);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  3);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	240	None	replace
645	[BUG]  [BUGGY]  iMin  =  chronology.getMinyOfYear();  [CE]  cannot  find  symbol  iMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinyOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinyOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinyOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	249	None	replace
646	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMinyOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMinyOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMinyOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinyOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	249	None	replace
647	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinyOfYear()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinyOfYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinyOfYear()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinyOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	249	None	replace
648	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinyOfDay();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinyOfDay();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinyOfDay();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinyOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	249	None	replace
649	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  leapMonth);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this,  leapMonth);	  iChronology    =    chronology.getBasicChronology(this);    	non-compiled	[CE]  cannot  find  symbol	327	None	replace
650	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this).dayOfMonth;  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this).dayOfMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this).dayOfMonth;	  iChronology    =    chronology.getBasicChronology(this);    	non-compiled	[CE]  cannot  find  symbol	327	None	replace
651	[BUG]  [BUGGY]  iChronology  =  this.chronology.getBasicChronology(this);  [CE]  cannot  find  symbol  chronology  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getBasicChronology(this);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getBasicChronology(this);	  iChronology    =    chronology.getBasicChronology(this);    	non-compiled	[CE]  cannot  find  symbol  chronology	327	None	replace
652	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this)+  leapMonth;  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this)+  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this)+  leapMonth;	  iChronology    =    chronology.getBasicChronology(this);    	non-compiled	[CE]  cannot  find  symbol	327	None	replace
653	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this).dayOfMonth();  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this).dayOfMonth();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this).dayOfMonth();	  iChronology    =    chronology.getBasicChronology(this);    	non-compiled	[CE]  cannot  find  symbol	327	None	replace
654	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  jumpMonth);  [CE]  cannot  find  symbol  jumpMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  jumpMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this,  jumpMonth);	  iChronology    =    chronology.getBasicChronology(this);    	non-compiled	[CE]  cannot  find  symbol  jumpMonth	327	None	replace
655	[BUG]  [BUGGY]  iChronology  =  iChronology.getBasicChronology(this);  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  iChronology.getBasicChronology(this);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  iChronology.getBasicChronology(this);	  iChronology    =    chronology.getBasicChronology(this);    	non-compiled	[CE]  cannot  find  symbol	327	None	replace
656	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DEFAULT_TIME_ZONE,  leapMonth);  [CE]  cannot  find  symbol  DEFAULT_TIME_ZONE  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DEFAULT_TIME_ZONE,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DEFAULT_TIME_ZONE,  leapMonth);	  iChronology    =    chronology.getInstance(DEFAULT_TIME_ZONE);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TIME_ZONE	261	None	replace
657	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(MIN);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(MIN);	  iChronology    =    chronology.getInstance(DEFAULT_TIME_ZONE);    	non-compiled	[CE]  cannot  find  symbol	261	None	replace
658	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(SerialChronology.DAY_OF_MONTH);  [CE]  cannot  find  symbol  SerialChronology  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(SerialChronology.DAY_OF_MONTH);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(SerialChronology.DAY_OF_MONTH);	  iChronology    =    chronology.getInstance(DEFAULT_TIME_ZONE);    	non-compiled	[CE]  cannot  find  symbol  SerialChronology	261	None	replace
659	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.DAY_OF_MONTH);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.DAY_OF_MONTH);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.DAY_OF_MONTH);	  iChronology    =    chronology.getInstance(DEFAULT_TIME_ZONE);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	261	None	replace
660	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  -  leapMonth  +  1;  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  -  leapMonth  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth()  -  leapMonth  +  1;	  int    iLeapMonth    =    iChronology.getLeapMonth()    -    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
661	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getLeapMonth()  -  leapMonth;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getLeapMonth()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getLeapMonth()  -  leapMonth;	  int    iLeapMonth    =    iChronology.getLeapMonth()    -    leapMonth;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	105	None	replace
662	[BUG]  [BUGGY]  int  iLeapMonth  =  this.iChronology.getLeapMonth()  -  leapMonth;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  this.iChronology.getLeapMonth()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  this.iChronology.getLeapMonth()  -  leapMonth;	  int    iLeapMonth    =    iChronology.getLeapMonth()    -    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
663	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(false,  leapMonth);  [CE]  no  suitable  method  found  for  withUTC(boolean,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(false,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(false,  leapMonth);	  iChronology    =    chronology.withUTC(true);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(boolean,int)	204	None	replace
664	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(true,  leapMonth);  [CE]  no  suitable  method  found  for  withUTC(boolean,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(true,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(true,  leapMonth);	  iChronology    =    chronology.withUTC(true);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(boolean,int)	204	None	replace
665	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this,  leapMonth);  [CE]  no  suitable  method  found  for  withUTC(BasicMonthOfYearDateTimeField,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this,  leapMonth);	  iChronology    =    chronology.withUTC(true);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(BasicMonthOfYearDateTimeField,int)	204	None	replace
666	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(null,  true);  [CE]  no  suitable  method  found  for  withUTC(<null>,boolean)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(null,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(null,  true);	  iChronology    =    chronology.withUTC(true);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(<null>,boolean)	204	None	replace
667	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this,  true);  [CE]  no  suitable  method  found  for  withUTC(BasicMonthOfYearDateTimeField,boolean)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this,  true);	  iChronology    =    chronology.withUTC(true);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(BasicMonthOfYearDateTimeField,boolean)	204	None	replace
668	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(dayOfMonth,  true);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(dayOfMonth,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(dayOfMonth,  true);	  iChronology    =    chronology.withUTC(true);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	204	None	replace
669	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(getMillis(),  true);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(getMillis(),  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(getMillis(),  true);	  iChronology    =    chronology.withUTC(true);    	non-compiled	[CE]  cannot  find  symbol	204	None	replace
670	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(min,  leapMonth);  [CE]  cannot  find  symbol  min  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(min,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(min,  leapMonth);	  iChronology    =    chronology.withUTC(true);    	non-compiled	[CE]  cannot  find  symbol  min	204	None	replace
671	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(MIN,  leapMonth);  [CE]  no  suitable  method  found  for  withUTC(int,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(MIN,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(MIN,  leapMonth);	  iChronology    =    chronology.withUTC(true);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(int,int)	204	None	replace
672	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth  +  1);  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth(),  leapMonth  +  1);	  iChronology    =    chronology.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  ';'  expected	114	None	replace
673	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth  -  leapMonth);  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth  -  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth(),  leapMonth  -  leapMonth);	  iChronology    =    chronology.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  ';'  expected	114	None	replace
674	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth,  MIN);  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth(),  leapMonth,  MIN);	  iChronology    =    chronology.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  ';'  expected	114	None	replace
675	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth  +  1,  leapMonth);  [CE]  ';'  expected  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth  +  1,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth(),  leapMonth  +  1,  leapMonth);	  iChronology    =    chronology.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  ';'  expected	114	None	replace
676	[BUG]  [BUGGY]  iMax  =  chronology.getMaxYear();  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMax  =  chronology.getMaxYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMax  =  chronology.getMaxYear();	  iMin    =    iChronology.getMaxYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	215	None	replace
677	[BUG]  [BUGGY]  iMin  =  iChronology.getMaxDayOfMonth();  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMaxDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMaxDayOfMonth();	  iMin    =    iChronology.getMaxYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	215	None	replace
678	[BUG]  [BUGGY]  iMin  =  leapMonth.getMaxYear();  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  leapMonth.getMaxYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  leapMonth.getMaxYear();	  iMin    =    iChronology.getMaxYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	215	None	replace
679	[BUG]  [BUGGY]  iMin  =  iChronology.getMaxYear()  +  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMaxYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMaxYear()  +  leapMonth;	  iMin    =    iChronology.getMaxYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	215	None	replace
680	[BUG]  [BUGGY]  iMin  =  time.getMaxYear();  [CE]  cannot  find  symbol  iMin  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  time.getMaxYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  time.getMaxYear();	  iMin    =    iChronology.getMaxYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	215	None	replace
681	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getDayOfMonth()  [CE]  ';'  expected  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getDayOfMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getDayOfMonth()	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth()    	non-compiled	[CE]  ';'  expected	11	None	replace
682	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth()  [CE]  ';'  expected  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth()	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth()    	non-compiled	[CE]  ';'  expected	11	None	replace
683	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  [CE]  illegal  start  of  expression  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth()    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
684	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getAverageMillisPerMonth()  [CE]  ';'  expected  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getAverageMillisPerMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getAverageMillisPerMonth()	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth()    	non-compiled	[CE]  ';'  expected	11	None	replace
685	[BUG]  [BUGGY]  iMonth  =  chronology.getMonthOfDay();  [CE]  cannot  find  symbol  iMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMonthOfDay();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonthOfDay();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfDay();    	non-compiled	[CE]  cannot  find  symbol  iMonth	44	None	replace
686	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getMonthOfDay();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getMonthOfDay();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getMonthOfDay();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfDay();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	44	None	replace
687	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfDay()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfDay()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfDay()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfDay();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	44	None	replace
688	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1);	  iChronology    =    chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	324	None	replace
689	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth)  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth)  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth)	  iChronology    =    chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  ';'  expected	324	None	replace
690	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().set(DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  no  suitable  method  found  for  set(DateTimeFieldType,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().set(DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().set(DateTimeFieldType.dayOfMonth(),  leapMonth);	  iChronology    =    chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  no  suitable  method  found  for  set(DateTimeFieldType,int)	324	None	replace
691	[BUG]  [BUGGY]  iChronology  =  iChronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  iChronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  iChronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth);	  iChronology    =    chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	324	None	replace
692	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfYear(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfYear(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfYear(),  leapMonth);	  iChronology    =    chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	324	None	replace
693	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfYear().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfYear().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfYear().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth);	  iChronology    =    chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	324	None	replace
694	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN);	  iChronology    =    chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	324	None	replace
695	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  null);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  null);	  iChronology    =    chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	324	None	replace
696	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  false);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  false);	  iChronology    =    chronology.getInstance(false);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	156	None	replace
697	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this,  leapMonth);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this,  leapMonth);	  iChronology    =    chronology.getInstance(false);    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
698	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth()  -  1;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getDayOfMonth()  -  1;	  int    leapMonth    =    iChronology.getDayOfMonth()    -    1;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	86	None	replace
699	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  *  1;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  *  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth()  *  1;	  int    leapMonth    =    iChronology.getDayOfMonth()    -    1;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	86	None	replace
700	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth()  +  1;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getDayOfMonth()  +  1;	  int    leapMonth    =    iChronology.getDayOfMonth()    -    1;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	86	None	replace
701	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  2;  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  2;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  2;	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth)+    1;    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
702	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)/  1;  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)/  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)/  1;	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth)+    1;    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
703	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  3;  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  3;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  3;	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth)+    1;    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
704	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  4;  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  4;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  4;	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth)+    1;    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
705	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  5;  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  5;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  5;	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth)+    1;    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
706	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  1000;  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  1000;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  1000;	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth)+    1;    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
707	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  leapMonth  +  1;  [CE]  ';'  expected  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  leapMonth  +  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  leapMonth  +  1;	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth)+    1;    	non-compiled	[CE]  ';'  expected	80	None	replace
708	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  1L;  [CE]  cannot  find  symbol  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  1L;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  1L;	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth)+    1;    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
709	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  MIN);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  MIN);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  MIN);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	172	None	replace
710	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  leapMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  leapMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	172	None	replace
711	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  dayOfMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  dayOfMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	172	None	replace
712	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  30);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  30);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  30);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	172	None	replace
713	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  1);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  1);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	172	None	replace
714	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  60);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  60);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  60);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	172	None	replace
715	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  +  1);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  +  1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  +  1);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	172	None	replace
716	[BUG]  [BUGGY]  int  iLeapMonth  =  leapMonth;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  leapMonth;	  int    iLeapMonth    =    iFieldType.getLeapMonth();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	181	None	replace
717	[BUG]  [BUGGY]  int  iLeapMonth  =  iMin.getLeapMonth();  [CE]  cannot  find  symbol  iMin  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iMin.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iMin.getLeapMonth();	  int    iLeapMonth    =    iFieldType.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	181	None	replace
718	[BUG]  [BUGGY]  int  iLeapMonth  =  height.getLeapMonth();  [CE]  cannot  find  symbol  height  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  height.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  height.getLeapMonth();	  int    iLeapMonth    =    iFieldType.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  height	181	None	replace
719	[BUG]  [BUGGY]  int  iLeapMonth  =  date.getLeapMonth();  [CE]  cannot  find  symbol  date  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  date.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  date.getLeapMonth();	  int    iLeapMonth    =    iFieldType.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  date	181	None	replace
720	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(iLeapMonth);  [CE]  method  getMinYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear(iLeapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(iLeapMonth);	  int    min    =    iChronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  method  getMinYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	191	None	replace
721	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(min);  [CE]  method  getMinYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear(min);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(min);	  int    min    =    iChronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  method  getMinYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	191	None	replace
722	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(secondMonth);  [CE]  cannot  find  symbol  secondMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear(secondMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(secondMonth);	  int    min    =    iChronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  secondMonth	191	None	replace
723	[BUG]  [BUGGY]  int  min  =  chronology.getMinYear(dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  chronology.getMinYear(dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMinYear(dayOfMonth);	  int    min    =    iChronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	191	None	replace
724	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(dayMonth);  [CE]  cannot  find  symbol  dayMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear(dayMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(dayMonth);	  int    min    =    iChronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayMonth	191	None	replace
725	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(iMax);  [CE]  method  getMinYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear(iMax);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(iMax);	  int    min    =    iChronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  method  getMinYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	191	None	replace
726	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(second);  [CE]  cannot  find  symbol  second  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear(second);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(second);	  int    min    =    iChronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  second	191	None	replace
727	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(year);  [CE]  cannot  find  symbol  year  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear(year);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(year);	  int    min    =    iChronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  year	191	None	replace
728	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iLeapMonth);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iLeapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iLeapMonth);	  iChronology    =    chronology.getChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
729	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iMin);  [CE]  cannot  find  symbol  iMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iMin);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iMin);	  iChronology    =    chronology.getChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	26	None	replace
730	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iDayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iDayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iDayOfMonth);	  iChronology    =    chronology.getChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	26	None	replace
731	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iMax);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iMax);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iMax);	  iChronology    =    chronology.getChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
732	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iMonth);  [CE]  cannot  find  symbol  iMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iMonth);	  iChronology    =    chronology.getChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMonth	26	None	replace
733	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iStart);  [CE]  cannot  find  symbol  iStart  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iStart);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iStart);	  iChronology    =    chronology.getChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iStart	26	None	replace
734	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iHours);  [CE]  cannot  find  symbol  iHours  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iHours);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iHours);	  iChronology    =    chronology.getChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iHours	26	None	replace
735	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  MIN);  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  MIN);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth),    leapMonth);    	non-compiled	[CE]  ';'  expected	77	None	replace
736	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)-  leapMonth;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)-  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)-  leapMonth;	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
737	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  leapMonth;  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  leapMonth;	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
738	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)/  2;  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)/  2;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)/  2;	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
739	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  minute);  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  minute);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  minute);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth),    leapMonth);    	non-compiled	[CE]  ';'  expected	77	None	replace
740	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapYear);  [CE]  cannot  find  symbol  leapYear  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapYear);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapYear);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    jumpMonth);    	non-compiled	[CE]  cannot  find  symbol  leapYear	193	None	replace
741	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMillis);  [CE]  cannot  find  symbol  leapMillis  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMillis);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMillis);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    jumpMonth);    	non-compiled	[CE]  cannot  find  symbol  leapMillis	193	None	replace
742	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapHeight);  [CE]  cannot  find  symbol  leapHeight  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapHeight);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapHeight);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    jumpMonth);    	non-compiled	[CE]  cannot  find  symbol  leapHeight	193	None	replace
743	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leap);  [CE]  cannot  find  symbol  leap  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leap);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leap);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    jumpMonth);    	non-compiled	[CE]  cannot  find  symbol  leap	193	None	replace
744	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapy);  [CE]  cannot  find  symbol  leapy  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapy);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapy);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    jumpMonth);    	non-compiled	[CE]  cannot  find  symbol  leapy	193	None	replace
745	[BUG]  [BUGGY]  iChronology  =  (iChronology.dayOfMonth()  ==  1?  chronology.dayOfMonth()  :  leapMonth  +  1);  [CE]  incomparable  types:  DateTimeField  and  int  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  (iChronology.dayOfMonth()  ==  1?  chronology.dayOfMonth()  :  leapMonth  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  (iChronology.dayOfMonth()  ==  1?  chronology.dayOfMonth()  :  leapMonth  +  1);	  iChronology    =    chronology.dayOfMonth()    +    1;    	non-compiled	[CE]  incomparable  types:  DateTimeField  and  int	199	None	replace
746	[BUG]  [BUGGY]  iChronology  =  (iChronology.dayOfMonth()  ==  1?  chronology.dayOfMonth()  :  leapMonth);  [CE]  incomparable  types:  DateTimeField  and  int  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  (iChronology.dayOfMonth()  ==  1?  chronology.dayOfMonth()  :  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  (iChronology.dayOfMonth()  ==  1?  chronology.dayOfMonth()  :  leapMonth);	  iChronology    =    chronology.dayOfMonth()    +    1;    	non-compiled	[CE]  incomparable  types:  DateTimeField  and  int	199	None	replace
747	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  *  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  *  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  *  1;	  iChronology    =    chronology.dayOfMonth()    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	199	None	replace
748	[BUG]  [BUGGY]  iChronology  =  (iChronology.dayOfMonth()  >=  1?  chronology.dayOfMonth()  :  leapMonth  +  1);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  (iChronology.dayOfMonth()  >=  1?  chronology.dayOfMonth()  :  leapMonth  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  (iChronology.dayOfMonth()  >=  1?  chronology.dayOfMonth()  :  leapMonth  +  1);	  iChronology    =    chronology.dayOfMonth()    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	199	None	replace
749	[BUG]  [BUGGY]  iChronology  =  (iChronology.dayOfMonth()!=  1?  chronology.dayOfMonth()  :  leapMonth  +  1);  [CE]  incomparable  types:  DateTimeField  and  int  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  (iChronology.dayOfMonth()!=  1?  chronology.dayOfMonth()  :  leapMonth  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  (iChronology.dayOfMonth()!=  1?  chronology.dayOfMonth()  :  leapMonth  +  1);	  iChronology    =    chronology.dayOfMonth()    +    1;    	non-compiled	[CE]  incomparable  types:  DateTimeField  and  int	199	None	replace
750	[BUG]  [BUGGY]  iChronology  =  (iChronology.dayOfMonth()  ==  1?  chronology.dayOfMonth()  :  leapMonth  +  1;  [CE]  ')'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  (iChronology.dayOfMonth()  ==  1?  chronology.dayOfMonth()  :  leapMonth  +  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  (iChronology.dayOfMonth()  ==  1?  chronology.dayOfMonth()  :  leapMonth  +  1;	  iChronology    =    chronology.dayOfMonth()    +    1;    	non-compiled	[CE]  ')'  expected	199	None	replace
751	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth,  leapMonth);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth,  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    -    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	71	None	replace
752	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  -  leapMonth);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  -  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  -  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    -    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
753	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  /  leapMonth);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  /  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  /  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    -    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	71	None	replace
754	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth),  leapMonth);  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth),  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    -    leapMonth);    	non-compiled	[CE]  ';'  expected	71	None	replace
755	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth  +  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth  +  1);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    -    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	71	None	replace
756	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth)+  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth)+  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth)+  1;	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    -    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	71	None	replace
757	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth,  true);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth,  true);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    -    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	71	None	replace
758	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth,  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth,  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth,  1);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    -    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	71	None	replace
759	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth.getLeapMonth()  +  1;  [CE]  int  cannot  be  dereferenced  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth.getLeapMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth.getLeapMonth()  +  1;	  iLeapMonth    =    leapMonth.getLeapMonth();    	non-compiled	[CE]  int  cannot  be  dereferenced	2	None	replace
760	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth  <  <  chronology.getLeapMonth();  [CE]  >  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth  <  <  chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth  <  <  chronology.getLeapMonth();	  iLeapMonth    =    leapMonth.getLeapMonth();    	non-compiled	[CE]  >  expected	2	None	replace
761	[BUG]  [BUGGY]  int  iChronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  iChronology.getDayOfMonth();  [CE]  incompatible  types  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iChronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  iChronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iChronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  iChronology.getDayOfMonth();	  Integer    iChronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    iChronology.getDayOfMonth();    	non-compiled	[CE]  incompatible  types	229	None	replace
762	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  iChronology.getDayOfMonth();  [CE]  method  getChronology  in  class  DateTimeUtils  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  iChronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  iChronology.getDayOfMonth();	  Integer    iChronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    iChronology.getDayOfMonth();    	non-compiled	[CE]  method  getChronology  in  class  DateTimeUtils  cannot  be  applied  to  given  types;	229	None	replace
763	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  iChronology.dayOfMonth();  [CE]  incompatible  types  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  iChronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  iChronology.dayOfMonth();	  Integer    iChronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    iChronology.getDayOfMonth();    	non-compiled	[CE]  incompatible  types	229	None	replace
764	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  iChronology.getDayOfMonth()  +  leapMonth;  [CE]  incompatible  types  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  iChronology.getDayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  iChronology.getDayOfMonth()  +  leapMonth;	  Integer    iChronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    iChronology.getDayOfMonth();    	non-compiled	[CE]  incompatible  types	229	None	replace
765	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  [CE]  incompatible  types  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology);	  Integer    iChronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    iChronology.getDayOfMonth();    	non-compiled	[CE]  incompatible  types	229	None	replace
766	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  iDayOfMonth  =  iChronology.getDayOfMonth();  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  iDayOfMonth  =  iChronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  iDayOfMonth  =  iChronology.getDayOfMonth();	  Integer    iChronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    iChronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	229	None	replace
767	[BUG]  [BUGGY]  iMin  =  this.data.getMinYear();  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  this.data.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  this.data.getMinYear();	  iMin    =    data.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	216	None	replace
768	[BUG]  [BUGGY]  iMin  =  data.getMinYear()  +  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  data.getMinYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  data.getMinYear()  +  leapMonth;	  iMin    =    data.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	216	None	replace
769	[BUG]  [BUGGY]  iMin  =  iFieldType.getMinYear();  [CE]  cannot  find  symbol  iMin  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iFieldType.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iFieldType.getMinYear();	  iMin    =    data.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	216	None	replace
770	[BUG]  [BUGGY]  iMin  =  iData.getMinYear();  [CE]  cannot  find  symbol  iMin  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iData.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iData.getMinYear();	  iMin    =    data.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	216	None	replace
771	[BUG]  [BUGGY]  iMin  =  data.getMaxYear();  [CE]  cannot  find  symbol  iMin  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  data.getMaxYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  data.getMaxYear();	  iMin    =    data.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	216	None	replace
772	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  2);  [CE]  cannot  find  symbol  DateTimeZone  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  2);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  2);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    3);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	326	None	replace
773	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  4);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  4);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  4);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    3);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	326	None	replace
774	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  3  +  1);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  3  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  3  +  1);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    3);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	326	None	replace
775	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  10);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  10);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  10);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    3);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	326	None	replace
776	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  iLeapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  iLeapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
777	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN  +  1);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN  +  1);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
778	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN  +  leapMonth);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN  +  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN  +  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
779	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  iHeapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  iHeapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	76	None	replace
780	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  iMax);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  iMax);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  iMax);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
781	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  1);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  1);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
782	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  iRight);  [CE]  cannot  find  symbol  iRight  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  iRight);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  iRight);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iRight	76	None	replace
783	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  30);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  30);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  30);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
784	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  iLeapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  iLeapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
785	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN  +  1);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN  +  1);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
786	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  iHeapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  iHeapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	95	None	replace
787	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  iMax);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  iMax);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  iMax);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
788	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  iRight);  [CE]  cannot  find  symbol  iRight  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  iRight);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  iRight);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol  iRight	95	None	replace
789	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  1);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  1);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
790	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  height);  [CE]  cannot  find  symbol  height  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  height);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN,  height);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol  height	95	None	replace
791	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  leapMonth);  [CE]  no  suitable  method  found  for  withUTC(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.iChronology,  leapMonth);	  iChronology    =    chronology.withUTC(this.iChronology);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(BasicChronology,int)	206	None	replace
792	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  this.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  this.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.iChronology,  this.dayOfMonth);	  iChronology    =    chronology.withUTC(this.iChronology);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	206	None	replace
793	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  this.iLeapMonth);  [CE]  no  suitable  method  found  for  withUTC(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  this.iLeapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.iChronology,  this.iLeapMonth);	  iChronology    =    chronology.withUTC(this.iChronology);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(BasicChronology,int)	206	None	replace
794	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  this.iMin);  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  this.iMin);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.iChronology,  this.iMin);	  iChronology    =    chronology.withUTC(this.iChronology);    	non-compiled	[CE]  cannot  find  symbol  iMin	206	None	replace
795	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  this.iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  this.iHeapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.iChronology,  this.iHeapMonth);	  iChronology    =    chronology.withUTC(this.iChronology);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	206	None	replace
796	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this,  this.iChronology);  [CE]  no  suitable  method  found  for  withUTC(BasicMonthOfYearDateTimeField,BasicChronology)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this,  this.iChronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this,  this.iChronology);	  iChronology    =    chronology.withUTC(this.iChronology);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(BasicMonthOfYearDateTimeField,BasicChronology)	206	None	replace
797	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  this.iMax);  [CE]  no  suitable  method  found  for  withUTC(BasicChronology,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  this.iMax);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.iChronology,  this.iMax);	  iChronology    =    chronology.withUTC(this.iChronology);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(BasicChronology,int)	206	None	replace
798	[BUG]  [BUGGY]  iMin  =  chronology.getMinInYear();  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinInYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinInYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinInYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	252	None	replace
799	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinInYear()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinInYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinInYear()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinInYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	252	None	replace
800	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMinInYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMinInYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMinInYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinInYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	252	None	replace
801	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMininYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMininYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMininYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinInYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	252	None	replace
802	[BUG]  [BUGGY]  DayOfMonth  iDayOfMonth  =  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  DayOfMonth  iDayOfMonth  =  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	DayOfMonth  iDayOfMonth  =  DateTimeFieldType.dayOfMonth();	  iDayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
803	[BUG]  [BUGGY]  iDayOfMonth  =  dateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iDayOfMonth  =  dateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iDayOfMonth  =  dateTimeFieldType.dayOfMonth();	  iDayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	212	None	replace
804	[BUG]  [BUGGY]  iDayOfMonth  =  DateTimeFieldType.dayOfYear();  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iDayOfMonth  =  DateTimeFieldType.dayOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iDayOfMonth  =  DateTimeFieldType.dayOfYear();	  iDayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	212	None	replace
805	[BUG]  [BUGGY]  iDayOfMonth  =  DateTimeFieldType.dayOfMonth()  +  leapMonth;  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iDayOfMonth  =  DateTimeFieldType.dayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iDayOfMonth  =  DateTimeFieldType.dayOfMonth()  +  leapMonth;	  iDayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	212	None	replace
806	[BUG]  [BUGGY]  int  dayOfMonth  =  DateTimeFieldType.dayOfMonth();  [CE]  incompatible  types  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  dayOfMonth  =  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  dayOfMonth  =  DateTimeFieldType.dayOfMonth();	  iDayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  incompatible  types	212	None	replace
807	[BUG]  [BUGGY]  iDayOfMonth  =  chronology.dayOfMonth();  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iDayOfMonth  =  chronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iDayOfMonth  =  chronology.dayOfMonth();	  iDayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	212	None	replace
808	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(hibernate);  [CE]  cannot  find  symbol  hibernate  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(hibernate);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(hibernate);	  iChronology    =    chronology.withUTC(iDateTimeFieldType);    	non-compiled	[CE]  cannot  find  symbol  hibernate	315	None	replace
809	[BUG]  [BUGGY]  int  iLeapMonth  =  dataArea.getLeapMonth();  [CE]  cannot  find  symbol  dataArea  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  dataArea.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  dataArea.getLeapMonth();	  int    iLeapMonth    =    hiChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  dataArea	291	None	replace
810	[BUG]  [BUGGY]  this.dayOfMonth  =  DateTimeFieldType.dayOfMonth()  -  leapMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  this.dayOfMonth  =  DateTimeFieldType.dayOfMonth()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	this.dayOfMonth  =  DateTimeFieldType.dayOfMonth()  -  leapMonth;	  this.dayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	93	None	replace
811	[BUG]  [BUGGY]  this.dayOfMonth  =  dateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  this.dayOfMonth  =  dateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	this.dayOfMonth  =  dateTimeFieldType.dayOfMonth();	  this.dayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	93	None	replace
812	[BUG]  [BUGGY]  this.dayOfMonth  =  DateTimeFieldType.dayOfMonth(),  leapMonth;  [CE]  ';'  expected  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  this.dayOfMonth  =  DateTimeFieldType.dayOfMonth(),  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	this.dayOfMonth  =  DateTimeFieldType.dayOfMonth(),  leapMonth;	  this.dayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  ';'  expected	93	None	replace
813	[BUG]  [BUGGY]  this.dayOfMonth  =  DateTimeFieldType.dayOfMonth()  +  leapMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  this.dayOfMonth  =  DateTimeFieldType.dayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	this.dayOfMonth  =  DateTimeFieldType.dayOfMonth()  +  leapMonth;	  this.dayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	93	None	replace
814	[BUG]  [BUGGY]  this.dayOfMonth  =  DateTimeFieldType.dayOfMonth()  -  1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  this.dayOfMonth  =  DateTimeFieldType.dayOfMonth()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	this.dayOfMonth  =  DateTimeFieldType.dayOfMonth()  -  1;	  this.dayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	93	None	replace
815	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  *  leapMonth  +  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  *  leapMonth  +  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  *  leapMonth  +  1;	  iChronology    =    chronology.dayOfMonth()    *    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	112	None	replace
816	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  *  leapMonth  +  2;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  *  leapMonth  +  2;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  *  leapMonth  +  2;	  iChronology    =    chronology.dayOfMonth()    *    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	112	None	replace
817	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfYear()  *  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfYear()  *  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfYear()  *  leapMonth;	  iChronology    =    chronology.dayOfMonth()    *    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	112	None	replace
818	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  *  leapMonth  +  31;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  *  leapMonth  +  31;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  *  leapMonth  +  31;	  iChronology    =    chronology.dayOfMonth()    *    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	112	None	replace
819	[BUG]  [BUGGY]  iMonth  =  chronology.getdayOfMonth();  [CE]  cannot  find  symbol  iMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getdayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getdayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getdayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMonth	46	None	replace
820	[BUG]  [BUGGY]  iMonth  =  chronology.getDAYOfMonth();  [CE]  cannot  find  symbol  iMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getDAYOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getDAYOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getdayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMonth	46	None	replace
821	[BUG]  [BUGGY]  int  iMonth  =  chronology.getDayOfMonth();  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMonth  =  chronology.getDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getdayOfMonth();    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	46	None	replace
822	[BUG]  [BUGGY]  int  iMonth  =  chronology.getdayOfMonth();  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMonth  =  chronology.getdayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMonth  =  chronology.getdayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getdayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
823	[BUG]  [BUGGY]  iMonth  =  chronology.getDateOfYear();  [CE]  cannot  find  symbol  iMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getDateOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getDateOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getdayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMonth	46	None	replace
824	[BUG]  [BUGGY]  iMonth  =  chronology.getJoinOfYear();  [CE]  cannot  find  symbol  iMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getJoinOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getJoinOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getdayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMonth	46	None	replace
825	[BUG]  [BUGGY]  iMonth  =  chronology.getYearOfMonth();  [CE]  cannot  find  symbol  iMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getYearOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getYearOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getdayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMonth	46	None	replace
826	[BUG]  [BUGGY]  iMonth  =  chronology.getDateOfMonth();  [CE]  cannot  find  symbol  iMonth  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getDateOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getDateOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getdayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMonth	46	None	replace
827	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  +  1;  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth()  +  1;	  int    iLeapMonth    =    iChronology.getLeapMonth()    +    1;    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
828	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  /  1;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  /  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth()  /  1;	  int    iLeapMonth    =    iChronology.getLeapMonth()    +    1;    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
829	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  *  1;  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  *  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth()  *  1;	  int    iLeapMonth    =    iChronology.getLeapMonth()    +    1;    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
830	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  +  2;  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  +  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth()  +  2;	  int    iLeapMonth    =    iChronology.getLeapMonth()    +    1;    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
831	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getLeapMonth()  +  1;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getLeapMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getLeapMonth()  +  1;	  int    iLeapMonth    =    iChronology.getLeapMonth()    +    1;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	217	None	replace
832	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  31);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  31);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  31);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    30);    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
833	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  30,  leapMonth);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  30,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  30,  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    30);    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
834	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  40);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  40);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  40);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    30);    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
835	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  50);  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  50);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  50);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    30);    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
836	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  29);  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  29);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  29);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    30);    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
837	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  60);  [CE]  cannot  find  symbol  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  60);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  60);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    30);    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
838	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  30  +  leapMonth);  [CE]  cannot  find  symbol  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  30  +  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  30  +  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    30);    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
839	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getDayOfMon  [CE]  ';'  expected  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getDayOfMon  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getDayOfMon	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMon    	non-compiled	[CE]  ';'  expected	13	None	replace
840	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMon  [CE]  ';'  expected  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMon  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMon	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMon    	non-compiled	[CE]  ';'  expected	13	None	replace
841	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  break;  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  break;  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  break;  }	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMon    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	13	None	replace
842	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  jumpMonth  =  chronology.getDayOfMon  [CE]  ';'  expected  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  jumpMonth  =  chronology.getDayOfMon  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  jumpMonth  =  chronology.getDayOfMon	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMon    	non-compiled	[CE]  ';'  expected	13	None	replace
843	[BUG]  [BUGGY]  int  min  =  this.dayOfMonth.getMaxYear();  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  this.dayOfMonth.getMaxYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  this.dayOfMonth.getMaxYear();	  int    min    =    iChronology.getMaxYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	123	None	replace
844	[BUG]  [BUGGY]  int  min  =  this.iChronology.getMaxYear();  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  this.iChronology.getMaxYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  this.iChronology.getMaxYear();	  int    min    =    iChronology.getMaxYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	123	None	replace
845	[BUG]  [BUGGY]  int  min  =  this.chronology.getMaxYear();  [CE]  cannot  find  symbol  chronology  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  this.chronology.getMaxYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  this.chronology.getMaxYear();	  int    min    =    iChronology.getMaxYear();    	non-compiled	[CE]  cannot  find  symbol  chronology	123	None	replace
846	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.hourOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.hourOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.hourOfMonth(),  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
847	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMillis(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMillis(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMillis(),  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
848	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfWeek(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfWeek(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfWeek(),  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
849	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMONTH(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMONTH(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMONTH(),  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    pointOfMonth);    	non-compiled	[CE]  cannot  find  symbol	303	None	replace
850	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapmonth);  [CE]  cannot  find  symbol  leapmonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapmonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapmonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    pointOfMonth);    	non-compiled	[CE]  cannot  find  symbol  leapmonth	303	None	replace
851	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  MIN,  iLeapMonth);  [CE]  cannot  find  symbol  DateTimeZone  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  MIN,  iLeapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  MIN,  iLeapMonth);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	164	None	replace
852	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  MIN,  dayOfMonth);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  MIN,  dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  MIN,  dayOfMonth);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	164	None	replace
853	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  MIN  +  1);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  MIN  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  MIN  +  1);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	164	None	replace
854	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  MIN,  1);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  MIN,  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  MIN,  1);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	164	None	replace
855	[BUG]  [BUGGY]  iMin  =  chronology.getMaxMonth();  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMaxMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMaxMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMaxMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	250	None	replace
856	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinimumDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinimumDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinimumDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMaxMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	250	None	replace
857	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMaxMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMaxMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMaxMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMaxMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	250	None	replace
858	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinimumMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinimumMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinimumMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMaxMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	250	None	replace
859	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinWeekOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinWeekOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinWeekOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMaxMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	250	None	replace
860	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinute();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinute();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinute();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMaxMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	250	None	replace
861	[BUG]  [BUGGY]  iFieldMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  not  a  statement  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iFieldMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iFieldMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth!=    chronology.getDayOfMonth())    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  not  a  statement	272	None	replace
862	[BUG]  [BUGGY]  iFieldMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  not  a  statement  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iFieldMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iFieldMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();	  if(iDayOfMonth!=    chronology.getDayOfMonth())    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  not  a  statement	272	None	replace
863	[BUG]  [BUGGY]  iFieldMonth!=  chronology.getDayOfMonth())  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  not  a  statement  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iFieldMonth!=  chronology.getDayOfMonth())  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iFieldMonth!=  chronology.getDayOfMonth())  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth!=    chronology.getDayOfMonth())    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  not  a  statement	272	None	replace
864	[BUG]  [BUGGY]  iFieldMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  [CE]  not  a  statement  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iFieldMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iFieldMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);	  if(iDayOfMonth!=    chronology.getDayOfMonth())    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  not  a  statement	272	None	replace
865	[BUG]  [BUGGY]  iFieldMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iTagOfMonth  =  chronology.getDayOfMonth();  }  [CE]  not  a  statement  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iFieldMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iTagOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iFieldMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iTagOfMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth!=    chronology.getDayOfMonth())    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  not  a  statement	272	None	replace
866	[BUG]  [BUGGY]  iMin  =  this.chronology.getMinYear()  +  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  this.chronology.getMinYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  this.chronology.getMinYear()  +  leapMonth;	  iMin    =    this.chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	214	None	replace
867	[BUG]  [BUGGY]  iMin  =  (this.chronology!=  null)?  this.chronology.getMinYear()  :  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  (this.chronology!=  null)?  this.chronology.getMinYear()  :  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  (this.chronology!=  null)?  this.chronology.getMinYear()  :  leapMonth;	  iMin    =    this.chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	214	None	replace
868	[BUG]  [BUGGY]  int  iMin  =  this.chronology.getMinYear();  [CE]  cannot  find  symbol  chronology  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  this.chronology.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  this.chronology.getMinYear();	  iMin    =    this.chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  chronology	214	None	replace
869	[BUG]  [BUGGY]  iMin  =  (this.chronology!=  null)?  this.chronology.getMinYear()  :  1;  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  (this.chronology!=  null)?  this.chronology.getMinYear()  :  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  (this.chronology!=  null)?  this.chronology.getMinYear()  :  1;	  iMin    =    this.chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	214	None	replace
870	[BUG]  [BUGGY]  iMin  =  this.chronology.getMaxYear();  [CE]  cannot  find  symbol  iMin  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  this.chronology.getMaxYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  this.chronology.getMaxYear();	  iMin    =    this.chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	214	None	replace
871	[BUG]  [BUGGY]  iMin  =  this.chronology.getMinYear()  +  1;  [CE]  cannot  find  symbol  iMin  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  this.chronology.getMinYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  this.chronology.getMinYear()  +  1;	  iMin    =    this.chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	214	None	replace
872	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  3);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  3);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  3);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth    +    2);    	non-compiled	[CE]  cannot  find  symbol	242	None	replace
873	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  4);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  4);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  4);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth    +    2);    	non-compiled	[CE]  cannot  find  symbol	242	None	replace
874	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  31);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  31);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  31);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth    +    2);    	non-compiled	[CE]  cannot  find  symbol	242	None	replace
875	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  *  2);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  *  2);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  *  2);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth    +    2);    	non-compiled	[CE]  cannot  find  symbol	242	None	replace
876	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  2  -  leapMonth);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  2  -  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  2  -  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth    +    2);    	non-compiled	[CE]  cannot  find  symbol	242	None	replace
877	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  5);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  5);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  5);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth    +    2);    	non-compiled	[CE]  cannot  find  symbol	242	None	replace
878	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  2  -  1);  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  2  -  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  2  -  1);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth    +    2);    	non-compiled	[CE]  cannot  find  symbol	242	None	replace
879	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DEFAULT_TIME_MONTH,  leapMonth);  [CE]  cannot  find  symbol  DEFAULT_TIME_MONTH  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DEFAULT_TIME_MONTH,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DEFAULT_TIME_MONTH,  leapMonth);	  iChronology    =    chronology.getInstance(DEFAULT_TIME_MONTH);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TIME_MONTH	300	None	replace
880	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(SHORT_TIME_MONTH);  [CE]  cannot  find  symbol  SHORT_TIME_MONTH  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(SHORT_TIME_MONTH);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(SHORT_TIME_MONTH);	  iChronology    =    chronology.getInstance(DEFAULT_TIME_MONTH);    	non-compiled	[CE]  cannot  find  symbol  SHORT_TIME_MONTH	300	None	replace
881	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth.getZone());  [CE]  int  cannot  be  dereferenced  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth.getZone());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth.getZone());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getZone());    	non-compiled	[CE]  int  cannot  be  dereferenced	306	None	replace
882	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth).getZone());  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth).getZone());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth).getZone());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getZone());    	non-compiled	[CE]  ';'  expected	306	None	replace
883	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth.getZone());  [CE]  cannot  find  symbol  jumpMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth.getZone());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth.getZone());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getZone());    	non-compiled	[CE]  cannot  find  symbol  jumpMonth	306	None	replace
884	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonths.getZone());  [CE]  cannot  find  symbol  leapMonths  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonths.getZone());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonths.getZone());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getZone());    	non-compiled	[CE]  cannot  find  symbol  leapMonths	306	None	replace
885	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapYear.getZone());  [CE]  cannot  find  symbol  leapYear  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapYear.getZone());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapYear.getZone());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getZone());    	non-compiled	[CE]  cannot  find  symbol  leapYear	306	None	replace
886	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth).getZone();  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth).getZone();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth).getZone();	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getZone());    	non-compiled	[CE]  cannot  find  symbol	306	None	replace
887	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.dayOfMonth();  [CE]  incompatible  types  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.dayOfMonth();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()?  null  :  chronology.dayOfMonth();	  iChronology    =    chronology.withUTC()?    null    :    chronology.withUTC();    	non-compiled	[CE]  incompatible  types	50	None	replace
888	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC()  +  leapMonth;  [CE]  incompatible  types  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC()  +  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC()  +  leapMonth;	  iChronology    =    chronology.withUTC()?    null    :    chronology.withUTC();    	non-compiled	[CE]  incompatible  types	50	None	replace
889	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.withoutUTC();  [CE]  incompatible  types  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.withoutUTC();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()?  null  :  chronology.withoutUTC();	  iChronology    =    chronology.withUTC()?    null    :    chronology.withUTC();    	non-compiled	[CE]  incompatible  types	50	None	replace
890	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(switchMonth);  [CE]  incompatible  types  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(switchMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(switchMonth);	  iChronology    =    chronology.withUTC()?    null    :    chronology.withUTC();    	non-compiled	[CE]  incompatible  types	50	None	replace
891	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(),  leapMonth;  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(),  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(),  leapMonth;	  iChronology    =    chronology.withUTC()?    null    :    chronology.withUTC();    	non-compiled	[CE]  ';'  expected	50	None	replace
892	[BUG]  [BUGGY]  iChronology  =  chronology.withoutUTC()?  null  :  chronology.withUTC();  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withoutUTC()?  null  :  chronology.withUTC();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withoutUTC()?  null  :  chronology.withUTC();	  iChronology    =    chronology.withUTC()?    null    :    chronology.withUTC();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
893	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(stackMonth);  [CE]  incompatible  types  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(stackMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(stackMonth);	  iChronology    =    chronology.withUTC()?    null    :    chronology.withUTC();    	non-compiled	[CE]  incompatible  types	50	None	replace
894	[BUG]  [BUGGY]  DayOfMonth  dayOfMonth  =  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  DayOfMonth  dayOfMonth  =  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	DayOfMonth  dayOfMonth  =  DateTimeFieldType.dayOfMonth();	  dayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
895	[BUG]  [BUGGY]  DayOfMonth  =  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  DayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  DayOfMonth  =  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	DayOfMonth  =  DateTimeFieldType.dayOfMonth();	  dayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  DayOfMonth	94	None	replace
896	[BUG]  [BUGGY]  DayOfMonth  idayOfMonth  =  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  DayOfMonth  idayOfMonth  =  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	DayOfMonth  idayOfMonth  =  DateTimeFieldType.dayOfMonth();	  dayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
897	[BUG]  [BUGGY]  hourOfMonth  =  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  hourOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  hourOfMonth  =  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	hourOfMonth  =  DateTimeFieldType.dayOfMonth();	  dayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  hourOfMonth	94	None	replace
898	[BUG]  [BUGGY]  iMonth  =  iChronology.getMonthOfYear();  [CE]  cannot  find  symbol  iMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  iChronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  iChronology.getMonthOfYear();	  iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMonth	40	None	replace
899	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  minute);  [CE]  cannot  find  symbol  minute  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  minute);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  minute);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMONTth);    	non-compiled	[CE]  cannot  find  symbol  minute	243	None	replace
900	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  min);  [CE]  cannot  find  symbol  min  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  min);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  min);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMONTth);    	non-compiled	[CE]  cannot  find  symbol  min	243	None	replace
901	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	233	None	replace
902	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  [CE]  illegal  start  of  expression  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	233	None	replace
903	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  [CE]  illegal  start  of  expression  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	233	None	replace
904	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOf  [CE]  illegal  start  of  expression  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOf  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOf	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	233	None	replace
905	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMon  [CE]  illegal  start  of  expression  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMon  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMon	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	233	None	replace
906	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth()  [CE]  ';'  expected  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth()	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  ';'  expected	233	None	replace
907	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDay  [CE]  illegal  start  of  expression  [FE]                                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDay  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDay	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	233	None	replace
908	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.  [CE]  illegal  start  of  expression  [FE]                                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	233	None	replace
909	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getYearMonth();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getYearMonth();	  int    leapMonth    =    iChronology.getYearMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	238	None	replace
910	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getYearMonth()  +  leapMonth;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getYearMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getYearMonth()  +  leapMonth;	  int    leapMonth    =    iChronology.getYearMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	238	None	replace
911	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDaysInYearMonth();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDaysInYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDaysInYearMonth();	  int    leapMonth    =    iChronology.getYearMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	238	None	replace
912	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  *  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  *  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  *  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear()    +    1;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	251	None	replace
913	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  /  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  /  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  /  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear()    +    1;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	251	None	replace
914	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getMinYear();  iMin  =  chronology.getMinYear()  +  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getMinYear();  iMin  =  chronology.getMinYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getMinYear();  iMin  =  chronology.getMinYear()  +  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear()    +    1;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	251	None	replace
915	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  -  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  -  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear()    +    1;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	251	None	replace
916	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  1  +  1);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  1  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  1  +  1);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	165	None	replace
917	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth;	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	244	None	replace
918	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withUTC();	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	244	None	replace
919	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  2;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  2;	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	244	None	replace
920	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth;	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	244	None	replace
921	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  -  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  -  leapMonth;	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	244	None	replace
922	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  10;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  10;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  10;	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	244	None	replace
923	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  2.0;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  2.0;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  2.0;	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	244	None	replace
924	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(false,  leapMonth);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(false,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(false,  leapMonth);	  iChronology    =    chronology.getBasicChronology(false);    	non-compiled	[CE]  cannot  find  symbol	226	None	replace
925	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(false,  null);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(false,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(false,  null);	  iChronology    =    chronology.getBasicChronology(false);    	non-compiled	[CE]  cannot  find  symbol	226	None	replace
926	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(false,  false);  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(false,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(false,  false);	  iChronology    =    chronology.getBasicChronology(false);    	non-compiled	[CE]  cannot  find  symbol	226	None	replace
927	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  false);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  false);	  iChronology    =    chronology.getBasicChronology(false);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	226	None	replace
928	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.dayOfMonth()  +  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.dayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.dayOfMonth()  +  leapMonth;	  iLeapMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	3	None	replace
929	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.dayOfMonth()  -  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.dayOfMonth()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.dayOfMonth()  -  leapMonth;	  iLeapMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	3	None	replace
930	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth  +  iChronology.dayOfMonth();  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth  +  iChronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth  +  iChronology.dayOfMonth();	  iLeapMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	3	None	replace
931	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.dayOfMonth()  *  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.dayOfMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.dayOfMonth()  *  leapMonth;	  iLeapMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	3	None	replace
932	[BUG]  [BUGGY]  iLeapMonth  =  chronology.dayOfMonth();  [CE]  incompatible  types  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  chronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  chronology.dayOfMonth();	  iLeapMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  incompatible  types	3	None	replace
933	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.dayOfMonth(),  leapMonth;  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.dayOfMonth(),  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.dayOfMonth(),  leapMonth;	  iLeapMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  ';'  expected	3	None	replace
934	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.dayOfMonth()  /  2;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.dayOfMonth()  /  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.dayOfMonth()  /  2;	  iLeapMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	3	None	replace
935	[BUG]  [BUGGY]  iMonth  =  Chronology.getMonthOfYear();  [CE]  cannot  find  symbol  iMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  Chronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  Chronology.getMonthOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMonth	270	None	replace
936	[BUG]  [BUGGY]  iMin  =  chronology.getMinWeekMonth()  +  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinWeekMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinWeekMonth()  +  leapMonth;	  iMin    =    chronology.getMinWeekMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	151	None	replace
937	[BUG]  [BUGGY]  iMin  =  chronology.getMaxWeekMonth();  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMaxWeekMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMaxWeekMonth();	  iMin    =    chronology.getMinWeekMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	151	None	replace
938	[BUG]  [BUGGY]  iMin  =  chronology.getMinWeekYear();  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinWeekYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinWeekYear();	  iMin    =    chronology.getMinWeekMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	151	None	replace
939	[BUG]  [BUGGY]  int  iMin  =  chronology.getMinWeekMonth();  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  chronology.getMinWeekMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  chronology.getMinWeekMonth();	  iMin    =    chronology.getMinWeekMonth();    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
940	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(null,  leapMonth);  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(null,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(null,  leapMonth);	  iChronology    =    chronology.getBasicChronology(null);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
941	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(new  BasicChronology[]  {  null  }  );  [CE]  cannot  find  symbol  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(new  BasicChronology[]  {  null  }  );  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(new  BasicChronology[]  {  null  }  );	  iChronology    =    chronology.getBasicChronology(null);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
942	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(iFieldType,  null);  [CE]  cannot  find  symbol  iFieldType  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(iFieldType,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(iFieldType,  null);	  iChronology    =    chronology.getBasicChronology(null);    	non-compiled	[CE]  cannot  find  symbol  iFieldType	23	None	replace
943	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  -  1;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth()  -  1;	  int    iLeapMonth    =    iChronology.getLeapMonth()    -    1;    	non-compiled	[CE]  cannot  find  symbol	218	None	replace
944	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getLeapMonth()  -  1;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getLeapMonth()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getLeapMonth()  -  1;	  int    iLeapMonth    =    iChronology.getLeapMonth()    -    1;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	218	None	replace
945	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  -  1;  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  -  1;	  int    iLeapMonth    =    iChronology.getLeapMonth()    -    1;    	non-compiled	[CE]  cannot  find  symbol	218	None	replace
946	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth()  -  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.dayOfMonth()  -  1;	  int    iLeapMonth    =    iChronology.getLeapMonth()    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	218	None	replace
947	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  40,  MIN);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  40,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  40,  MIN);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    40);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	171	None	replace
948	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  40,  dayOfMonth);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  40,  dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  40,  dayOfMonth);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    40);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	171	None	replace
949	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  40,  30);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  40,  30);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  40,  30);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    40);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	171	None	replace
950	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  60);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  60);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  60);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    40);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	171	None	replace
951	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  40,  1);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  40,  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  40,  1);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    40);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	171	None	replace
952	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  29);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  29);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  29);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    40);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	171	None	replace
953	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.millisOfDay(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.millisOfDay(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.millisOfDay(),  leapMonth);	  iChronology    =    chronology.getInstance(this.millisOfDay());    	non-compiled	[CE]  cannot  find  symbol	259	None	replace
954	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this,  leapMonth,  this.millisOfDay());  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this,  leapMonth,  this.millisOfDay());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this,  leapMonth,  this.millisOfDay());	  iChronology    =    chronology.getInstance(this.millisOfDay());    	non-compiled	[CE]  cannot  find  symbol	259	None	replace
955	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.millisOfYear());  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.millisOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.millisOfYear());	  iChronology    =    chronology.getInstance(this.millisOfDay());    	non-compiled	[CE]  cannot  find  symbol	259	None	replace
956	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.millisOfDay()  +  leapMonth);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.millisOfDay()  +  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.millisOfDay()  +  leapMonth);	  iChronology    =    chronology.getInstance(this.millisOfDay());    	non-compiled	[CE]  cannot  find  symbol	259	None	replace
957	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this,  this.millisOfDay());  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this,  this.millisOfDay());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this,  this.millisOfDay());	  iChronology    =    chronology.getInstance(this.millisOfDay());    	non-compiled	[CE]  cannot  find  symbol	259	None	replace
958	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(dayOfMonth,  this.millisOfDay());  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(dayOfMonth,  this.millisOfDay());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(dayOfMonth,  this.millisOfDay());	  iChronology    =    chronology.getInstance(this.millisOfDay());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	259	None	replace
959	[BUG]  [BUGGY]  int  iLeapMonth  =  this.dayOfMonth.getLeapMonth();  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  this.dayOfMonth.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  this.dayOfMonth.getLeapMonth();	  int    iLeapMonth    =    leapMonth.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	128	None	replace
960	[BUG]  [BUGGY]  int  iLeapMonth  =  leapMonth.getLeapMonth()  +  1;  [CE]  int  cannot  be  dereferenced  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  leapMonth.getLeapMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  leapMonth.getLeapMonth()  +  1;	  int    iLeapMonth    =    leapMonth.getLeapMonth();    	non-compiled	[CE]  int  cannot  be  dereferenced	128	None	replace
961	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(stackMonth);  [CE]  cannot  find  symbol  stackMonth  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(stackMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth(stackMonth);	  int    iLeapMonth    =    leapMonth.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  stackMonth	128	None	replace
962	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(iLeapMonth);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(iLeapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(iLeapMonth);	  iChronology    =    chronology.getBasicChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
963	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(iMax);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(iMax);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(iMax);	  iChronology    =    chronology.getBasicChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
964	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(iMin);  [CE]  cannot  find  symbol  iMin  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(iMin);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(iMin);	  iChronology    =    chronology.getBasicChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	20	None	replace
965	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(iDayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(iDayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(iDayOfMonth);	  iChronology    =    chronology.getBasicChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	20	None	replace
966	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(iFieldType);  [CE]  cannot  find  symbol  iFieldType  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(iFieldType);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(iFieldType);	  iChronology    =    chronology.getBasicChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iFieldType	20	None	replace
967	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(iMonth);  [CE]  cannot  find  symbol  iMonth  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(iMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(iMonth);	  iChronology    =    chronology.getBasicChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMonth	20	None	replace
968	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(stackMonth);  [CE]  cannot  find  symbol  stackMonth  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(stackMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(stackMonth);	  iChronology    =    chronology.getBasicChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  stackMonth	20	None	replace
969	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(iStart);  [CE]  cannot  find  symbol  iStart  [FE]                                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(iStart);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(iStart);	  iChronology    =    chronology.getBasicChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iStart	20	None	replace
970	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(iHeapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(iHeapMonth);	  iChronology    =    chronology.getBasicChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	20	None	replace
971	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear()  *  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear()  *  leapMonth;	  iMin    =    iChronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iMin	56	None	replace
972	[BUG]  [BUGGY]  iMin  =  chronology.getMaxYear()  +  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMaxYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMaxYear()  +  leapMonth;	  iMin    =    iChronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iMin	56	None	replace
973	[BUG]  [BUGGY]  iMax  =  iChronology.getMinYear()  +  leapMonth;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMax  =  iChronology.getMinYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMax  =  iChronology.getMinYear()  +  leapMonth;	  iMin    =    iChronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	56	None	replace
974	[BUG]  [BUGGY]  int  iMin  =  chronology.getMinYear()  +  leapMonth;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  chronology.getMinYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  chronology.getMinYear()  +  leapMonth;	  iMin    =    iChronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	56	None	replace
975	[BUG]  [BUGGY]  iMax  =  chronology.getMinYear()  +  leapMonth;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMax  =  chronology.getMinYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMax  =  chronology.getMinYear()  +  leapMonth;	  iMin    =    iChronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	56	None	replace
976	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  true);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  true);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    false);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	170	None	replace
977	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false,  chronology.dayOfMonth);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false,  chronology.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false,  chronology.dayOfMonth);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    false);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	170	None	replace
978	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false,  chronology);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false,  chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false,  chronology);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    false);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	170	None	replace
979	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  null);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  null);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    false);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	170	None	replace
980	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false,  null);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false,  null);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    false);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	170	None	replace
981	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false,  true);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false,  true);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    false);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	170	None	replace
982	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  Boolean.TRUE);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  Boolean.TRUE);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  Boolean.TRUE);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    false);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	170	None	replace
983	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false,  chronology.dayOfMonth());  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false,  chronology.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false,  chronology.dayOfMonth());	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    false);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	170	None	replace
984	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear()  *  1;  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear()  *  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear()  *  1;	  iMin    =    iChronology.getMinYear()    +    1;    	non-compiled	[CE]  cannot  find  symbol  iMin	247	None	replace
985	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear()  +  2;  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear()  +  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear()  +  2;	  iMin    =    iChronology.getMinYear()    +    1;    	non-compiled	[CE]  cannot  find  symbol  iMin	247	None	replace
986	[BUG]  [BUGGY]  iMin  =  iChronology.getMaxYear()  +  1;  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMaxYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMaxYear()  +  1;	  iMin    =    iChronology.getMinYear()    +    1;    	non-compiled	[CE]  cannot  find  symbol  iMin	247	None	replace
987	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear()  *  leapMonth  +  1;  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear()  *  leapMonth  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear()  *  leapMonth  +  1;	  iMin    =    iChronology.getMinYear()    +    1;    	non-compiled	[CE]  cannot  find  symbol  iMin	247	None	replace
988	[BUG]  [BUGGY]  int  iLeapMonth  =  this.chronology.getLeapMonth()  +  leapMonth;  [CE]  cannot  find  symbol  chronology  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  this.chronology.getLeapMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  this.chronology.getLeapMonth()  +  leapMonth;	  int    iLeapMonth    =    this.chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  chronology	125	None	replace
989	[BUG]  [BUGGY]  int  iLeapMonth  =  this.chronology.getLeapMonth()  -  leapMonth;  [CE]  cannot  find  symbol  chronology  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  this.chronology.getLeapMonth()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  this.chronology.getLeapMonth()  -  leapMonth;	  int    iLeapMonth    =    this.chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  chronology	125	None	replace
990	[BUG]  [BUGGY]  int  iLeapMonth  =  this.chronology.getLeapMonth()  +  1;  [CE]  cannot  find  symbol  chronology  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  this.chronology.getLeapMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  this.chronology.getLeapMonth()  +  1;	  int    iLeapMonth    =    this.chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  chronology	125	None	replace
991	[BUG]  [BUGGY]  int  iLeapMonth  =  this.chronology.dayOfMonth();  [CE]  cannot  find  symbol  chronology  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  this.chronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  this.chronology.dayOfMonth();	  int    iLeapMonth    =    this.chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  chronology	125	None	replace
992	[BUG]  [BUGGY]  int  iLeapMonth  =  this.chronology.getLeapMonth(this.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  this.chronology.getLeapMonth(this.dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  this.chronology.getLeapMonth(this.dayOfMonth);	  int    iLeapMonth    =    this.chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	125	None	replace
993	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  false);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  false);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
994	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  2);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  2);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  2);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
995	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfYear(),  leapMonth;  [CE]  ')'  expected  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfYear(),  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfYear(),  leapMonth;	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth;    	non-compiled	[CE]  ')'  expected	81	None	replace
996	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth()  -  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.dayOfMonth()  -  leapMonth;	  int    iLeapMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	104	None	replace
997	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth()  +  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.dayOfMonth()  +  leapMonth;	  int    iLeapMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	104	None	replace
998	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth(),  leapMonth;  [CE]  incompatible  types  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth(),  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.dayOfMonth(),  leapMonth;	  int    iLeapMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  incompatible  types	104	None	replace
999	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth()  *  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.dayOfMonth()  *  leapMonth;	  int    iLeapMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	104	None	replace
1000	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth()  /  2;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth()  /  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.dayOfMonth()  /  2;	  int    iLeapMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	104	None	replace
1001	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth(),  leapMonth);  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth(),  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.dayOfMonth(),  leapMonth);	  int    iLeapMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  ';'  expected	104	None	replace
1002	[BUG]  [BUGGY]  iMonth  =  chronology.getMonthOfYear()  *  leapMonth;  [CE]  cannot  find  symbol  iMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMonthOfYear()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonthOfYear()  *  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iMonth	47	None	replace
1003	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  /  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  /  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  /  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    *    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	47	None	replace
1004	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getMonthOfYear()  *  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getMonthOfYear()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getMonthOfYear()  *  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    *    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	47	None	replace
1005	[BUG]  [BUGGY]  int  iMonth  =  chronology.getMonthOfYear()  *  leapMonth;  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMonth  =  chronology.getMonthOfYear()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMonth  =  chronology.getMonthOfYear()  *  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    *    leapMonth;    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	47	None	replace
1006	[BUG]  [BUGGY]  iFieldMonth  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  cannot  find  symbol  iFieldMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iFieldMonth  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iFieldMonth  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iFieldMonth	10	None	replace
1007	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfYear  =  chronology.getDayOfYear();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfYear  =  chronology.getDayOfYear();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfYear  =  chronology.getDayOfYear();  }	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	10	None	replace
1008	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfYear();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfYear();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfYear();  }	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	10	None	replace
1009	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMONTH  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMONTH  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMONTH  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	10	None	replace
1010	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayofMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayofMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayofMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	10	None	replace
1011	[BUG]  [BUGGY]  iMin  =  0,  iChronology.getMinYear()  +  leapMonth;  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  0,  iChronology.getMinYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  0,  iChronology.getMinYear()  +  leapMonth;	  iMin    =    0,    iChronology.getMinYear();    	non-compiled	[CE]  ';'  expected	248	None	replace
1012	[BUG]  [BUGGY]  iMin  =  0,  iChronology.getMinYear()  +  1;  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  0,  iChronology.getMinYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  0,  iChronology.getMinYear()  +  1;	  iMin    =    0,    iChronology.getMinYear();    	non-compiled	[CE]  ';'  expected	248	None	replace
1013	[BUG]  [BUGGY]  iMin  =  0,  iChronology.getMinYear()  -  1;  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  0,  iChronology.getMinYear()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  0,  iChronology.getMinYear()  -  1;	  iMin    =    0,    iChronology.getMinYear();    	non-compiled	[CE]  ';'  expected	248	None	replace
1014	[BUG]  [BUGGY]  iMin  =  0,  iChronology.getMaxYear();  [CE]  ';'  expected  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  0,  iChronology.getMaxYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  0,  iChronology.getMaxYear();	  iMin    =    0,    iChronology.getMinYear();    	non-compiled	[CE]  ';'  expected	248	None	replace
1015	[BUG]  [BUGGY]  iMin  =  1,  iChronology.getMinYear();  [CE]  ';'  expected  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  1,  iChronology.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  1,  iChronology.getMinYear();	  iMin    =    0,    iChronology.getMinYear();    	non-compiled	[CE]  ';'  expected	248	None	replace
1016	[BUG]  [BUGGY]  iMin  =  0,  iChronology.getMinDayOfMonth();  [CE]  ';'  expected  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  0,  iChronology.getMinDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  0,  iChronology.getMinDayOfMonth();	  iMin    =    0,    iChronology.getMinYear();    	non-compiled	[CE]  ';'  expected	248	None	replace
1017	[BUG]  [BUGGY]  iMin  =  0,  iChronology.getMinYear()  *  leapMonth;  [CE]  ';'  expected  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  0,  iChronology.getMinYear()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  0,  iChronology.getMinYear()  *  leapMonth;	  iMin    =    0,    iChronology.getMinYear();    	non-compiled	[CE]  ';'  expected	248	None	replace
1018	[BUG]  [BUGGY]  iMin  =  0,  iChronology.getMinYear()  *  2;  [CE]  ';'  expected  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  0,  iChronology.getMinYear()  *  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  0,  iChronology.getMinYear()  *  2;	  iMin    =    0,    iChronology.getMinYear();    	non-compiled	[CE]  ';'  expected	248	None	replace
1019	[BUG]  [BUGGY]  iMin  =  chronology.getMinYearMonth()  +  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYearMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYearMonth()  +  leapMonth;	  iMin    =    chronology.getMinYearMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	148	None	replace
1020	[BUG]  [BUGGY]  iMin  =  chronology.getMaxYearMonth();  [CE]  cannot  find  symbol  iMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMaxYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMaxYearMonth();	  iMin    =    chronology.getMinYearMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	148	None	replace
1021	[BUG]  [BUGGY]  iChronology  =  iChronology.getInstance(DateTimeFieldType.dayOfYear());  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  iChronology.getInstance(DateTimeFieldType.dayOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  iChronology.getInstance(DateTimeFieldType.dayOfYear());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfYear());    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
1022	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMONTH());  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMONTH());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMONTH());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfYear());    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
1023	[BUG]  [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfYear());  [CE]  cannot  find  symbol  chronology  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfYear());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfYear());    	non-compiled	[CE]  cannot  find  symbol  chronology	145	None	replace
1024	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.DayOfMonth());  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.DayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.DayOfMonth());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfYear());    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
1025	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.hourOfMonth);  [CE]  cannot  find  symbol  hourOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.hourOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.hourOfMonth);	  iChronology    =    chronology.getBasicChronology(this.hourOfYear);    	non-compiled	[CE]  cannot  find  symbol  hourOfMonth	225	None	replace
1026	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.hourOfYear);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.hourOfYear);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.hourOfYear);	  iChronology    =    chronology.getBasicChronology(this.hourOfYear);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	225	None	replace
1027	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.hour);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.hour);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.hour);	  iChronology    =    chronology.getBasicChronology(this.hourOfYear);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	225	None	replace
1028	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.hourOfYear,  leapMonth);  [CE]  cannot  find  symbol  hourOfYear  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.hourOfYear,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.hourOfYear,  leapMonth);	  iChronology    =    chronology.getBasicChronology(this.hourOfYear);    	non-compiled	[CE]  cannot  find  symbol  hourOfYear	225	None	replace
1029	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  this.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  this.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this,  this.dayOfMonth);	  iChronology    =    chronology.getBasicChronology(this.hourOfYear);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	225	None	replace
1030	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.weekOfMonth);  [CE]  cannot  find  symbol  weekOfMonth  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.weekOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.weekOfMonth);	  iChronology    =    chronology.getBasicChronology(this.hourOfYear);    	non-compiled	[CE]  cannot  find  symbol  weekOfMonth	225	None	replace
1031	[BUG]  [BUGGY]  iField  =  chronology.dayOfMonth();  [CE]  cannot  find  symbol  iField  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  chronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  chronology.dayOfMonth();	  iField    =    dateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iField	92	None	replace
1032	[BUG]  [BUGGY]  iField  =  iChronology.dayOfMonth();  [CE]  cannot  find  symbol  iField  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  iChronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  iChronology.dayOfMonth();	  iField    =    dateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iField	92	None	replace
1033	[BUG]  [BUGGY]  iField  =  type.dayOfMonth();  [CE]  cannot  find  symbol  iField  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  type.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  type.dayOfMonth();	  iField    =    dateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iField	92	None	replace
1034	[BUG]  [BUGGY]  iField  =  dataTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  iField  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  dataTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  dataTimeFieldType.dayOfMonth();	  iField    =    dateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iField	92	None	replace
1035	[BUG]  [BUGGY]  iMin  =  chronology.getMinInt()  +  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinInt()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinInt()  +  leapMonth;	  iMin    =    chronology.getMinInt();    	non-compiled	[CE]  cannot  find  symbol  iMin	150	None	replace
1036	[BUG]  [BUGGY]  int  iMin  =  chronology.getMinInt();  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  chronology.getMinInt();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  chronology.getMinInt();	  iMin    =    chronology.getMinInt();    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
1037	[BUG]  [BUGGY]  iMin  =  chronology.getMaxInt();  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMaxInt();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMaxInt();	  iMin    =    chronology.getMinInt();    	non-compiled	[CE]  cannot  find  symbol  iMin	150	None	replace
1038	[BUG]  [BUGGY]  iMin  =  chronology.getMinWeek();  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinWeek();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinWeek();	  iMin    =    chronology.getMinInt();    	non-compiled	[CE]  cannot  find  symbol  iMin	150	None	replace
1039	[BUG]  [BUGGY]  iMin  =  chronology.getMinint();  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinint();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinint();	  iMin    =    chronology.getMinInt();    	non-compiled	[CE]  cannot  find  symbol  iMin	150	None	replace
1040	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  leapMonth).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  leapMonth).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  leapMonth).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	131	None	replace
1041	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth),  chronology.withUTC();  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth),  chronology.withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth),  chronology.withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth).withUTC();    	non-compiled	[CE]  ';'  expected	131	None	replace
1042	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withZone();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withZone();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withZone();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	131	None	replace
1043	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth)-  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth)-  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth)-  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	131	None	replace
1044	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth,  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.dayOfMonth,  leapMonth);	  iChronology    =    chronology.withUTC(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	201	None	replace
1045	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth  +  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth  +  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.dayOfMonth  +  leapMonth);	  iChronology    =    chronology.withUTC(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	201	None	replace
1046	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfYear);  [CE]  cannot  find  symbol  dayOfYear  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfYear);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.dayOfYear);	  iChronology    =    chronology.withUTC(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfYear	201	None	replace
1047	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth)+  leapMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth)+  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.dayOfMonth)+  leapMonth;	  iChronology    =    chronology.withUTC(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	201	None	replace
1048	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth-1);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth-1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.dayOfMonth-1);	  iChronology    =    chronology.withUTC(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	201	None	replace
1049	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth),  leapMonth);  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.dayOfMonth),  leapMonth);	  iChronology    =    chronology.withUTC(this.dayOfMonth);    	non-compiled	[CE]  ';'  expected	201	None	replace
1050	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth),  leapMonth;  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth),  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.dayOfMonth),  leapMonth;	  iChronology    =    chronology.withUTC(this.dayOfMonth);    	non-compiled	[CE]  ';'  expected	201	None	replace
1051	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  &&  chronology.withUTC();  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  &&  chronology.withUTC();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  &&  chronology.withUTC();	  iChronology    =    chronology.withUTC()    ||    chronology.withUTC();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	313	None	replace
1052	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.withUTC(switchMonth);  [CE]  cannot  find  symbol  switchMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.withUTC(switchMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  ||  chronology.withUTC(switchMonth);	  iChronology    =    chronology.withUTC()    ||    chronology.withUTC();    	non-compiled	[CE]  cannot  find  symbol  switchMonth	313	None	replace
1053	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()?  chronology.withUTC()  :  chronology.withUTC();  [CE]  incompatible  types  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()?  chronology.withUTC()  :  chronology.withUTC();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()?  chronology.withUTC()  :  chronology.withUTC();	  iChronology    =    chronology.withUTC()    ||    chronology.withUTC();    	non-compiled	[CE]  incompatible  types	313	None	replace
1054	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.dayOfMonth();  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.dayOfMonth();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  ||  chronology.dayOfMonth();	  iChronology    =    chronology.withUTC()    ||    chronology.withUTC();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	313	None	replace
1055	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.withUTC(spikeMonth);  [CE]  cannot  find  symbol  spikeMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.withUTC(spikeMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  ||  chronology.withUTC(spikeMonth);	  iChronology    =    chronology.withUTC()    ||    chronology.withUTC();    	non-compiled	[CE]  cannot  find  symbol  spikeMonth	313	None	replace
1056	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  /|  chronology.withUTC();  [CE]  illegal  start  of  expression  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  /|  chronology.withUTC();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  /|  chronology.withUTC();	  iChronology    =    chronology.withUTC()    ||    chronology.withUTC();    	non-compiled	[CE]  illegal  start  of  expression	313	None	replace
1057	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.withUTC(stackMonth);  [CE]  cannot  find  symbol  stackMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.withUTC(stackMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  ||  chronology.withUTC(stackMonth);	  iChronology    =    chronology.withUTC()    ||    chronology.withUTC();    	non-compiled	[CE]  cannot  find  symbol  stackMonth	313	None	replace
1058	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  /  ||  chronology.withUTC();  [CE]  illegal  start  of  expression  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  /  ||  chronology.withUTC();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  /  ||  chronology.withUTC();	  iChronology    =    chronology.withUTC()    ||    chronology.withUTC();    	non-compiled	[CE]  illegal  start  of  expression	313	None	replace
1059	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  31);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  31);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  31);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
1060	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  3);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  3);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  3);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
1061	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  4);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  4);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  4);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
1062	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  5);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  5);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  5);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
1063	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  *  1);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  *  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  *  1);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
1064	[BUG]  [BUGGY]  iMin  =  chronology.getMinMonth()  +  1;  [CE]  cannot  find  symbol  iMin  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinMonth()  +  1;	  iMin    =    iChronology.getMinMonth()    +    1;    	non-compiled	[CE]  cannot  find  symbol  iMin	185	None	replace
1065	[BUG]  [BUGGY]  iMin  =  iChronology.getMinMonth()  *  1;  [CE]  cannot  find  symbol  iMin  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinMonth()  *  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinMonth()  *  1;	  iMin    =    iChronology.getMinMonth()    +    1;    	non-compiled	[CE]  cannot  find  symbol  iMin	185	None	replace
1066	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYearMonth()  +  1;  [CE]  cannot  find  symbol  iMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYearMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYearMonth()  +  1;	  iMin    =    iChronology.getMinMonth()    +    1;    	non-compiled	[CE]  cannot  find  symbol  iMin	185	None	replace
1067	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth  +  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth  +  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  -  leapMonth  +  1;	  iChronology    =    chronology.dayOfMonth()    --    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	116	None	replace
1068	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfYear()  -  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfYear()  -  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfYear()  -  leapMonth;	  iChronology    =    chronology.dayOfMonth()    --    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	116	None	replace
1069	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  %  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '%'  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  %  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  %  leapMonth;	  iChronology    =    chronology.dayOfMonth()    --    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '%'	116	None	replace
1070	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  >  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  >  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  >  leapMonth;	  iChronology    =    chronology.dayOfMonth()    --    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	116	None	replace
1071	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  &  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  iField  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  &  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()  &  DateTimeFieldType.dayOfMonth();	  iField    =    DateTimeFieldType.dayOfMonth()    |    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iField	307	None	replace
1072	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  -  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  iField  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  -  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()  -  DateTimeFieldType.dayOfMonth();	  iField    =    DateTimeFieldType.dayOfMonth()    |    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iField	307	None	replace
1073	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  /  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  iField  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  /  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()  /  DateTimeFieldType.dayOfMonth();	  iField    =    DateTimeFieldType.dayOfMonth()    |    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iField	307	None	replace
1074	[BUG]  [BUGGY]  iField  =  dateTimeFieldType.dayOfMonth()  &  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  iField  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  dateTimeFieldType.dayOfMonth()  &  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  dateTimeFieldType.dayOfMonth()  &  DateTimeFieldType.dayOfMonth();	  iField    =    DateTimeFieldType.dayOfMonth()    |    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iField	307	None	replace
1075	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  +  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  iField  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  +  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()  +  DateTimeFieldType.dayOfMonth();	  iField    =    DateTimeFieldType.dayOfMonth()    |    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iField	307	None	replace
1076	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.millisOfDay(),  leapMonth);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.millisOfDay(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.millisOfDay(),  leapMonth);	  iChronology    =    chronology.getChronology(this.millisOfDay());    	non-compiled	[CE]  cannot  find  symbol	266	None	replace
1077	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this,  leapMonth,  this.millisOfDay());  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this,  leapMonth,  this.millisOfDay());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this,  leapMonth,  this.millisOfDay());	  iChronology    =    chronology.getChronology(this.millisOfDay());    	non-compiled	[CE]  cannot  find  symbol	266	None	replace
1078	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this,  this.millisOfDay());  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this,  this.millisOfDay());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this,  this.millisOfDay());	  iChronology    =    chronology.getChronology(this.millisOfDay());    	non-compiled	[CE]  cannot  find  symbol	266	None	replace
1079	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.millisOfDay()  +  leapMonth);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.millisOfDay()  +  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.millisOfDay()  +  leapMonth);	  iChronology    =    chronology.getChronology(this.millisOfDay());    	non-compiled	[CE]  cannot  find  symbol	266	None	replace
1080	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(dayOfMonth,  this.millisOfDay());  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(dayOfMonth,  this.millisOfDay());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(dayOfMonth,  this.millisOfDay());	  iChronology    =    chronology.getChronology(this.millisOfDay());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	266	None	replace
1081	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.millisOfDay(),  this.dayOfMonth);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.millisOfDay(),  this.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.millisOfDay(),  this.dayOfMonth);	  iChronology    =    chronology.getChronology(this.millisOfDay());    	non-compiled	[CE]  cannot  find  symbol	266	None	replace
1082	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  MIN);  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  MIN);  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  MIN);  iDayOfMonth  =  chronology.getDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	232	None	replace
1083	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1);  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1);  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1);  iDayOfMonth  =  chronology.getDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	232	None	replace
1084	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  +  1);  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  +  1);  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  +  1);  iDayOfMonth  =  chronology.getDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	232	None	replace
1085	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	232	None	replace
1086	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  1);  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  1);  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  1);  iDayOfMonth  =  chronology.getDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	232	None	replace
1087	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  iLeapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  iLeapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth,  iLeapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	232	None	replace
1088	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getAverageMillisPerMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getAverageMillisPerMonth());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
1089	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  *  1);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  *  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  *  1);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
1090	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getMillisPerMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getMillisPerMonth());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
1091	[BUG]  [BUGGY]  int  min  =  iChronology.getMinXear();  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinXear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinXear();	  int    min    =    data.getMinYear();    	non-compiled	[CE]  cannot  find  symbol	190	None	replace
1092	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  32);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  32);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  32);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    30);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	166	None	replace
1093	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  20);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  20);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  20);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    30);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	166	None	replace
1094	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth  *  leapMonth;  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth  *  leapMonth;	  int    iLeapMonth    =    chronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
1095	[BUG]  [BUGGY]  int  iLeapMonth  =  data.getLeapMonth()  +  leapMonth;  [CE]  cannot  find  symbol  data  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  data.getLeapMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  data.getLeapMonth()  +  leapMonth;	  int    iLeapMonth    =    chronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  data	124	None	replace
1096	[BUG]  [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Node  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();	  Node    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	231	None	replace
1097	[BUG]  [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Node  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();	  Node    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	231	None	replace
1098	[BUG]  [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Node  chronology  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  iDayOfMonth  =  chronology.getDayOfMonth();	  Node    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	231	None	replace
1099	[BUG]  [BUGGY]  Node  chronology  =  dateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Node  chronology  =  dateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Node  chronology  =  dateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();	  Node    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	231	None	replace
1100	[BUG]  [BUGGY]  node  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  iDayOfMonth.getDayOfMonth();  [CE]  cannot  find  symbol  node  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  node  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  iDayOfMonth.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	node  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  iDayOfMonth.getDayOfMonth();	  Node    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  node	231	None	replace
1101	[BUG]  [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  [CE]  cannot  find  symbol  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Node  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;	  Node    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	231	None	replace
1102	[BUG]  [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology);  [CE]  cannot  find  symbol  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Node  chronology  =  DateTimeUtils.getChronology(chronology);	  Node    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	231	None	replace
1103	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(switchMonth);  [CE]  cannot  find  symbol  switchMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(switchMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth(switchMonth);	  int    iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  switchMonth	107	None	replace
1104	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(secondMonth);  [CE]  cannot  find  symbol  secondMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(secondMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth(secondMonth);	  int    iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  secondMonth	107	None	replace
1105	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(stackMonth);  [CE]  cannot  find  symbol  stackMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(stackMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth(stackMonth);	  int    iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  stackMonth	107	None	replace
1106	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(min);  [CE]  cannot  find  symbol  min  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(min);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth(min);	  int    iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  min	107	None	replace
1107	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(edgeMonth);  [CE]  cannot  find  symbol  edgeMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(edgeMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth(edgeMonth);	  int    iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  edgeMonth	107	None	replace
1108	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(scrollMonth);  [CE]  cannot  find  symbol  scrollMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(scrollMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth(scrollMonth);	  int    iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  scrollMonth	107	None	replace
1109	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(switcherMonth);  [CE]  cannot  find  symbol  switcherMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(switcherMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth(switcherMonth);	  int    iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  switcherMonth	107	None	replace
1110	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(switchedMonth);  [CE]  cannot  find  symbol  switchedMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(switchedMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth(switchedMonth);	  int    iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  switchedMonth	107	None	replace
1111	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(spikeMonth);  [CE]  cannot  find  symbol  spikeMonth  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(spikeMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth(spikeMonth);	  int    iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  spikeMonth	107	None	replace
1112	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1,  dayOfMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1,  dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1,  dayOfMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth    -    1);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	175	None	replace
1113	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  /  1);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  /  1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  /  1);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth    -    1);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	175	None	replace
1114	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1,  null);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1,  null);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1,  null);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth    -    1);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	175	None	replace
1115	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1,  MIN);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1,  MIN);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1,  MIN);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth    -    1);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	175	None	replace
1116	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1L);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1L);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1L);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth    -    1);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	175	None	replace
1117	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  2);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  2);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  2);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth    -    1);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	175	None	replace
1118	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1  -  1);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1  -  1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1  -  1);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth    -    1);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	175	None	replace
1119	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(true,  leapMonth);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(true,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(true,  leapMonth);	  iChronology    =    chronology.getChronology(true);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
1120	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(false,  leapMonth);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(false,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(false,  leapMonth);	  iChronology    =    chronology.getChronology(true);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
1121	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(null,  true);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(null,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(null,  true);	  iChronology    =    chronology.getChronology(true);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
1122	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(false,  true);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(false,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(false,  true);	  iChronology    =    chronology.getChronology(true);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
1123	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this,  true);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this,  true);	  iChronology    =    chronology.getChronology(true);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
1124	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth,  leapMonth;  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth,  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  -  leapMonth,  leapMonth;	  iChronology    =    chronology.dayOfMonth()    -    leapMonth;    	non-compiled	[CE]  ';'  expected	113	None	replace
1125	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth,  leapMonth);  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  -  leapMonth,  leapMonth);	  iChronology    =    chronology.dayOfMonth()    -    leapMonth;    	non-compiled	[CE]  ';'  expected	113	None	replace
1126	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth  +  2;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth  +  2;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  -  leapMonth  +  2;	  iChronology    =    chronology.dayOfMonth()    -    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	113	None	replace
1127	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  false);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  false);	  iChronology    =    chronology.getChronology(false);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	31	None	replace
1128	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(false,  null);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(false,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(false,  null);	  iChronology    =    chronology.getChronology(false);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
1129	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(false,  false);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(false,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(false,  false);	  iChronology    =    chronology.getChronology(false);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
1130	[BUG]  [BUGGY]  iMin  =  chronology.getMonthOfYear();  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMonthOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	65	None	replace
1131	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMonthOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	65	None	replace
1132	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMonthOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMonthOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMonthOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	65	None	replace
1133	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getWeekOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getWeekOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getWeekOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMonthOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	65	None	replace
1134	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getHourOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getHourOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getHourOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMonthOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	65	None	replace
1135	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getStartOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getStartOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getStartOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMonthOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	65	None	replace
1136	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMonthOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	65	None	replace
1137	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.monthOfYear();  [CE]  incompatible  types  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.monthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.monthOfYear();	  int    iLeapMonth    =    iChronology.monthOfYear();    	non-compiled	[CE]  incompatible  types	109	None	replace
1138	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.monthOfYear()  -  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.monthOfYear()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.monthOfYear()  -  leapMonth;	  int    iLeapMonth    =    iChronology.monthOfYear();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	109	None	replace
1139	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.monthOfYear()  +  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.monthOfYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.monthOfYear()  +  leapMonth;	  int    iLeapMonth    =    iChronology.monthOfYear();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	109	None	replace
1140	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.monthOfYear(),  leapMonth;  [CE]  incompatible  types  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.monthOfYear(),  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.monthOfYear(),  leapMonth;	  int    iLeapMonth    =    iChronology.monthOfYear();    	non-compiled	[CE]  incompatible  types	109	None	replace
1141	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.weekOfMonth();  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.weekOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.weekOfMonth();	  int    iLeapMonth    =    iChronology.monthOfYear();    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
1142	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.monthOfYear()  /  2;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.monthOfYear()  /  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.monthOfYear()  /  2;	  int    iLeapMonth    =    iChronology.monthOfYear();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	109	None	replace
1143	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.monthOfMonth();  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.monthOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.monthOfMonth();	  int    iLeapMonth    =    iChronology.monthOfYear();    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
1144	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	234	None	replace
1145	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  iDayOfMonth  =  [CE]  illegal  start  of  expression  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  iDayOfMonth  =  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  iDayOfMonth  =	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	234	None	replace
1146	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  iDayOf  [CE]  illegal  start  of  expression  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  iDayOf  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  iDayOf	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	234	None	replace
1147	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  iDayOfMonth  =  chronology.dayOfMonth()  [CE]  ';'  expected  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  iDayOfMonth  =  chronology.dayOfMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  iDayOfMonth  =  chronology.dayOfMonth()	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  ';'  expected	234	None	replace
1148	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  throw  new  IllegalFieldValueException( "Date  [CE]  unclosed  string  literal  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  throw  new  IllegalFieldValueException( "Date  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  throw  new  IllegalFieldValueException( "Date	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  unclosed  string  literal	234	None	replace
1149	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  iDayOfMonth  [CE]  illegal  start  of  expression  [FE]                                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  iDayOfMonth  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  iDayOfMonth	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	234	None	replace
1150	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  iDayOfMonth  =  chronology.dayOfMonth  [CE]  ';'  expected  [FE]                                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  iDayOfMonth  =  chronology.dayOfMonth  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  iDayOfMonth  =  chronology.dayOfMonth	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  ';'  expected	234	None	replace
1151	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis(),  leapMonth);  [CE]  ';'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis(),  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis(),  leapMonth);	  BasicChronology    chronology    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  ';'  expected	296	None	replace
1152	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis()  /  DateTimeUtils.MILLIS_PER_DAY;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis()  /  DateTimeUtils.MILLIS_PER_DAY;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis()  /  DateTimeUtils.MILLIS_PER_DAY;	  BasicChronology    chronology    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	296	None	replace
1153	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getInstance();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getInstance();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getInstance();	  BasicChronology    chronology    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	296	None	replace
1154	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getDateTimeField(chronology);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getDateTimeField(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getDateTimeField(chronology);	  BasicChronology    chronology    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	296	None	replace
1155	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).currentTimeMillis();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).currentTimeMillis();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).currentTimeMillis();	  BasicChronology    chronology    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	296	None	replace
1156	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis(),  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis(),  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis(),  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	296	None	replace
1157	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis()  -  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis()  -  1;	  BasicChronology    chronology    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	296	None	replace
1158	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMONTH());  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMONTH());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMONTH());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfYear());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
1159	[BUG]  [BUGGY]  iChronology  =  iChronology.getDateTimeField(DateTimeFieldType.dayOfYear());  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  iChronology.getDateTimeField(DateTimeFieldType.dayOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  iChronology.getDateTimeField(DateTimeFieldType.dayOfYear());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfYear());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
1160	[BUG]  [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfYear());  [CE]  cannot  find  symbol  chronology  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfYear());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfYear());    	non-compiled	[CE]  cannot  find  symbol  chronology	72	None	replace
1161	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.DayOfMonth());  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.DayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.DayOfMonth());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfYear());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
1162	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1)  [CE]  ';'  expected  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1)  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1)	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth)    	non-compiled	[CE]  ';'  expected	102	None	replace
1163	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth)+  1;  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth)+  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth)+  1;	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth)    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
1164	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth)+  ';'  [CE]  ';'  expected  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth)+  ';'  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth)+  ';'	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth)    	non-compiled	[CE]  ';'  expected	102	None	replace
1165	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth)&  MIN  *  leapMonth  [CE]  ';'  expected  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth)&  MIN  *  leapMonth  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth)&  MIN  *  leapMonth	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth)    	non-compiled	[CE]  ';'  expected	102	None	replace
1166	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth)/  ';'  [CE]  ';'  expected  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth)/  ';'  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth)/  ';'	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth)    	non-compiled	[CE]  ';'  expected	102	None	replace
1167	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfYear(),  leapMonth)  [CE]  ';'  expected  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfYear(),  leapMonth)  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfYear(),  leapMonth)	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth)    	non-compiled	[CE]  ';'  expected	102	None	replace
1168	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth,  leapMonth);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth,  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    +    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	69	None	replace
1169	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  *  leapMonth);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  *  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  *  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    +    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	69	None	replace
1170	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth,  30);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth,  30);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth,  30);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    +    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	69	None	replace
1171	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth,  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth,  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth,  1);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    +    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	69	None	replace
1172	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth,  false);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth,  false);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    +    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	69	None	replace
1173	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth,  milliseconds);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth,  milliseconds);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth,  milliseconds);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    +    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	69	None	replace
1174	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(switchMonth);  [CE]  cannot  find  symbol  switchMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(switchMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth(switchMonth);	  int    iLeapMonth    =    chronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  switchMonth	280	None	replace
1175	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(scrollMonth);  [CE]  cannot  find  symbol  scrollMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(scrollMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth(scrollMonth);	  int    iLeapMonth    =    chronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  scrollMonth	280	None	replace
1176	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(switcherMonth);  [CE]  cannot  find  symbol  switcherMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(switcherMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth(switcherMonth);	  int    iLeapMonth    =    chronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  switcherMonth	280	None	replace
1177	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(switchedMonth);  [CE]  cannot  find  symbol  switchedMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(switchedMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth(switchedMonth);	  int    iLeapMonth    =    chronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  switchedMonth	280	None	replace
1178	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(scronology);  [CE]  cannot  find  symbol  scronology  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(scronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth(scronology);	  int    iLeapMonth    =    chronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  scronology	280	None	replace
1179	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(strMonth);  [CE]  cannot  find  symbol  strMonth  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(strMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth(strMonth);	  int    iLeapMonth    =    chronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  strMonth	280	None	replace
1180	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(secondMonth);  [CE]  cannot  find  symbol  secondMonth  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(secondMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth(secondMonth);	  int    iLeapMonth    =    chronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  secondMonth	280	None	replace
1181	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(edgeMonth);  [CE]  cannot  find  symbol  edgeMonth  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(edgeMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth(edgeMonth);	  int    iLeapMonth    =    chronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  edgeMonth	280	None	replace
1182	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  /  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  /  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  /  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	159	None	replace
1183	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  -  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  -  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	159	None	replace
1184	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth()  /  1;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth()  /  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getDayOfMonth()  /  1;	  int    leapMonth    =    iChronology.getDayOfMonth()    +    1;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	85	None	replace
1185	[BUG]  [BUGGY]  iMax  =  chronology.getDayOfMonth();  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMax  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMax  =  chronology.getDayOfMonth();	  iMax    =    chronology.getMinYear();    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	61	None	replace
1186	[BUG]  [BUGGY]  iMax  =  chronology.getMinYear()  *  leapMonth;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMax  =  chronology.getMinYear()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMax  =  chronology.getMinYear()  *  leapMonth;	  iMax    =    chronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	61	None	replace
1187	[BUG]  [BUGGY]  iMax  =  iChronology.getMinYear();  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMax  =  iChronology.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMax  =  iChronology.getMinYear();	  iMax    =    chronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	61	None	replace
1188	[BUG]  [BUGGY]  iMax  =  this.chronology.getMinYear();  [CE]  cannot  find  symbol  chronology  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMax  =  this.chronology.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMax  =  this.chronology.getMinYear();	  iMax    =    chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  chronology	61	None	replace
1189	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth()  -  leapMonth;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getDayOfMonth()  -  leapMonth;	  int    leapMonth    =    iChronology.getDayOfMonth()    -    leapMonth;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	84	None	replace
1190	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  /  leapMonth;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  /  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth()  /  leapMonth;	  int    leapMonth    =    iChronology.getDayOfMonth()    -    leapMonth;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	84	None	replace
1191	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  -  leapMonth  +  1;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  -  leapMonth  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth()  -  leapMonth  +  1;	  int    leapMonth    =    iChronology.getDayOfMonth()    -    leapMonth;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	84	None	replace
1192	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  *  leapMonth;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth()  *  leapMonth;	  int    leapMonth    =    iChronology.getDayOfMonth()    -    leapMonth;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	84	None	replace
1193	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  -  leapMonth  +  2;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  -  leapMonth  +  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth()  -  leapMonth  +  2;	  int    leapMonth    =    iChronology.getDayOfMonth()    -    leapMonth;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	84	None	replace
1194	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  -  leapMonth  +  31;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  -  leapMonth  +  31;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth()  -  leapMonth  +  31;	  int    leapMonth    =    iChronology.getDayOfMonth()    -    leapMonth;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	84	None	replace
1195	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth  +  1);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth  +  1);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	167	None	replace
1196	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth,  this.min);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth,  this.min);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth,  this.min);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	167	None	replace
1197	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth)+  1;  [CE]  cannot  find  symbol  DateTimeZone  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth)+  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth)+  1;	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	167	None	replace
1198	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth,  MIN);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth,  MIN);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	167	None	replace
1199	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth,  1);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth,  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth,  1);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	167	None	replace
1200	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth,  this.max);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth,  this.max);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth,  this.max);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	167	None	replace
1201	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth  +  2);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth  +  2);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth  +  2);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	167	None	replace
1202	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth-1);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth-1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth-1);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	167	None	replace
1203	[BUG]  [BUGGY]  iLeapMonth  =  chronology.getLastDayOfMonth();  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  chronology.getLastDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  chronology.getLastDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLastDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
1204	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastDayOfMonth()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastDayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastDayOfMonth()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLastDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	163	None	replace
1205	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastDayOfMonth()  *  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastDayOfMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastDayOfMonth()  *  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLastDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	163	None	replace
1206	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iLeapMonth  =  chronology.getLastDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iLeapMonth  =  chronology.getLastDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iLeapMonth  =  chronology.getLastDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLastDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	163	None	replace
1207	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLastDayOfMonth();  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLastDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLastDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLastDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
1208	[BUG]  [BUGGY]  iLastDayOfMonth  =  chronology.getLastDayOfMonth();  [CE]  cannot  find  symbol  iLastDayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLastDayOfMonth  =  chronology.getLastDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLastDayOfMonth  =  chronology.getLastDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLastDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iLastDayOfMonth	163	None	replace
1209	[BUG]  [BUGGY]  iMin  =  chronology.getMinimumMillis();  [CE]  cannot  find  symbol  iMin  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinimumMillis();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinimumMillis();	  if(iDayOfMonth!=    chronology.getDayOfMonth())    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    	non-compiled	[CE]  cannot  find  symbol  iMin	277	None	replace
1210	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(true,  leapMonth);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(true,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(true,  leapMonth);	  iChronology    =    chronology.getBasicChronology(true);    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
1211	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(false,  true);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(false,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(false,  true);	  iChronology    =    chronology.getBasicChronology(true);    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
1212	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(null,  true);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(null,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(null,  true);	  iChronology    =    chronology.getBasicChronology(true);    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
1213	[BUG]  [BUGGY]  iWeekMonth  =  chronology.getMonthOfYear();  [CE]  cannot  find  symbol  iWeekMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iWeekMonth  =  chronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iWeekMonth  =  chronology.getMonthOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	267	None	replace
1214	[BUG]  [BUGGY]  iChronology  =  chronology,  iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth());  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology,  iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology,  iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth());	  iChronology    =    iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  ';'  expected	70	None	replace
1215	[BUG]  [BUGGY]  iChronology  =  Chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  Chronology  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  Chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  Chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());	  iChronology    =    iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  Chronology	70	None	replace
1216	[BUG]  [BUGGY]  iChronology  =  this.dayOfMonth.getDateTimeField(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.dayOfMonth.getDateTimeField(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.dayOfMonth.getDateTimeField(DateTimeFieldType.dayOfMonth());	  iChronology    =    iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	70	None	replace
1217	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.DAYOfMonth());  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.DAYOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.DAYOfMonth());	  iChronology    =    iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
1218	[BUG]  [BUGGY]  iChronology  =  period.getDateTimeField(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  period  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  period.getDateTimeField(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  period.getDateTimeField(DateTimeFieldType.dayOfMonth());	  iChronology    =    iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  period	70	None	replace
1219	[BUG]  [BUGGY]  iDayOfMonth  =  iChronology.getDayOfMonth();  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iDayOfMonth  =  iChronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iDayOfMonth  =  iChronology.getDayOfMonth();	  iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	9	None	replace
1220	[BUG]  [BUGGY]  iDayOfMonth  =  this.chronology.getDayOfMonth();  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iDayOfMonth  =  this.chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iDayOfMonth  =  this.chronology.getDayOfMonth();	  iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	9	None	replace
1221	[BUG]  [BUGGY]  iDayOfMonth  =  chronology.getDayOfYear();  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iDayOfMonth  =  chronology.getDayOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iDayOfMonth  =  chronology.getDayOfYear();	  iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	9	None	replace
1222	[BUG]  [BUGGY]  iDayOfMonth  =  chronology.getDayOfMonth(switchMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iDayOfMonth  =  chronology.getDayOfMonth(switchMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iDayOfMonth  =  chronology.getDayOfMonth(switchMonth);	  iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	9	None	replace
1223	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  MIN);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  MIN);	  iChronology    =    chronology.getChronology(DateTimeZone.UTC,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	288	None	replace
1224	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  1);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  1);	  iChronology    =    chronology.getChronology(DateTimeZone.UTC,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	288	None	replace
1225	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth  +  1);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth  +  1);	  iChronology    =    chronology.getChronology(DateTimeZone.UTC,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	288	None	replace
1226	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  30);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  30);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  30);	  iChronology    =    chronology.getChronology(DateTimeZone.UTC,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	288	None	replace
1227	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth);	  iChronology    =    chronology.getChronology(DateTimeZone.UTC,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	288	None	replace
1228	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  dayOfMonth);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  dayOfMonth);	  iChronology    =    chronology.getChronology(DateTimeZone.UTC,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	288	None	replace
1229	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  false);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  false);	  iChronology    =    chronology.getChronology(DateTimeZone.UTC,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	288	None	replace
1230	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  31);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  31);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  31);	  iChronology    =    chronology.getChronology(DateTimeZone.UTC,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	288	None	replace
1231	[BUG]  [BUGGY]  iChronology  =  iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);	  iChronology    =    this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	256	None	replace
1232	[BUG]  [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1);  [CE]  cannot  find  symbol  chronology  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1);	  iChronology    =    this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  chronology	256	None	replace
1233	[BUG]  [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  0,  leapMonth);  [CE]  cannot  find  symbol  chronology  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  0,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  0,  leapMonth);	  iChronology    =    this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  chronology	256	None	replace
1234	[BUG]  [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN);  [CE]  cannot  find  symbol  chronology  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN);	  iChronology    =    this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  chronology	256	None	replace
1235	[BUG]  [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  chronology.getMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  chronology.getMillisPerMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  chronology.getMillisPerMonth());	  iChronology    =    this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	256	None	replace
1236	[BUG]  [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth());  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth());	  iChronology    =    this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	256	None	replace
1237	[BUG]  [BUGGY]  int  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;	  int    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	269	None	replace
1238	[BUG]  [BUGGY]  int  iMonth  =  chronology.getMonthOfYear()  -  leapMonth;  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMonth  =  chronology.getMonthOfYear()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMonth  =  chronology.getMonthOfYear()  -  leapMonth;	  int    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	269	None	replace
1239	[BUG]  [BUGGY]  int  iMonth  =  chronology.getMonthOfYear(),  leapMonth;  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMonth  =  chronology.getMonthOfYear(),  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMonth  =  chronology.getMonthOfYear(),  leapMonth;	  int    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	269	None	replace
1240	[BUG]  [BUGGY]  int  iMonth  =  chronology.getMonthOfYear()  -  1;  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMonth  =  chronology.getMonthOfYear()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMonth  =  chronology.getMonthOfYear()  -  1;	  int    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	269	None	replace
1241	[BUG]  [BUGGY]  int  iMonth  =  chronology.getMonthOfYear(dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMonth  =  chronology.getMonthOfYear(dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMonth  =  chronology.getMonthOfYear(dayOfMonth);	  int    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	269	None	replace
1242	[BUG]  [BUGGY]  int  iMonth  =  chronology.getMonthOfYear()  /  2;  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMonth  =  chronology.getMonthOfYear()  /  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMonth  =  chronology.getMonthOfYear()  /  2;	  int    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	269	None	replace
1243	[BUG]  [BUGGY]  int  iMonth  =  chronology.getMonthOfYear()  +  1;  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMonth  =  chronology.getMonthOfYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMonth  =  chronology.getMonthOfYear()  +  1;	  int    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	269	None	replace
1244	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(null,  leapMonth);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(null,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(null,  leapMonth);	  iChronology    =    chronology.getChronology(null);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
1245	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(new  BasicChronology[]  {  null  }  );  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(new  BasicChronology[]  {  null  }  );  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(new  BasicChronology[]  {  null  }  );	  iChronology    =    chronology.getChronology(null);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
1246	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(new  BasicChronology[]  {  null,  null  }  );  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(new  BasicChronology[]  {  null,  null  }  );  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(new  BasicChronology[]  {  null,  null  }  );	  iChronology    =    chronology.getChronology(null);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
1247	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(null,  null);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(null,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(null,  null);	  iChronology    =    chronology.getChronology(null);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
1248	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iChronology,  null);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iChronology,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iChronology,  null);	  iChronology    =    chronology.getChronology(null);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
1249	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth  +  1;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth  +  1;	  iLeapMonth    =    leapMonth;    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	7	None	replace
1250	[BUG]  [BUGGY]  iLeapMonth  =  MIN;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  MIN;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  MIN;	  iLeapMonth    =    leapMonth;    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	7	None	replace
1251	[BUG]  [BUGGY]  iLeapMonth  =  Math.min(iChronology.getDayOfMonth(),  leapMonth);  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  Math.min(iChronology.getDayOfMonth(),  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  Math.min(iChronology.getDayOfMonth(),  leapMonth);	  iLeapMonth    =    leapMonth;    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	7	None	replace
1252	[BUG]  [BUGGY]  iLeapMonth  =  dayOfMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  dayOfMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  dayOfMonth;	  iLeapMonth    =    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	7	None	replace
1253	[BUG]  [BUGGY]  iLeapMonth  =  Math.min(iChronology.dayOfMonth,  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  Math.min(iChronology.dayOfMonth,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  Math.min(iChronology.dayOfMonth,  leapMonth);	  iLeapMonth    =    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	7	None	replace
1254	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth  -  1;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth  -  1;	  iLeapMonth    =    leapMonth;    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	7	None	replace
1255	[BUG]  [BUGGY]  iLeapMonth  =  Math.min(iMax,  leapMonth);  [CE]  variable  iMax  might  not  have  been  initialized  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  Math.min(iMax,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  Math.min(iMax,  leapMonth);	  iLeapMonth    =    leapMonth;    	non-compiled	[CE]  variable  iMax  might  not  have  been  initialized	7	None	replace
1256	[BUG]  [BUGGY]  iLeapMonth  =  Math.min(iChronology.monthOfYear(),  leapMonth);  [CE]  no  suitable  method  found  for  min(DateTimeField,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  Math.min(iChronology.monthOfYear(),  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  Math.min(iChronology.monthOfYear(),  leapMonth);	  iLeapMonth    =    leapMonth;    	non-compiled	[CE]  no  suitable  method  found  for  min(DateTimeField,int)	7	None	replace
1257	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  leapMonth,  MIN);  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  leapMonth,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  leapMonth,  MIN);	  iChronology    =    new    BasicChronology(chronology.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	198	None	replace
1258	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  leapMonth  +  1);  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  leapMonth  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  leapMonth  +  1);	  iChronology    =    new    BasicChronology(chronology.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	198	None	replace
1259	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  0,  leapMonth);  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  0,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  0,  leapMonth);	  iChronology    =    new    BasicChronology(chronology.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	198	None	replace
1260	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology,  chronology.dayOfMonth(),  leapMonth);  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology,  chronology.dayOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology,  chronology.dayOfMonth(),  leapMonth);	  iChronology    =    new    BasicChronology(chronology.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	198	None	replace
1261	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  leapMonth,  1);  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  leapMonth,  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  leapMonth,  1);	  iChronology    =    new    BasicChronology(chronology.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	198	None	replace
1262	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  leapMonth,  chronology.monthOfYear);  [CE]  cannot  find  symbol  monthOfYear  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  leapMonth,  chronology.monthOfYear);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  leapMonth,  chronology.monthOfYear);	  iChronology    =    new    BasicChronology(chronology.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  monthOfYear	198	None	replace
1263	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  leapMonth,  30);  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  leapMonth,  30);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  leapMonth,  30);	  iChronology    =    new    BasicChronology(chronology.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	198	None	replace
1264	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  chronology.getDayOfMonth());  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  chronology.getDayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  chronology.getDayOfMonth());	  iChronology    =    new    BasicChronology(chronology.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	198	None	replace
1265	[BUG]  [BUGGY]  int  min  =  iChronology.getMinX();  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinX();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinX();	  int    min    =    chronology.getMinX();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
1266	[BUG]  [BUGGY]  int  min  =  chronology.getMinY();  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  chronology.getMinY();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMinY();	  int    min    =    chronology.getMinX();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
1267	[BUG]  [BUGGY]  int  min  =  iChronology.getMinY();  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinY();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinY();	  int    min    =    chronology.getMinX();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
1268	[BUG]  [BUGGY]  int  min  =  chronology.getMinX()  -  leapMonth;  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  chronology.getMinX()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMinX()  -  leapMonth;	  int    min    =    chronology.getMinX();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
1269	[BUG]  [BUGGY]  int  min  =  this.chronology.getMinX();  [CE]  cannot  find  symbol  chronology  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  this.chronology.getMinX();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  this.chronology.getMinX();	  int    min    =    chronology.getMinX();    	non-compiled	[CE]  cannot  find  symbol  chronology	122	None	replace
1270	[BUG]  [BUGGY]  int  min  =  chronology.getMinX()  +  leapMonth;  [CE]  cannot  find  symbol  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  chronology.getMinX()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMinX()  +  leapMonth;	  int    min    =    chronology.getMinX();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
1271	[BUG]  [BUGGY]  int  min  =  chronology.getMinX()  -  1;  [CE]  cannot  find  symbol  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  chronology.getMinX()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMinX()  -  1;	  int    min    =    chronology.getMinX();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
1272	[BUG]  [BUGGY]  iMin  =  iChronology.getDayOfMonth();  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getDayOfMonth();	  iMin    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	140	None	replace
1273	[BUG]  [BUGGY]  iMin  =  chronology.getMinimumDayOfMonth();  [CE]  cannot  find  symbol  iMin  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinimumDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinimumDayOfMonth();	  iMin    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	140	None	replace
1274	[BUG]  [BUGGY]  iMin  =  chronology.getDayOfMonth()  +  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getDayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getDayOfMonth()  +  leapMonth;	  iMin    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	140	None	replace
1275	[BUG]  [BUGGY]  iMin  =  chronology.getMinuteOfDay();  [CE]  cannot  find  symbol  iMin  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinuteOfDay();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinuteOfDay();	  iMin    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	140	None	replace
1276	[BUG]  [BUGGY]  iMin  =  chronology.getMinuteOfYearMonth();  [CE]  cannot  find  symbol  iMin  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinuteOfYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinuteOfYearMonth();	  iMin    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	140	None	replace
1277	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth  *  Math.max(iMax,  leapMonth);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth  *  Math.max(iMax,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth  *  Math.max(iMax,  leapMonth);	  iLeapMonth    =    iChronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
1278	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth  +  1;  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth  +  1;	  iLeapMonth    =    iChronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
1279	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth  *  Math.min(iMax,  leapMonth);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth  *  Math.min(iMax,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth  *  Math.min(iMax,  leapMonth);	  iLeapMonth    =    iChronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
1280	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth  *  2;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth  *  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth  *  2;	  iLeapMonth    =    iChronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
1281	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth.getLeapMonth()  +  iChronology;  [CE]  int  cannot  be  dereferenced  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth.getLeapMonth()  +  iChronology;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth.getLeapMonth()  +  iChronology;	  iLeapMonth    =    iChronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  int  cannot  be  dereferenced	1	None	replace
1282	[BUG]  [BUGGY]  iFieldMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  not  a  statement  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iFieldMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iFieldMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth    ==    chronology.getDayOfMonth())    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  not  a  statement	273	None	replace
1283	[BUG]  [BUGGY]  iFieldMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  not  a  statement  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iFieldMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iFieldMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();	  if(iDayOfMonth    ==    chronology.getDayOfMonth())    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  not  a  statement	273	None	replace
1284	[BUG]  [BUGGY]  iFieldMonth  ==  chronology.getDayOfMonth())  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  not  a  statement  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iFieldMonth  ==  chronology.getDayOfMonth())  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iFieldMonth  ==  chronology.getDayOfMonth())  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth    ==    chronology.getDayOfMonth())    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  not  a  statement	273	None	replace
1285	[BUG]  [BUGGY]  iFieldMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  [CE]  not  a  statement  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iFieldMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iFieldMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);	  if(iDayOfMonth    ==    chronology.getDayOfMonth())    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  not  a  statement	273	None	replace
1286	[BUG]  [BUGGY]  iFieldMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iTagOfMonth  =  chronology.getDayOfMonth();  }  [CE]  not  a  statement  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iFieldMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iTagOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iFieldMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iTagOfMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth    ==    chronology.getDayOfMonth())    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  not  a  statement	273	None	replace
1287	[BUG]  [BUGGY]  iFieldMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  [CE]  not  a  statement  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iFieldMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iFieldMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()	  if(iDayOfMonth    ==    chronology.getDayOfMonth())    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  not  a  statement	273	None	replace
1288	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false,  leapMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false,  leapMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    false);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	253	None	replace
1289	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false,  dayOfMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false,  dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false,  dayOfMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    false);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	253	None	replace
1290	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false,  MIN);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false,  MIN);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false,  MIN);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    false);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	253	None	replace
1291	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false,  true);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false,  true);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false,  true);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    false);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	253	None	replace
1292	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false,  30);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false,  30);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false,  30);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    false);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	253	None	replace
1293	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false,  null);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false,  null);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false,  null);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    false);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	253	None	replace
1294	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getLeapMonth()  *  leapMonth;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getLeapMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getLeapMonth()  *  leapMonth;	  int    iLeapMonth    =    iChronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	106	None	replace
1295	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  +  1;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  +  1;	  int    iLeapMonth    =    iChronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
1296	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  +  2;  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  +  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  +  2;	  int    iLeapMonth    =    iChronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
1297	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getLeapMonth()  /  leapMonth;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getLeapMonth()  /  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getLeapMonth()  /  leapMonth;	  int    iLeapMonth    =    iChronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	106	None	replace
1298	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null,  leapMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null,  leapMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    null);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	178	None	replace
1299	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    null);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	178	None	replace
1300	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  getChronology());  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  getChronology());  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  getChronology());	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    null);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	178	None	replace
1301	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.monthOfYear;  [CE]  cannot  find  symbol  monthOfYear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.monthOfYear;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.monthOfYear;	  iLeapMonth    =    iChronology.dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  monthOfYear	209	None	replace
1302	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.dayOfMonth  +  leapMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.dayOfMonth  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.dayOfMonth  +  leapMonth;	  iLeapMonth    =    iChronology.dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	209	None	replace
1303	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth  +  iChronology.dayOfMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth  +  iChronology.dayOfMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth  +  iChronology.dayOfMonth;	  iLeapMonth    =    iChronology.dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	209	None	replace
1304	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getDayOfMonth();  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getDayOfMonth();	  iLeapMonth    =    iChronology.dayOfMonth;    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	209	None	replace
1305	[BUG]  [BUGGY]  iLeapMonth  =  this.iChronology.dayOfMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  this.iChronology.dayOfMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  this.iChronology.dayOfMonth;	  iLeapMonth    =    iChronology.dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	209	None	replace
1306	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.monthOfYear();  [CE]  incompatible  types  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.monthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.monthOfYear();	  iLeapMonth    =    iChronology.dayOfMonth;    	non-compiled	[CE]  incompatible  types	209	None	replace
1307	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(null,  leapMonth);  [CE]  no  suitable  method  found  for  withUTC(<null>,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(null,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(null,  leapMonth);	  iChronology    =    chronology.withUTC(null);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(<null>,int)	205	None	replace
1308	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iChronology,  null);  [CE]  no  suitable  method  found  for  withUTC(BasicChronology,<null>)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(iChronology,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iChronology,  null);	  iChronology    =    chronology.withUTC(null);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(BasicChronology,<null>)	205	None	replace
1309	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iMax,  null);  [CE]  no  suitable  method  found  for  withUTC(int,<null>)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(iMax,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iMax,  null);	  iChronology    =    chronology.withUTC(null);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(int,<null>)	205	None	replace
1310	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iFieldType,  null);  [CE]  cannot  find  symbol  iFieldType  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(iFieldType,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iFieldType,  null);	  iChronology    =    chronology.withUTC(null);    	non-compiled	[CE]  cannot  find  symbol  iFieldType	205	None	replace
1311	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(dayOfMonth,  null);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(dayOfMonth,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(dayOfMonth,  null);	  iChronology    =    chronology.withUTC(null);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	205	None	replace
1312	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this);  [CE]  no  suitable  method  found  for  withUTC(BasicMonthOfYearDateTimeField)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this);	  iChronology    =    chronology.withUTC(null);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(BasicMonthOfYearDateTimeField)	205	None	replace
1313	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iMin,  null);  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(iMin,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iMin,  null);	  iChronology    =    chronology.withUTC(null);    	non-compiled	[CE]  cannot  find  symbol  iMin	205	None	replace
1314	[BUG]  [BUGGY]  iFieldMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  not  a  statement  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iFieldMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iFieldMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth    ==    chronology.dayOfMonth)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  not  a  statement	274	None	replace
1315	[BUG]  [BUGGY]  iFieldMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  not  a  statement  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iFieldMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iFieldMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();	  if(iDayOfMonth    ==    chronology.dayOfMonth)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  not  a  statement	274	None	replace
1316	[BUG]  [BUGGY]  iFieldMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iTagOfMonth  =  chronology.getDayOfMonth();  }  [CE]  not  a  statement  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iFieldMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iTagOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iFieldMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iTagOfMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth    ==    chronology.dayOfMonth)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  not  a  statement	274	None	replace
1317	[BUG]  [BUGGY]  iFieldMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  [CE]  not  a  statement  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iFieldMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iFieldMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);	  if(iDayOfMonth    ==    chronology.dayOfMonth)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  not  a  statement	274	None	replace
1318	[BUG]  [BUGGY]  iFieldMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iStartMonth  =  chronology.getDayOfMonth();  }  [CE]  not  a  statement  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iFieldMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iStartMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iFieldMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iStartMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth    ==    chronology.dayOfMonth)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  not  a  statement	274	None	replace
1319	[BUG]  [BUGGY]  iLeapMonth  =  chronology.getDayOfMonth();  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  chronology.getDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	158	None	replace
1320	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getDayOfMonth()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getDayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getDayOfMonth()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	158	None	replace
1321	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iLeapMonth  =  chronology.getDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iLeapMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iLeapMonth  =  chronology.getDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	158	None	replace
1322	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getDayOfMonth()  *  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getDayOfMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getDayOfMonth()  *  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	158	None	replace
1323	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.dayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.dayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	158	None	replace
1324	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getDayOfMonth();  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	158	None	replace
1325	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getWeekOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getWeekOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getWeekOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	158	None	replace
1326	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear()  +  leapMonth,  leapMonth;  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear()  +  leapMonth,  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear()  +  leapMonth,  leapMonth;	  iMin    =    chronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  ';'  expected	137	None	replace
1327	[BUG]  [BUGGY]  min  =  chronology.getMinYear()  +  leapMonth;  [CE]  cannot  find  symbol  min  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  min  =  chronology.getMinYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	min  =  chronology.getMinYear()  +  leapMonth;	  iMin    =    chronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  min	137	None	replace
1328	[BUG]  [BUGGY]  int  iLeapMonth  =  this.iChronology.dayOfMonth();  [CE]  incompatible  types  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  this.iChronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  this.iChronology.dayOfMonth();	  int    iLeapMonth    =    this.iChronology.getLeapMonth();    	non-compiled	[CE]  incompatible  types	289	None	replace
1329	[BUG]  [BUGGY]  int  iLeapMonth  =  this.iChronology.getLeapMonth()  +  leapMonth;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  this.iChronology.getLeapMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  this.iChronology.getLeapMonth()  +  leapMonth;	  int    iLeapMonth    =    this.iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	289	None	replace
1330	[BUG]  [BUGGY]  int  iLeapMonth  =  this.iChronology.dayOfMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  this.iChronology.dayOfMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  this.iChronology.dayOfMonth;	  int    iLeapMonth    =    this.iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	289	None	replace
1331	[BUG]  [BUGGY]  int  iLeapMonth  =  this.iChronology.getLeapMonth()  *  leapMonth;  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  this.iChronology.getLeapMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  this.iChronology.getLeapMonth()  *  leapMonth;	  int    iLeapMonth    =    this.iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	289	None	replace
1332	[BUG]  [BUGGY]  int  iLeapMonth  =  this.iChronology.getLeapMonth()  -  1;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  this.iChronology.getLeapMonth()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  this.iChronology.getLeapMonth()  -  1;	  int    iLeapMonth    =    this.iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	289	None	replace
1333	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  2);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  2);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  2);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    1);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
1334	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  31);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  31);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  31);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    1);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
1335	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  4);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  4);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  4);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    1);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
1336	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  5);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  5);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  5);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    1);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
1337	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  0,  1);  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  0,  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  0,  1);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    1);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
1338	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  10);  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  10);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  10);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    1);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
1339	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    dayOfMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	173	None	replace
1340	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  /  dayOfMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  /  dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  /  dayOfMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    dayOfMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	173	None	replace
1341	[BUG]  [BUGGY]  BasicChronology  chronology  =  dateTimeUtils.getChronology(chronology,  leapMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  dateTimeUtils.getChronology(chronology,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  dateTimeUtils.getChronology(chronology,  leapMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    dayOfMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	173	None	replace
1342	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth  +  1);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth  +  1);	  iChronology    =    chronology.getBasicChronology(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	21	None	replace
1343	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth)+  1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth)+  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth)+  1;	  iChronology    =    chronology.getBasicChronology(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	21	None	replace
1344	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth,  this.max);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth,  this.max);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth,  this.max);	  iChronology    =    chronology.getBasicChronology(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	21	None	replace
1345	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth  +  2);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth  +  2);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth  +  2);	  iChronology    =    chronology.getBasicChronology(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	21	None	replace
1346	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth,  this.min);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth,  this.min);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth,  this.min);	  iChronology    =    chronology.getBasicChronology(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	21	None	replace
1347	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapY);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapY);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapY);	  iChronology    =    chronology.getBasicChronology(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	21	None	replace
1348	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth,  MIN);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth,  MIN);	  iChronology    =    chronology.getBasicChronology(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	21	None	replace
1349	[BUG]  [BUGGY]  iChronology  =  iChronology.getInstance(DateTimeFieldType.dayOfMonth(),  null);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  iChronology.getInstance(DateTimeFieldType.dayOfMonth(),  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  iChronology.getInstance(DateTimeFieldType.dayOfMonth(),  null);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    null);    	non-compiled	[CE]  cannot  find  symbol	195	None	replace
1350	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  null,  leapMonth);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  null,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  null,  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    null);    	non-compiled	[CE]  cannot  find  symbol	195	None	replace
1351	[BUG]  [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  null);  [CE]  cannot  find  symbol  chronology  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  null);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    null);    	non-compiled	[CE]  cannot  find  symbol  chronology	195	None	replace
1352	[BUG]  [BUGGY]  iMin  =  0,  iChronology.getMinMonth()  +  leapMonth;  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  0,  iChronology.getMinMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  0,  iChronology.getMinMonth()  +  leapMonth;	  iMin    =    0,    iChronology.getMinMonth();    	non-compiled	[CE]  ';'  expected	187	None	replace
1353	[BUG]  [BUGGY]  iMin  =  0,  iChronology.getMinYearMonth();  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  0,  iChronology.getMinYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  0,  iChronology.getMinYearMonth();	  iMin    =    0,    iChronology.getMinMonth();    	non-compiled	[CE]  ';'  expected	187	None	replace
1354	[BUG]  [BUGGY]  iMin  =  0,  iChronology.getMinMonth()  +  1;  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  0,  iChronology.getMinMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  0,  iChronology.getMinMonth()  +  1;	  iMin    =    0,    iChronology.getMinMonth();    	non-compiled	[CE]  ';'  expected	187	None	replace
1355	[BUG]  [BUGGY]  iMin  =  0,  iChronology.getMinMonth()  -  1;  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  0,  iChronology.getMinMonth()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  0,  iChronology.getMinMonth()  -  1;	  iMin    =    0,    iChronology.getMinMonth();    	non-compiled	[CE]  ';'  expected	187	None	replace
1356	[BUG]  [BUGGY]  iMin  =  0,  iChronology.getMaxMonth();  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  0,  iChronology.getMaxMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  0,  iChronology.getMaxMonth();	  iMin    =    0,    iChronology.getMinMonth();    	non-compiled	[CE]  ';'  expected	187	None	replace
1357	[BUG]  [BUGGY]  iMin  =  1,  iChronology.getMinMonth();  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  1,  iChronology.getMinMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  1,  iChronology.getMinMonth();	  iMin    =    0,    iChronology.getMinMonth();    	non-compiled	[CE]  ';'  expected	187	None	replace
1358	[BUG]  [BUGGY]  int  iLeapMonth  =  time.getLeapMonth();  [CE]  cannot  find  symbol  time  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  time.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  time.getLeapMonth();	  int    iLeapMonth    =    ichronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  time	179	None	replace
1359	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfYear,  this.dayOfMonth);  [CE]  cannot  find  symbol  dayOfYear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfYear,  this.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfYear,  this.dayOfMonth);	  iChronology    =    chronology.getChronology(this.dayOfMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfYear	287	None	replace
1360	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayOfYear);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayOfYear);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayOfYear);	  iChronology    =    chronology.getChronology(this.dayOfMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	287	None	replace
1361	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayOfMinute);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayOfMinute);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayOfMinute);	  iChronology    =    chronology.getChronology(this.dayOfMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	287	None	replace
1362	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayOfMillis);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayOfMillis);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayOfMillis);	  iChronology    =    chronology.getChronology(this.dayOfMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	287	None	replace
1363	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.monthOfYear,  this.dayOfMonth);  [CE]  cannot  find  symbol  monthOfYear  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.monthOfYear,  this.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.monthOfYear,  this.dayOfMonth);	  iChronology    =    chronology.getChronology(this.dayOfMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  monthOfYear	287	None	replace
1364	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayOfDay);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayOfDay);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayOfDay);	  iChronology    =    chronology.getChronology(this.dayOfMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	287	None	replace
1365	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayOfMinutes);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayOfMinutes);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayOfMinutes);	  iChronology    =    chronology.getChronology(this.dayOfMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	287	None	replace
1366	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  /  leapMonth);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  /  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  /  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth()    +    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	142	None	replace
1367	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth,  MIN);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth,  MIN);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth()    +    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	142	None	replace
1368	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  *  leapMonth);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  *  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  *  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth()    +    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	142	None	replace
1369	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth,  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth,  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth,  1);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth()    +    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	142	None	replace
1370	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth,  30);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth,  30);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth,  30);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth()    +    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	142	None	replace
1371	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth,  false);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth,  false);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth()    +    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	142	None	replace
1372	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth,  milliseconds);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth,  milliseconds);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth,  milliseconds);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth()    +    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	142	None	replace
1373	[BUG]  [BUGGY]  int  iMin  =  chronology.getMinYear(dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  chronology.getMinYear(dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  chronology.getMinYear(dayOfMonth);	  int    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	141	None	replace
1374	[BUG]  [BUGGY]  int  iMin  =  chronology.getMinYear()  -  leapMonth;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  chronology.getMinYear()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  chronology.getMinYear()  -  leapMonth;	  int    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	141	None	replace
1375	[BUG]  [BUGGY]  int  iMin  =  chronology.getMaxYear();  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  chronology.getMaxYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  chronology.getMaxYear();	  int    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	141	None	replace
1376	[BUG]  [BUGGY]  int  iMin  =  chronology.getMinYear()  -  1;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  chronology.getMinYear()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  chronology.getMinYear()  -  1;	  int    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	141	None	replace
1377	[BUG]  [BUGGY]  int  iMin  =  chronology.getMinYear()  *  leapMonth;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  chronology.getMinYear()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  chronology.getMinYear()  *  leapMonth;	  int    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	141	None	replace
1378	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)  [CE]  ';'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)	  iChronology    =    chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  ';'  expected	281	None	replace
1379	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1);	  iChronology    =    chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	281	None	replace
1380	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfYear(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfYear(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfYear(),  leapMonth);	  iChronology    =    chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	281	None	replace
1381	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  leapMonth);  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  leapMonth);	  iChronology    =    chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  ';'  expected	281	None	replace
1382	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfYear().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfYear().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfYear().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);	  iChronology    =    chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	281	None	replace
1383	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMONTth);  [CE]  cannot  find  symbol  leapMONTth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMONTth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMONTth);	  iChronology    =    chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  leapMONTth	281	None	replace
1384	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapmonth);  [CE]  cannot  find  symbol  leapmonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapmonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapmonth);	  iChronology    =    chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  leapmonth	281	None	replace
1385	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth  +  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth  +  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	161	None	replace
1386	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth  +  2;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth  +  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth  +  2;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	161	None	replace
1387	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth()  *  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth()  *  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	161	None	replace
1388	[BUG]  [BUGGY]  iMonth  =  chronology.getMonthOfYear(1);  [CE]  cannot  find  symbol  iMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMonthOfYear(1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonthOfYear(1);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear(1);    	non-compiled	[CE]  cannot  find  symbol  iMonth	271	None	replace
1389	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth(1);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth(1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth(1);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear(1);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	271	None	replace
1390	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear(2);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear(2);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear(2);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear(1);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	271	None	replace
1391	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getMonthOfYear(1);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getMonthOfYear(1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getMonthOfYear(1);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear(1);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	271	None	replace
1392	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear(1)  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear(1)  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear(1)  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear(1);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	271	None	replace
1393	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear(3);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear(3);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear(3);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear(1);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	271	None	replace
1394	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getYear(1);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getYear(1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getYear(1);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear(1);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	271	None	replace
1395	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear(1)+  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear(1)+  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear(1)+  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear(1);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	271	None	replace
1396	[BUG]  [BUGGY]  iChronology  =  iChronology.withBasicChronology(chronology);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  iChronology.withBasicChronology(chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  iChronology.withBasicChronology(chronology);	  iChronology    =    chronology.withBasicChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
1397	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(iChronology,  leapMonth);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(iChronology,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(iChronology,  leapMonth);	  iChronology    =    chronology.withBasicChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
1398	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(iFieldType,  iChronology);  [CE]  cannot  find  symbol  iFieldType  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(iFieldType,  iChronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(iFieldType,  iChronology);	  iChronology    =    chronology.withBasicChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol  iFieldType	19	None	replace
1399	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(iCronology);  [CE]  cannot  find  symbol  iCronology  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(iCronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(iCronology);	  iChronology    =    chronology.withBasicChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol  iCronology	19	None	replace
1400	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(iHronology);  [CE]  cannot  find  symbol  iHronology  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(iHronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(iHronology);	  iChronology    =    chronology.withBasicChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol  iHronology	19	None	replace
1401	[BUG]  [BUGGY]  iMin  =  this.iChronology.getMinYear()  +  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  this.iChronology.getMinYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  this.iChronology.getMinYear()  +  leapMonth;	  iMin    =    this.iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	55	None	replace
1402	[BUG]  [BUGGY]  int  iMin  =  this.iChronology.getMinYear();  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  this.iChronology.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  this.iChronology.getMinYear();	  iMin    =    this.iChronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	55	None	replace
1403	[BUG]  [BUGGY]  iMin  =  this.iChronology.getMinYear()  +  1;  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  this.iChronology.getMinYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  this.iChronology.getMinYear()  +  1;	  iMin    =    this.iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	55	None	replace
1404	[BUG]  [BUGGY]  iMin  =  this.iChronology.getMaxYear();  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  this.iChronology.getMaxYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  this.iChronology.getMaxYear();	  iMin    =    this.iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	55	None	replace
1405	[BUG]  [BUGGY]  iMin  =  the.iChronology.getMinYear();  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  the.iChronology.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  the.iChronology.getMinYear();	  iMin    =    this.iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	55	None	replace
1406	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  1;	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    1;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	323	None	replace
1407	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  &&  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  &&  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  &&  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  1;	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    1;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	323	None	replace
1408	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfYear()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfYear()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfYear()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  1;	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    1;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	323	None	replace
1409	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfYear  ==  null?  chronology.dayOfMonth  :  1;  [CE]  cannot  find  symbol  dayOfYear  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfYear  ==  null?  chronology.dayOfMonth  :  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfYear  ==  null?  chronology.dayOfMonth  :  1;	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    1;    	non-compiled	[CE]  cannot  find  symbol  dayOfYear	323	None	replace
1410	[BUG]  [BUGGY]  iChronology  =  chronology.monthOfYear()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.monthOfYear()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.monthOfYear()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  1;	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    1;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	323	None	replace
1411	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  leapMonth  ==  null?  chronology.dayOfMonth  :  1;  [CE]  incomparable  types:  int  and  <null>  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  leapMonth  ==  null?  chronology.dayOfMonth  :  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  leapMonth  ==  null?  chronology.dayOfMonth  :  1;	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    1;    	non-compiled	[CE]  incomparable  types:  int  and  <null>	323	None	replace
1412	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  iChronology.getMonthOfYear();  [CE]  method  getChronology  in  class  DateTimeUtils  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  iChronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  iChronology.getMonthOfYear();	  Integer    iChronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    iChronology.getMonthOfYear();    	non-compiled	[CE]  method  getChronology  in  class  DateTimeUtils  cannot  be  applied  to  given  types;	262	None	replace
1413	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.dayOfMonth();  [CE]  incompatible  types  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.dayOfMonth();	  Integer    iChronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    iChronology.getMonthOfYear();    	non-compiled	[CE]  incompatible  types	262	None	replace
1414	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getMonthOfYear()  +  leapMonth;  [CE]  incompatible  types  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getMonthOfYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getMonthOfYear()  +  leapMonth;	  Integer    iChronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    iChronology.getMonthOfYear();    	non-compiled	[CE]  incompatible  types	262	None	replace
1415	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getDayOfMonth();  [CE]  incompatible  types  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getDayOfMonth();	  Integer    iChronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    iChronology.getMonthOfYear();    	non-compiled	[CE]  incompatible  types	262	None	replace
1416	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth()  +  leapMonth;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getDayOfMonth()  +  leapMonth;	  int    leapMonth    =    iChronology.getDayOfMonth()    +    leapMonth;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	83	None	replace
1417	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  +  leapMonth  +  1;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  +  leapMonth  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth()  +  leapMonth  +  1;	  int    leapMonth    =    iChronology.getDayOfMonth()    +    leapMonth;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	83	None	replace
1418	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  +  leapMonth  *  1;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  +  leapMonth  *  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth()  +  leapMonth  *  1;	  int    leapMonth    =    iChronology.getDayOfMonth()    +    leapMonth;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	83	None	replace
1419	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  +  leapMonth  *  2;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  +  leapMonth  *  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth()  +  leapMonth  *  2;	  int    leapMonth    =    iChronology.getDayOfMonth()    +    leapMonth;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	83	None	replace
1420	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth()  /  leapMonth;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth()  /  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getDayOfMonth()  /  leapMonth;	  int    leapMonth    =    iChronology.getDayOfMonth()    +    leapMonth;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	83	None	replace
1421	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  31  +  1);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  31  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  31  +  1);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    31);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	169	None	replace
1422	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  31L);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  31L);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  31L);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    31);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	169	None	replace
1423	[BUG]  [BUGGY]  iChronology  =  chronology.weekOfYear;  [CE]  cannot  find  symbol  weekOfYear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.weekOfYear;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.weekOfYear;	  iChronology    =    chronology.dayOfYear;    	non-compiled	[CE]  cannot  find  symbol  weekOfYear	34	None	replace
1424	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMONTH;  [CE]  cannot  find  symbol  dayOfMONTH  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMONTH;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMONTH;	  iChronology    =    chronology.dayOfYear;    	non-compiled	[CE]  cannot  find  symbol  dayOfMONTH	34	None	replace
1425	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.monthOfYear;  [CE]  cannot  find  symbol  monthOfYear  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.monthOfYear;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.monthOfYear;	  int    iLeapMonth    =    iChronology.dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  monthOfYear	108	None	replace
1426	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth  +  leapMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.dayOfMonth  +  leapMonth;	  int    iLeapMonth    =    iChronology.dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	108	None	replace
1427	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.dayOfMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.dayOfMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.dayOfMonth;	  int    iLeapMonth    =    iChronology.dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	108	None	replace
1428	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getDayOfMonth();  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getDayOfMonth();	  int    iLeapMonth    =    iChronology.dayOfMonth;    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	108	None	replace
1429	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth+1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth+1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.dayOfMonth+1;	  int    iLeapMonth    =    iChronology.dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	108	None	replace
1430	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.weekOfYear;  [CE]  cannot  find  symbol  weekOfYear  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.weekOfYear;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.weekOfYear;	  int    iLeapMonth    =    iChronology.dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  weekOfYear	108	None	replace
1431	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(dayOfMonth);	  iChronology    =    chronology.withBasicChronology(iFieldType);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	223	None	replace
1432	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(iDayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(iDayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(iDayOfMonth);	  iChronology    =    chronology.withBasicChronology(iFieldType);    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	223	None	replace
1433	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(this.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(this.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(this.dayOfMonth);	  iChronology    =    chronology.withBasicChronology(iFieldType);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	223	None	replace
1434	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(iFieldMonth);  [CE]  cannot  find  symbol  iFieldMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(iFieldMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(iFieldMonth);	  iChronology    =    chronology.withBasicChronology(iFieldType);    	non-compiled	[CE]  cannot  find  symbol  iFieldMonth	223	None	replace
1435	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(iStart);  [CE]  cannot  find  symbol  iStart  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(iStart);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(iStart);	  iChronology    =    chronology.withBasicChronology(iFieldType);    	non-compiled	[CE]  cannot  find  symbol  iStart	223	None	replace
1436	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(iMin);  [CE]  cannot  find  symbol  iMin  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(iMin);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(iMin);	  iChronology    =    chronology.withBasicChronology(iFieldType);    	non-compiled	[CE]  cannot  find  symbol  iMin	223	None	replace
1437	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(iDateTimeFieldType);  [CE]  cannot  find  symbol  iDateTimeFieldType  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(iDateTimeFieldType);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(iDateTimeFieldType);	  iChronology    =    chronology.withBasicChronology(iFieldType);    	non-compiled	[CE]  cannot  find  symbol  iDateTimeFieldType	223	None	replace
1438	[BUG]  [BUGGY]  iMin  =  chronology.getMaxDay();  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMaxDay();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMaxDay();	  iMin    =    chronology.getMaxYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	57	None	replace
1439	[BUG]  [BUGGY]  iMonth  =  chronology.getWeekOfYear();  [CE]  cannot  find  symbol  iMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getWeekOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getWeekOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getWeekOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMonth	264	None	replace
1440	[BUG]  [BUGGY]  iWeekOfYear  =  chronology.getWeekOfYear();  [CE]  cannot  find  symbol  iWeekOfYear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iWeekOfYear  =  chronology.getWeekOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iWeekOfYear  =  chronology.getWeekOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getWeekOfYear();    	non-compiled	[CE]  cannot  find  symbol  iWeekOfYear	264	None	replace
1441	[BUG]  [BUGGY]  iMonth  =  chronology.getWeeksOfYear();  [CE]  cannot  find  symbol  iMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getWeeksOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getWeeksOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getWeekOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMonth	264	None	replace
1442	[BUG]  [BUGGY]  int  iMonth  =  chronology.getWeekOfYear();  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMonth  =  chronology.getWeekOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMonth  =  chronology.getWeekOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getWeekOfYear();    	non-compiled	[CE]  cannot  find  symbol	264	None	replace
1443	[BUG]  [BUGGY]  iMonth  =  chronology.getHeightOfYear();  [CE]  cannot  find  symbol  iMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getHeightOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getHeightOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getWeekOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMonth	264	None	replace
1444	[BUG]  [BUGGY]  iMonth  =  chronology.getWeeksInYear();  [CE]  cannot  find  symbol  iMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getWeeksInYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getWeeksInYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getWeekOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMonth	264	None	replace
1445	[BUG]  [BUGGY]  iWindow  =  chronology.getWeekOfYear();  [CE]  cannot  find  symbol  iWindow  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iWindow  =  chronology.getWeekOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iWindow  =  chronology.getWeekOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getWeekOfYear();    	non-compiled	[CE]  cannot  find  symbol  iWindow	264	None	replace
1446	[BUG]  [BUGGY]  iHeight  =  chronology.getWeekOfYear();  [CE]  cannot  find  symbol  iHeight  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iHeight  =  chronology.getWeekOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iHeight  =  chronology.getWeekOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getWeekOfYear();    	non-compiled	[CE]  cannot  find  symbol  iHeight	264	None	replace
1447	[BUG]  [BUGGY]  iYear  =  chronology.getWeekOfYear();  [CE]  cannot  find  symbol  iYear  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iYear  =  chronology.getWeekOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iYear  =  chronology.getWeekOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getWeekOfYear();    	non-compiled	[CE]  cannot  find  symbol  iYear	264	None	replace
1448	[BUG]  [BUGGY]  int  leapMonth  =  this.chronology.getDayOfMonth();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  this.chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  this.chronology.getDayOfMonth();	  int    leapMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	82	None	replace
1449	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth()  /  2;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth()  /  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getDayOfMonth()  /  2;	  int    leapMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	82	None	replace
1450	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth(),  leapMonth;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth(),  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getDayOfMonth(),  leapMonth;	  int    leapMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	82	None	replace
1451	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonthOfYear()  +  leapMonth;  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonthOfYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonthOfYear()  +  leapMonth;	  int    iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
1452	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonthOfYear(dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonthOfYear(dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonthOfYear(dayOfMonth);	  int    iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	220	None	replace
1453	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonthOfYear()  -  leapMonth;  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonthOfYear()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonthOfYear()  -  leapMonth;	  int    iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
1454	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonthOfDay();  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonthOfDay();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonthOfDay();	  int    iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
1455	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonthOfYear()  *  leapMonth;  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonthOfYear()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonthOfYear()  *  leapMonth;	  int    iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
1456	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth,  leapMonth);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth,  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth()    -    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	144	None	replace
1457	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  -  leapMonth);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  -  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  -  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth()    -    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
1458	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth  +  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth  +  1);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth()    -    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	144	None	replace
1459	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth,  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth,  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth,  1);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth()    -    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	144	None	replace
1460	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth,  30);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth,  30);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth,  30);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth()    -    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	144	None	replace
1461	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth,  true);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth,  true);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth()    -    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	144	None	replace
1462	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth,  false);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth,  false);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth()    -    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	144	None	replace
1463	[BUG]  [BUGGY]  iMin  =  this.iChronology.getMinMonth()  +  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  this.iChronology.getMinMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  this.iChronology.getMinMonth()  +  leapMonth;	  iMin    =    this.iChronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	186	None	replace
1464	[BUG]  [BUGGY]  iMin  =  this.iChronology.getMinMonth()  +  1;  [CE]  cannot  find  symbol  iMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  this.iChronology.getMinMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  this.iChronology.getMinMonth()  +  1;	  iMin    =    this.iChronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	186	None	replace
1465	[BUG]  [BUGGY]  int  iMin  =  this.iChronology.getMinMonth();  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  this.iChronology.getMinMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  this.iChronology.getMinMonth();	  iMin    =    this.iChronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
1466	[BUG]  [BUGGY]  iChronology  =  chronology.monthOfYear(),  leapMonth;  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.monthOfYear(),  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.monthOfYear(),  leapMonth;	  iChronology    =    chronology.monthOfYear();    	non-compiled	[CE]  ';'  expected	37	None	replace
1467	[BUG]  [BUGGY]  iChronology  =  chronology.monthOfYear()  -  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.monthOfYear()  -  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.monthOfYear()  -  leapMonth;	  iChronology    =    chronology.monthOfYear();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	37	None	replace
1468	[BUG]  [BUGGY]  iChronology  =  chronology.monthOfYear(),  leapMonth);  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.monthOfYear(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.monthOfYear(),  leapMonth);	  iChronology    =    chronology.monthOfYear();    	non-compiled	[CE]  ';'  expected	37	None	replace
1469	[BUG]  [BUGGY]  iChronology  =  chronology.monthOfMonth();  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.monthOfMonth();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.monthOfMonth();	  iChronology    =    chronology.monthOfYear();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
1470	[BUG]  [BUGGY]  iChronology  =  chronology.monthOfYear()  -  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.monthOfYear()  -  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.monthOfYear()  -  1;	  iChronology    =    chronology.monthOfYear();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	37	None	replace
1471	[BUG]  [BUGGY]  iChronology  =  chronology.weekOfYear();  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.weekOfYear();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.weekOfYear();	  iChronology    =    chronology.monthOfYear();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
1472	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth  -  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth  -  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	132	None	replace
1473	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth  +  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth  +  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	132	None	replace
1474	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth  /  2;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth  /  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth  /  2;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	132	None	replace
1475	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth  *  2;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth  *  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth  *  2;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	132	None	replace
1476	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  DateTimeFormat  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeFormat.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  DateTimeFormat	301	None	replace
1477	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.DAY_OF_MONTH);  [CE]  cannot  find  symbol  DateTimeFormat  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.DAY_OF_MONTH);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFormat.DAY_OF_MONTH);	  iChronology    =    chronology.getInstance(DateTimeFormat.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  DateTimeFormat	301	None	replace
1478	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth()  +  leapMonth);  [CE]  cannot  find  symbol  DateTimeFormat  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth()  +  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth()  +  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeFormat.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  DateTimeFormat	301	None	replace
1479	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.DAY_OF_MONTH,  leapMonth);  [CE]  cannot  find  symbol  DateTimeFormat  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.DAY_OF_MONTH,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFormat.DAY_OF_MONTH,  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeFormat.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  DateTimeFormat	301	None	replace
1480	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.monthOfYear());  [CE]  cannot  find  symbol  DateTimeFormat  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.monthOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFormat.monthOfYear());	  iChronology    =    chronology.getInstance(DateTimeFormat.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  DateTimeFormat	301	None	replace
1481	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.DAYOF_MONTH);  [CE]  cannot  find  symbol  DateTimeFormat  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.DAYOF_MONTH);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFormat.DAYOF_MONTH);	  iChronology    =    chronology.getInstance(DateTimeFormat.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  DateTimeFormat	301	None	replace
1482	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(iFieldType,  chronology);  [CE]  cannot  find  symbol  iFieldType  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(iFieldType,  chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(iFieldType,  chronology);	  iChronology    =    chronology.getBasicChronology(chronology);    	non-compiled	[CE]  cannot  find  symbol  iFieldType	329	None	replace
1483	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(iChronology,  leapMonth);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(iChronology,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(iChronology,  leapMonth);	  iChronology    =    chronology.getBasicChronology(chronology);    	non-compiled	[CE]  cannot  find  symbol	329	None	replace
1484	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  *  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  *  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  *  leapMonth;	  iChronology    =    chronology.withUTC()    +    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	52	None	replace
1485	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth  *  Math.max(iChronology.getDayOfMonth(),  leapMonth);  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth  *  Math.max(iChronology.getDayOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  +  leapMonth  *  Math.max(iChronology.getDayOfMonth(),  leapMonth);	  iChronology    =    chronology.withUTC()    +    leapMonth;    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	52	None	replace
1486	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth,  iLeapMonth;  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth,  iLeapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  +  leapMonth,  iLeapMonth;	  iChronology    =    chronology.withUTC()    +    leapMonth;    	non-compiled	[CE]  ';'  expected	52	None	replace
1487	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  /  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  /  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  /  leapMonth;	  iChronology    =    chronology.withUTC()    +    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	52	None	replace
1488	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth,  leapMonth;  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth,  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  +  leapMonth,  leapMonth;	  iChronology    =    chronology.withUTC()    +    leapMonth;    	non-compiled	[CE]  ';'  expected	52	None	replace
1489	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth  *  Math.max(iChronology.getMinYear(),  leapMonth);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth  *  Math.max(iChronology.getMinYear(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  +  leapMonth  *  Math.max(iChronology.getMinYear(),  leapMonth);	  iChronology    =    chronology.withUTC()    +    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	52	None	replace
1490	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth  *  Math.max(iChronology.dayOfMonth(),  leapMonth);  [CE]  no  suitable  method  found  for  max(DateTimeField,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth  *  Math.max(iChronology.dayOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  +  leapMonth  *  Math.max(iChronology.dayOfMonth(),  leapMonth);	  iChronology    =    chronology.withUTC()    +    leapMonth;    	non-compiled	[CE]  no  suitable  method  found  for  max(DateTimeField,int)	52	None	replace
1491	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth  *  Math.max(iChronology.getMaxYear(),  leapMonth);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth  *  Math.max(iChronology.getMaxYear(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  +  leapMonth  *  Math.max(iChronology.getMaxYear(),  leapMonth);	  iChronology    =    chronology.withUTC()    +    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	52	None	replace
1492	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(scrollMonth);  [CE]  cannot  find  symbol  scrollMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(scrollMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(scrollMonth);	  iChronology    =    chronology.withUTC(iFieldType);    	non-compiled	[CE]  cannot  find  symbol  scrollMonth	312	None	replace
1493	[BUG]  [BUGGY]  iLeapMonth  =  chronology.getWeeksInYearMonth();  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  chronology.getWeeksInYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  chronology.getWeeksInYearMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getWeeksInYearMonth();    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
1494	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getWeeksInYearMonth()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getWeeksInYearMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getWeeksInYearMonth()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getWeeksInYearMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	236	None	replace
1495	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getWeeksInYearMonth()  *  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getWeeksInYearMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getWeeksInYearMonth()  *  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getWeeksInYearMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	236	None	replace
1496	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iLeapMonth  =  chronology.getWeeksInYearMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iLeapMonth  =  chronology.getWeeksInYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iLeapMonth  =  chronology.getWeeksInYearMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getWeeksInYearMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	236	None	replace
1497	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getWeeksInYearMonth();  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getWeeksInYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getWeeksInYearMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getWeeksInYearMonth();    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
1498	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getWeekMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getWeekMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getWeekMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getWeeksInYearMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	236	None	replace
1499	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.hourOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.hourOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.hourOfMonth(),  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	302	None	replace
1500	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfWeek(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfWeek(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfWeek(),  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	302	None	replace
1501	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMillis(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMillis(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMillis(),  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	302	None	replace
1502	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.monthOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.monthOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.monthOfMonth(),  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	302	None	replace
1503	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.weekOfYear(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.weekOfYear(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.weekOfYear(),  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	302	None	replace
1504	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.minuteOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.minuteOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.minuteOfMonth(),  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	302	None	replace
1505	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology,  chronology.getBasicChronology());  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology,  chronology.getBasicChronology());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology,  chronology.getBasicChronology());	  iChronology    =    new    BasicChronology(chronology.getBasicChronology());    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
1506	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  leapMonth);	  iChronology    =    new    BasicChronology(chronology.getBasicChronology());    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
1507	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  chronology.getDayOfMonth());  [CE]  cannot  find  symbol  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  chronology.getDayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  chronology.getDayOfMonth());	  iChronology    =    new    BasicChronology(chronology.getBasicChronology());    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
1508	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  dayOfMonth);  [CE]  cannot  find  symbol  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  dayOfMonth);	  iChronology    =    new    BasicChronology(chronology.getBasicChronology());    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
1509	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  chronology.getMonthOfYear());  [CE]  cannot  find  symbol  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  chronology.getMonthOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  chronology.getMonthOfYear());	  iChronology    =    new    BasicChronology(chronology.getBasicChronology());    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
1510	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  chronology.getBasicChronology());  [CE]  cannot  find  symbol  [FE]                                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  chronology.getBasicChronology());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  chronology.getBasicChronology());	  iChronology    =    new    BasicChronology(chronology.getBasicChronology());    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
1511	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  null);  [CE]  cannot  find  symbol  [FE]                                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  null);	  iChronology    =    new    BasicChronology(chronology.getBasicChronology());    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
1512	[BUG]  [BUGGY]  iField  =  chronology.getField(DateTimeFieldType.monthOfYear(),  leapMonth);  [CE]  cannot  find  symbol  iField  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  chronology.getField(DateTimeFieldType.monthOfYear(),  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  chronology.getField(DateTimeFieldType.monthOfYear(),  leapMonth);	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    	non-compiled	[CE]  cannot  find  symbol  iField	15	None	replace
1513	[BUG]  [BUGGY]  iField  =  chronology.getField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  iField  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  chronology.getField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  chronology.getField(DateTimeFieldType.dayOfMonth(),  leapMonth);	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    	non-compiled	[CE]  cannot  find  symbol  iField	15	None	replace
1514	[BUG]  [BUGGY]  iChronology  =  iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  null);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  null);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    null);    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
1515	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  null,  leapMonth);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  null,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  null,  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    null);    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
1516	[BUG]  [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  null);  [CE]  cannot  find  symbol  chronology  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  null);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    null);    	non-compiled	[CE]  cannot  find  symbol  chronology	184	None	replace
1517	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  this);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  this);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  this);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    null);    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
1518	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iFieldType,  chronology);  [CE]  cannot  find  symbol  iFieldType  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iFieldType,  chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iFieldType,  chronology);	  iChronology    =    chronology.getChronology(chronology);    	non-compiled	[CE]  cannot  find  symbol  iFieldType	286	None	replace
1519	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.chronology);  [CE]  cannot  find  symbol  chronology  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.chronology);	  iChronology    =    chronology.getChronology(chronology);    	non-compiled	[CE]  cannot  find  symbol  chronology	286	None	replace
1520	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iLastDayOfMonth);  [CE]  cannot  find  symbol  iLastDayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iLastDayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iLastDayOfMonth);	  iChronology    =    chronology.getChronology(chronology);    	non-compiled	[CE]  cannot  find  symbol  iLastDayOfMonth	286	None	replace
1521	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  -  2);  [CE]  cannot  find  symbol  DateTimeZone  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  -  2);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  -  2);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth    -    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	227	None	replace
1522	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  /  1);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  /  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  /  1);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth    -    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	227	None	replace
1523	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  -  1  +  1);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  -  1  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  -  1  +  1);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth    -    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	227	None	replace
1524	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  -  3);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  -  3);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  -  3);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth    -    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	227	None	replace
1525	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  -  1,  this.dayOfMonth);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  -  1,  this.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  -  1,  this.dayOfMonth);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth    -    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	227	None	replace
1526	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  -  31);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  -  31);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  -  31);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth    -    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	227	None	replace
1527	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  -  1,  1);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  -  1,  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  -  1,  1);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth    -    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	227	None	replace
1528	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.dayOfMonth()  +  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.dayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.dayOfMonth()  +  leapMonth;	  int    iLeapMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	129	None	replace
1529	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.dayOfMonth()  -  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.dayOfMonth()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.dayOfMonth()  -  leapMonth;	  int    iLeapMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	129	None	replace
1530	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.dayOfMonth(),  leapMonth;  [CE]  incompatible  types  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.dayOfMonth(),  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.dayOfMonth(),  leapMonth;	  int    iLeapMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  incompatible  types	129	None	replace
1531	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.dayOfMonth()  *  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.dayOfMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.dayOfMonth()  *  leapMonth;	  int    iLeapMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	129	None	replace
1532	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.dayOfMonth()  /  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.dayOfMonth()  /  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.dayOfMonth()  /  leapMonth;	  int    iLeapMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	129	None	replace
1533	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.dayOfMonth()  /  2;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.dayOfMonth()  /  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.dayOfMonth()  /  2;	  int    iLeapMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	129	None	replace
1534	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear(switchMonth);  [CE]  cannot  find  symbol  iMin  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear(switchMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear(switchMonth);	  iMin    =    chronology.getMinYear(switchMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	60	None	replace
1535	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear(switchMonth,  leapMonth);  [CE]  cannot  find  symbol  iMin  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear(switchMonth,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear(switchMonth,  leapMonth);	  iMin    =    chronology.getMinYear(switchMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	60	None	replace
1536	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear(switchMonth  +  leapMonth);  [CE]  cannot  find  symbol  iMin  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear(switchMonth  +  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear(switchMonth  +  leapMonth);	  iMin    =    chronology.getMinYear(switchMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	60	None	replace
1537	[BUG]  [BUGGY]  iMin  =  chronology.getMaxYear(switchMonth);  [CE]  cannot  find  symbol  iMin  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMaxYear(switchMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMaxYear(switchMonth);	  iMin    =    chronology.getMinYear(switchMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	60	None	replace
1538	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getHeapMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	162	None	replace
1539	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iLeapMonth  =  chronology.getHeapMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iLeapMonth  =  chronology.getHeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iLeapMonth  =  chronology.getHeapMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getHeapMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	162	None	replace
1540	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getWeekOfDay();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getWeekOfDay();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getWeekOfDay();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getHeapMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	162	None	replace
1541	[BUG]  [BUGGY]  iChronology  =  iChronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  false);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  iChronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  iChronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  false);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    false);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
1542	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  false),  chronology);  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  false),  chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  false),  chronology);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    false);    	non-compiled	[CE]  ';'  expected	98	None	replace
1543	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  0,  false);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  0,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  0,  false);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    false);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
1544	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  false,  chronology);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  false,  chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  false,  chronology);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    false);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
1545	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  false));  [CE]  ';'  expected  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  false));  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  false));	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    false);    	non-compiled	[CE]  ';'  expected	98	None	replace
1546	[BUG]  [BUGGY]  int  min  =  this.iChronology.getMinYear()  -  1;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  this.iChronology.getMinYear()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  this.iChronology.getMinYear()  -  1;	  int    min    =    this.iChronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	119	None	replace
1547	[BUG]  [BUGGY]  int  min  =  this.iChronology.getMinYear()  -  leapMonth;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  this.iChronology.getMinYear()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  this.iChronology.getMinYear()  -  leapMonth;	  int    min    =    this.iChronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	119	None	replace
1548	[BUG]  [BUGGY]  int  min  =  this.iChronology.getMinYear()  +  leapMonth;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  this.iChronology.getMinYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  this.iChronology.getMinYear()  +  leapMonth;	  int    min    =    this.iChronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	119	None	replace
1549	[BUG]  [BUGGY]  int  min  =  this.iChronology.getMinYear()  +  1;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  this.iChronology.getMinYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  this.iChronology.getMinYear()  +  1;	  int    min    =    this.iChronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	119	None	replace
1550	[BUG]  [BUGGY]  int  min  =  this.iChronology.getMinYear(),  leapMonth;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  this.iChronology.getMinYear(),  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  this.iChronology.getMinYear(),  leapMonth;	  int    min    =    this.iChronology.getMinYear();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	119	None	replace
1551	[BUG]  [BUGGY]  iChronology  =  chronology.withDayOfMonth()  +  leapMonth;  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withDayOfMonth()  +  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withDayOfMonth()  +  leapMonth;	  iChronology    =    chronology.withDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
1552	[BUG]  [BUGGY]  iChronology  =  chronology.withDayOfMonth(),  leapMonth;  [CE]  ';'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withDayOfMonth(),  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withDayOfMonth(),  leapMonth;	  iChronology    =    chronology.withDayOfMonth();    	non-compiled	[CE]  ';'  expected	48	None	replace
1553	[BUG]  [BUGGY]  iChronology  =  chronology.withDayOfMonth()  -  leapMonth;  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withDayOfMonth()  -  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withDayOfMonth()  -  leapMonth;	  iChronology    =    chronology.withDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
1554	[BUG]  [BUGGY]  iChronology  =  chronology.withDayOfMonth()  *  leapMonth;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withDayOfMonth()  *  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withDayOfMonth()  *  leapMonth;	  iChronology    =    chronology.withDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
1555	[BUG]  [BUGGY]  iChronology  =  chronology.withDayOfMonth(iLeapMonth);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withDayOfMonth(iLeapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withDayOfMonth(iLeapMonth);	  iChronology    =    chronology.withDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
1556	[BUG]  [BUGGY]  iChronology  =  chronology.withDayOfMonth(),  leapMonth);  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withDayOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withDayOfMonth(),  leapMonth);	  iChronology    =    chronology.withDayOfMonth();    	non-compiled	[CE]  ';'  expected	48	None	replace
1557	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth  +  1);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth  +  1);	  iChronology    =    chronology.getInstance(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	154	None	replace
1558	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth,  MIN);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth,  MIN);	  iChronology    =    chronology.getInstance(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	154	None	replace
1559	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth,  this.max);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth,  this.max);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth,  this.max);	  iChronology    =    chronology.getInstance(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	154	None	replace
1560	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth,  this.min);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth,  this.min);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth,  this.min);	  iChronology    =    chronology.getInstance(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	154	None	replace
1561	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth,  1);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth,  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth,  1);	  iChronology    =    chronology.getInstance(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	154	None	replace
1562	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth)+  1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth)+  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth)+  1;	  iChronology    =    chronology.getInstance(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	154	None	replace
1563	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth,  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth,  leapMonth);	  iChronology    =    chronology.getInstance(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	154	None	replace
1564	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  jumpMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  jumpMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  jumpMonth);	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	176	None	replace
1565	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  dayOfMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  dayOfMonth);	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	176	None	replace
1566	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  leapMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  leapMonth);	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	176	None	replace
1567	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	176	None	replace
1568	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null);	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	176	None	replace
1569	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this,  MIN);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this,  MIN);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    this);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	228	None	replace
1570	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this,  dayOfMonth);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this,  dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this,  dayOfMonth);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    this);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	228	None	replace
1571	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this,  30);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this,  30);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this,  30);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    this);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	228	None	replace
1572	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this  +  1);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this  +  1);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    this);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	228	None	replace
1573	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  -  1);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  -  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  -  1);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    -    1);    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
1574	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  1,  leapMonth);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  1,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  1,  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	183	None	replace
1575	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  /  1);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  /  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  /  1);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	183	None	replace
1576	[BUG]  [BUGGY]  iMin  =  chronology.getMinMonth()  +  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinMonth()  +  leapMonth;	  iMin    =    iChronology.getMinMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iMin	149	None	replace
1577	[BUG]  [BUGGY]  iMin  =  iChronology.getMinMonth()  *  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinMonth()  *  leapMonth;	  iMin    =    iChronology.getMinMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iMin	149	None	replace
1578	[BUG]  [BUGGY]  iMin  =  chronology.getMaxMonth()  +  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMaxMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMaxMonth()  +  leapMonth;	  iMin    =    iChronology.getMinMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iMin	149	None	replace
1579	[BUG]  [BUGGY]  iMax  =  chronology.getMinMonth()  +  leapMonth;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMax  =  chronology.getMinMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMax  =  chronology.getMinMonth()  +  leapMonth;	  iMin    =    iChronology.getMinMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
1580	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iChronology),  this.dayOfMonth.getChronology();  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iChronology),  this.dayOfMonth.getChronology();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iChronology),  this.dayOfMonth.getChronology();	  iChronology    =    chronology.getChronology(iChronology).getChronology();    	non-compiled	[CE]  ';'  expected	32	None	replace
1581	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iChronology),  iChronology.getChronology();  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iChronology),  iChronology.getChronology();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iChronology),  iChronology.getChronology();	  iChronology    =    chronology.getChronology(iChronology).getChronology();    	non-compiled	[CE]  ';'  expected	32	None	replace
1582	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iChronology),  leapMonth,  chronology.getChronology();  [CE]  ';'  expected  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iChronology),  leapMonth,  chronology.getChronology();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iChronology),  leapMonth,  chronology.getChronology();	  iChronology    =    chronology.getChronology(iChronology).getChronology();    	non-compiled	[CE]  ';'  expected	32	None	replace
1583	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.iChronology).getChronology();  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.iChronology).getChronology();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.iChronology).getChronology();	  iChronology    =    chronology.getChronology(iChronology).getChronology();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
1584	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iChronology),  chronology.getChronology();  [CE]  ';'  expected  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iChronology),  chronology.getChronology();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iChronology),  chronology.getChronology();	  iChronology    =    chronology.getChronology(iChronology).getChronology();    	non-compiled	[CE]  ';'  expected	32	None	replace
1585	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iChronology),  iMin.getChronology();  [CE]  ';'  expected  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iChronology),  iMin.getChronology();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iChronology),  iMin.getChronology();	  iChronology    =    chronology.getChronology(iChronology).getChronology();    	non-compiled	[CE]  ';'  expected	32	None	replace
1586	[BUG]  [BUGGY]  iChronology  =  iChronology.getChronology(chronology).getChronology();  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  iChronology.getChronology(chronology).getChronology();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  iChronology.getChronology(chronology).getChronology();	  iChronology    =    chronology.getChronology(iChronology).getChronology();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
1587	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iChronology),  dataArea.getChronology();  [CE]  ';'  expected  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iChronology),  dataArea.getChronology();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iChronology),  dataArea.getChronology();	  iChronology    =    chronology.getChronology(iChronology).getChronology();    	non-compiled	[CE]  ';'  expected	32	None	replace
1588	[BUG]  [BUGGY]  iChronology  =  iChronology.getBasicChronology(this.chronology);  [CE]  cannot  find  symbol  chronology  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  iChronology.getBasicChronology(this.chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  iChronology.getBasicChronology(this.chronology);	  iChronology    =    chronology.getBasicChronology(this.chronology);    	non-compiled	[CE]  cannot  find  symbol  chronology	328	None	replace
1589	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.chronology,  leapMonth);  [CE]  cannot  find  symbol  chronology  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.chronology,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.chronology,  leapMonth);	  iChronology    =    chronology.getBasicChronology(this.chronology);    	non-compiled	[CE]  cannot  find  symbol  chronology	328	None	replace
1590	[BUG]  [BUGGY]  iChronology  =  this.chronology.getBasicChronology(chronology);  [CE]  cannot  find  symbol  chronology  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getBasicChronology(chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getBasicChronology(chronology);	  iChronology    =    chronology.getBasicChronology(this.chronology);    	non-compiled	[CE]  cannot  find  symbol  chronology	328	None	replace
1591	[BUG]  [BUGGY]  iChronology  =  iChronology.getBasicChronology(chronology);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  iChronology.getBasicChronology(chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  iChronology.getBasicChronology(chronology);	  iChronology    =    chronology.getBasicChronology(this.chronology);    	non-compiled	[CE]  cannot  find  symbol	328	None	replace
1592	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(new  BasicChronology(this.chronology));  [CE]  cannot  find  symbol  chronology  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(new  BasicChronology(this.chronology));  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(new  BasicChronology(this.chronology));	  iChronology    =    chronology.getBasicChronology(this.chronology);    	non-compiled	[CE]  cannot  find  symbol  chronology	328	None	replace
1593	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.chronology,  this.dayOfMonth);  [CE]  cannot  find  symbol  chronology  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.chronology,  this.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.chronology,  this.dayOfMonth);	  iChronology    =    chronology.getBasicChronology(this.chronology);    	non-compiled	[CE]  cannot  find  symbol  chronology	328	None	replace
1594	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-1,  leapMonth);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-1,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-1,  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth-1);    	non-compiled	[CE]  cannot  find  symbol	241	None	replace
1595	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-2);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-2);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-2);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth-1);    	non-compiled	[CE]  cannot  find  symbol	241	None	replace
1596	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-1,  1);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-1,  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-1,  1);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth-1);    	non-compiled	[CE]  cannot  find  symbol	241	None	replace
1597	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-1,  null);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-1,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-1,  null);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth-1);    	non-compiled	[CE]  cannot  find  symbol	241	None	replace
1598	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-1,  false);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-1,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-1,  false);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth-1);    	non-compiled	[CE]  cannot  find  symbol	241	None	replace
1599	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-1,  true);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-1,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-1,  true);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth-1);    	non-compiled	[CE]  cannot  find  symbol	241	None	replace
1600	[BUG]  [BUGGY]  iMin  =  this.iChronology.getMinYearMonth();  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  this.iChronology.getMinYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  this.iChronology.getMinYearMonth();	  iMin    =    iChronology.getMinYearMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	152	None	replace
1601	[BUG]  [BUGGY]  iMin  =  leapMonth.getMinYearMonth();  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  leapMonth.getMinYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  leapMonth.getMinYearMonth();	  iMin    =    iChronology.getMinYearMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	152	None	replace
1602	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYearMonth()  +  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYearMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYearMonth()  +  leapMonth;	  iMin    =    iChronology.getMinYearMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	152	None	replace
1603	[BUG]  [BUGGY]  iMax  =  chronology.getMinYearMonth();  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMax  =  chronology.getMinYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMax  =  chronology.getMinYearMonth();	  iMin    =    iChronology.getMinYearMonth();    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
1604	[BUG]  [BUGGY]  iMin  =  time.getMinYearMonth();  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  time.getMinYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  time.getMinYearMonth();	  iMin    =    iChronology.getMinYearMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	152	None	replace
1605	[BUG]  [BUGGY]  iMin  =  date.getMinYearMonth();  [CE]  cannot  find  symbol  iMin  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  date.getMinYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  date.getMinYearMonth();	  iMin    =    iChronology.getMinYearMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	152	None	replace
1606	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()));  [CE]  cannot  find  symbol  chronology  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()));  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()));	  iChronology    =    this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  chronology	73	None	replace
1607	[BUG]  [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth);	  iChronology    =    this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	73	None	replace
1608	[BUG]  [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth);	  iChronology    =    this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	73	None	replace
1609	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	230	None	replace
1610	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	230	None	replace
1611	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	230	None	replace
1612	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  *  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  *  leapMonth;	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	230	None	replace
1613	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  iDayOfMonth  =  chronology.getDayOfMonth();	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	230	None	replace
1614	[BUG]  [BUGGY]  int  iLeapMonth  =  dayOfMonth.getLeapMonth();  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  dayOfMonth.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  dayOfMonth.getLeapMonth();	  int    iLeapMonth    =    data.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	180	None	replace
1615	[BUG]  [BUGGY]  int  iLeapMonth  =  iDate.getLeapMonth();  [CE]  cannot  find  symbol  iDate  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iDate.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iDate.getLeapMonth();	  int    iLeapMonth    =    data.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  iDate	180	None	replace
1616	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	43	None	replace
1617	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfYear()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfYear()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfYear()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth!=    null?    chronology.dayOfMonth    :    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	319	None	replace
1618	[BUG]  [BUGGY]  iChronology  =  chronology.monthOfYear()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.monthOfYear()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.monthOfYear()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth!=    null?    chronology.dayOfMonth    :    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	319	None	replace
1619	[BUG]  [BUGGY]  iChronology  =  chronology.monthOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.monthOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.monthOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth!=    null?    chronology.dayOfMonth    :    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	319	None	replace
1620	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(iFieldType,  iChronology);  [CE]  cannot  find  symbol  iFieldType  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(iFieldType,  iChronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(iFieldType,  iChronology);	  iChronology    =    chronology.getBasicChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol  iFieldType	18	None	replace
1621	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.iChronology);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.iChronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.iChronology);	  iChronology    =    chronology.getBasicChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
1622	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(iChronology).getBasicChronology();  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(iChronology).getBasicChronology();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(iChronology).getBasicChronology();	  iChronology    =    chronology.getBasicChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
1623	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(iHronology);  [CE]  cannot  find  symbol  iHronology  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(iHronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(iHronology);	  iChronology    =    chronology.getBasicChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol  iHronology	18	None	replace
1624	[BUG]  [BUGGY]  iMin  =  chronology.getMinWeekOfYear();  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinWeekOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinWeekOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	68	None	replace
1625	[BUG]  [BUGGY]  iMin  =  chronology.getMiny();  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMiny();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMiny();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	68	None	replace
1626	[BUG]  [BUGGY]  iMin  =  chronology.getMinUnth();  [CE]  cannot  find  symbol  iMin  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinUnth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinUnth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	68	None	replace
1627	[BUG]  [BUGGY]  iMonth  =  chronology.dayOfMonth();  [CE]  cannot  find  symbol  iMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.dayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMonth	45	None	replace
1628	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.dayOfMonth()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.dayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.dayOfMonth()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	45	None	replace
1629	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.dayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.dayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	45	None	replace
1630	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth();  iMonth  =  chronology.dayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth();  iMonth  =  chronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth();  iMonth  =  chronology.dayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	45	None	replace
1631	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.dayOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.dayOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.dayOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	45	None	replace
1632	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.monthOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.monthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.monthOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	45	None	replace
1633	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iMonth  =  chronology.dayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iMonth  =  chronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iMonth  =  chronology.dayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	45	None	replace
1634	[BUG]  [BUGGY]  iMonth  =  DateTimeUtils.getChronology(chronology).dayOfMonth();  [CE]  cannot  find  symbol  iMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  DateTimeUtils.getChronology(chronology).dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  DateTimeUtils.getChronology(chronology).dayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMonth	45	None	replace
1635	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(),  leapMonth  +  1;  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(),  leapMonth  +  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(),  leapMonth  +  1;	  iChronology    =    chronology.withUTC(),    leapMonth;    	non-compiled	[CE]  ';'  expected	51	None	replace
1636	[BUG]  [BUGGY]  iChronology  =  chronology.withZone(),  leapMonth;  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withZone(),  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withZone(),  leapMonth;	  iChronology    =    chronology.withUTC(),    leapMonth;    	non-compiled	[CE]  ';'  expected	51	None	replace
1637	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(),  leapMonth  +  2;  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(),  leapMonth  +  2;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(),  leapMonth  +  2;	  iChronology    =    chronology.withUTC(),    leapMonth;    	non-compiled	[CE]  ';'  expected	51	None	replace
1638	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(),  leapMonth  -  leapMonth;  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(),  leapMonth  -  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(),  leapMonth  -  leapMonth;	  iChronology    =    chronology.withUTC(),    leapMonth;    	non-compiled	[CE]  ';'  expected	51	None	replace
1639	[BUG]  [BUGGY]  iChronology  =  chronology.withZone(this.dayOfMonth),  leapMonth;  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withZone(this.dayOfMonth),  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withZone(this.dayOfMonth),  leapMonth;	  iChronology    =    chronology.withUTC(),    leapMonth;    	non-compiled	[CE]  ';'  expected	51	None	replace
1640	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(),  leapMonth  -  1;  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(),  leapMonth  -  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(),  leapMonth  -  1;	  iChronology    =    chronology.withUTC(),    leapMonth;    	non-compiled	[CE]  ';'  expected	51	None	replace
1641	[BUG]  [BUGGY]  iChronology  =  chronology.withLocalMillis(),  leapMonth;  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withLocalMillis(),  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withLocalMillis(),  leapMonth;	  iChronology    =    chronology.withUTC(),    leapMonth;    	non-compiled	[CE]  ';'  expected	51	None	replace
1642	[BUG]  [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth()  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iField  =  DateTimeFieldType.dayOfMonth()  +  1;	  iField    =    DateTimeFieldType.dayOfMonth()    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	213	None	replace
1643	[BUG]  [BUGGY]  this.dayOfMonth  =  DateTimeFieldType.dayOfMonth()  +  1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  this.dayOfMonth  =  DateTimeFieldType.dayOfMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	this.dayOfMonth  =  DateTimeFieldType.dayOfMonth()  +  1;	  iField    =    DateTimeFieldType.dayOfMonth()    +    1;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	213	None	replace
1644	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfYear()  +  1;  [CE]  cannot  find  symbol  iField  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.dayOfYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfYear()  +  1;	  iField    =    DateTimeFieldType.dayOfMonth()    +    1;    	non-compiled	[CE]  cannot  find  symbol  iField	213	None	replace
1645	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfYear()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  leapMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfYear()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfYear()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  leapMonth;	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	320	None	replace
1646	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  &&  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  dayOfMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  &&  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  dayOfMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  &&  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  dayOfMonth;	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	320	None	replace
1647	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfYear  ==  null?  chronology.dayOfMonth  :  leapMonth;  [CE]  cannot  find  symbol  dayOfYear  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfYear  ==  null?  chronology.dayOfMonth  :  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfYear  ==  null?  chronology.dayOfMonth  :  leapMonth;	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfYear	320	None	replace
1648	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfYear()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  dayOfMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfYear()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  dayOfMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfYear()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  dayOfMonth;	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	320	None	replace
1649	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(null,  null);  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(null,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(null,  null);	  iChronology    =    chronology.getBasicChronology(null);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
1650	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(null,  false);  [CE]  cannot  find  symbol  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(null,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(null,  false);	  iChronology    =    chronology.getBasicChronology(null);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
1651	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(dataset);  [CE]  cannot  find  symbol  dataset  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(dataset);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(dataset);	  iChronology    =    chronology.getBasicChronology(null);    	non-compiled	[CE]  cannot  find  symbol  dataset	23	None	replace
1652	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  null);  [CE]  cannot  find  symbol  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this,  null);	  iChronology    =    chronology.getBasicChronology(null);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
1653	[BUG]  [BUGGY]  iChronology  =  DateTimeFieldType.dayOfYear();  [CE]  incompatible  types  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  DateTimeFieldType.dayOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  DateTimeFieldType.dayOfYear();	  iField    =    DateTimeFieldType.dayOfYear();    	non-compiled	[CE]  incompatible  types	89	None	replace
1654	[BUG]  [BUGGY]  int  iField  =  DateTimeFieldType.dayOfYear();  [CE]  incompatible  types  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iField  =  DateTimeFieldType.dayOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iField  =  DateTimeFieldType.dayOfYear();	  iField    =    DateTimeFieldType.dayOfYear();    	non-compiled	[CE]  incompatible  types	89	None	replace
1655	[BUG]  [BUGGY]  this.iField  =  DateTimeFieldType.dayOfYear();  [CE]  cannot  find  symbol  iField  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  this.iField  =  DateTimeFieldType.dayOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	this.iField  =  DateTimeFieldType.dayOfYear();	  iField    =    DateTimeFieldType.dayOfYear();    	non-compiled	[CE]  cannot  find  symbol  iField	89	None	replace
1656	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.monthOfYear();  [CE]  cannot  find  symbol  iField  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.monthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.monthOfYear();	  iField    =    DateTimeFieldType.dayOfYear();    	non-compiled	[CE]  cannot  find  symbol  iField	89	None	replace
1657	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this,  null);  [CE]  no  suitable  method  found  for  withUTC(BasicMonthOfYearDateTimeField,<null>)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this,  null);	  iChronology    =    chronology.withUTC(null);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(BasicMonthOfYearDateTimeField,<null>)	205	None	replace
1658	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(new  BasicChronology(chronology,  null));  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(new  BasicChronology(chronology,  null));  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(new  BasicChronology(chronology,  null));	  iChronology    =    chronology.withUTC(null);    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	205	None	replace
1659	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(new  BasicChronology(chronology,  null),  null);  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(new  BasicChronology(chronology,  null),  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(new  BasicChronology(chronology,  null),  null);	  iChronology    =    chronology.withUTC(null);    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	205	None	replace
1660	[BUG]  [BUGGY]  iChronology  =(chronology!=  null)?  chronology.dayOfYear()  :  DateTimeUtils.currentTimeMillis();  [CE]  incompatible  types  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =(chronology!=  null)?  chronology.dayOfYear()  :  DateTimeUtils.currentTimeMillis();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =(chronology!=  null)?  chronology.dayOfYear()  :  DateTimeUtils.currentTimeMillis();	  iChronology    =    chronology.dayOfYear();    	non-compiled	[CE]  incompatible  types	115	None	replace
1661	[BUG]  [BUGGY]  iChronology  =(chronology!=  null)?  chronology.dayOfYear()  :  dayOfYear;  [CE]  cannot  find  symbol  dayOfYear  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =(chronology!=  null)?  chronology.dayOfYear()  :  dayOfYear;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =(chronology!=  null)?  chronology.dayOfYear()  :  dayOfYear;	  iChronology    =    chronology.dayOfYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfYear	115	None	replace
1662	[BUG]  [BUGGY]  iChronology  =(chronology  ==  null)?  chronology.dayOfYear()  :  DateTimeUtils.currentTimeMillis();  [CE]  incompatible  types  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =(chronology  ==  null)?  chronology.dayOfYear()  :  DateTimeUtils.currentTimeMillis();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =(chronology  ==  null)?  chronology.dayOfYear()  :  DateTimeUtils.currentTimeMillis();	  iChronology    =    chronology.dayOfYear();    	non-compiled	[CE]  incompatible  types	115	None	replace
1663	[BUG]  [BUGGY]  iChronology  =(chronology  ==  null)?  chronology.dayOfYear()  :  dayOfYear;  [CE]  cannot  find  symbol  dayOfYear  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =(chronology  ==  null)?  chronology.dayOfYear()  :  dayOfYear;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =(chronology  ==  null)?  chronology.dayOfYear()  :  dayOfYear;	  iChronology    =    chronology.dayOfYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfYear	115	None	replace
1664	[BUG]  [BUGGY]  iChronology  =(chronology!=  null)?  chronology.dayOfYear()  :  new  BasicChronology(chronology.dayOfMonth());  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =(chronology!=  null)?  chronology.dayOfYear()  :  new  BasicChronology(chronology.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =(chronology!=  null)?  chronology.dayOfYear()  :  new  BasicChronology(chronology.dayOfMonth());	  iChronology    =    chronology.dayOfYear();    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	115	None	replace
1665	[BUG]  [BUGGY]  iChronology  =(chronology!=  null)?  chronology.dayOfYear()  :  DateTimeUtils.getChronology(chronology);  [CE]  incompatible  types  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =(chronology!=  null)?  chronology.dayOfYear()  :  DateTimeUtils.getChronology(chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =(chronology!=  null)?  chronology.dayOfYear()  :  DateTimeUtils.getChronology(chronology);	  iChronology    =    chronology.dayOfYear();    	non-compiled	[CE]  incompatible  types	115	None	replace
1666	[BUG]  [BUGGY]  iChronology  =(chronology!=  null)?  chronology.dayOfYear()  :  DayOfYear.DAY_OF_MONTH;  [CE]  cannot  find  symbol  DayOfYear  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =(chronology!=  null)?  chronology.dayOfYear()  :  DayOfYear.DAY_OF_MONTH;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =(chronology!=  null)?  chronology.dayOfYear()  :  DayOfYear.DAY_OF_MONTH;	  iChronology    =    chronology.dayOfYear();    	non-compiled	[CE]  cannot  find  symbol  DayOfYear	115	None	replace
1667	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(strMonth);  [CE]  cannot  find  symbol  strMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(strMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth(strMonth);	  iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  strMonth	208	None	replace
1668	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(min);  [CE]  cannot  find  symbol  min  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(min);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth(min);	  iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  min	208	None	replace
1669	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(spitchMonth);  [CE]  cannot  find  symbol  spitchMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(spitchMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth(spitchMonth);	  iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  spitchMonth	208	None	replace
1670	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.min);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.min);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.min);	  iChronology    =    chronology.getBasicChronology(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	21	None	replace
1671	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.max);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.max);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.max);	  iChronology    =    chronology.getBasicChronology(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	21	None	replace
1672	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth-1);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth-1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth-1);	  iChronology    =    chronology.getBasicChronology(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	21	None	replace
1673	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.minute);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.minute);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.minute);	  iChronology    =    chronology.getBasicChronology(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	21	None	replace
1674	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth;  [CE]  ')'  expected  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  leapMonth;	  iChronology    =    chronology.getBasicChronology(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  ')'  expected	21	None	replace
1675	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  iChronology.getDayOfMonth();  [CE]  incompatible  types  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  iChronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  iChronology.getDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  incompatible  types	233	None	replace
1676	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDate  =  chronology.getDate  [CE]  ';'  expected  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDate  =  chronology.getDate  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDate  =  chronology.getDate	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  ';'  expected	233	None	replace
1677	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(this.chronology.getInstance(DateTimeFieldType.dayOfMonth()));  [CE]  cannot  find  symbol  chronology  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(this.chronology.getInstance(DateTimeFieldType.dayOfMonth()));  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(this.chronology.getInstance(DateTimeFieldType.dayOfMonth()));	  iChronology    =    this.chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  chronology	146	None	replace
1678	[BUG]  [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  dayOfMonth);	  iChronology    =    this.chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	146	None	replace
1679	[BUG]  [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  30);  [CE]  cannot  find  symbol  chronology  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  30);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  30);	  iChronology    =    this.chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  chronology	146	None	replace
1680	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  +  leapMonth-  1;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  +  leapMonth-  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth()  +  leapMonth-  1;	  int    leapMonth    =    iChronology.getDayOfMonth()    +    leapMonth;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	83	None	replace
1681	[BUG]  [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    false);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	170	None	replace
1682	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false),  chronology);  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false),  chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false),  chronology);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    false);    	non-compiled	[CE]  ';'  expected	170	None	replace
1683	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(pivotMonth);  [CE]  cannot  find  symbol  pivotMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(pivotMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(pivotMonth);	  iChronology    =    chronology.withUTC(iFieldType);    	non-compiled	[CE]  cannot  find  symbol  pivotMonth	312	None	replace
1684	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  iLeapMonth);  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  iLeapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  iLeapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth),    leapMonth);    	non-compiled	[CE]  ';'  expected	77	None	replace
1685	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  this);  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  this);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  this);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth),    leapMonth);    	non-compiled	[CE]  ';'  expected	77	None	replace
1686	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  chronology);  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  chronology);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth),    leapMonth);    	non-compiled	[CE]  ';'  expected	77	None	replace
1687	[BUG]  [BUGGY]  iDAYOfMonth  =  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  iDAYOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iDAYOfMonth  =  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iDAYOfMonth  =  DateTimeFieldType.dayOfMonth();	  iDayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDAYOfMonth	212	None	replace
1688	[BUG]  [BUGGY]  iDayOfMonth  =  DateTimeFieldType.dayOfMonth()  +  1;  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iDayOfMonth  =  DateTimeFieldType.dayOfMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iDayOfMonth  =  DateTimeFieldType.dayOfMonth()  +  1;	  iDayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	212	None	replace
1689	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(chronology.getDefault());  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(chronology.getDefault());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(chronology.getDefault());	  iChronology    =    chronology.withUTC(iDateTimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol	314	None	replace
1690	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth.getDefault());  [CE]  cannot  find  symbol  dayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth.getDefault());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.dayOfMonth.getDefault());	  iChronology    =    chronology.withUTC(iDateTimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	314	None	replace
1691	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(chronology.getInstance());  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(chronology.getInstance());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(chronology.getInstance());	  iChronology    =    chronology.withUTC(iDateTimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol	314	None	replace
1692	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(chronology.getDate());  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(chronology.getDate());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(chronology.getDate());	  iChronology    =    chronology.withUTC(iDateTimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol	314	None	replace
1693	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(variance.getDefault());  [CE]  cannot  find  symbol  variance  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(variance.getDefault());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(variance.getDefault());	  iChronology    =    chronology.withUTC(iDateTimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  variance	314	None	replace
1694	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(this.iChronology);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(this.iChronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(this.iChronology);	  iChronology    =    chronology.withBasicChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
1695	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(iJsFieldType);  [CE]  cannot  find  symbol  iJsFieldType  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(iJsFieldType);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(iJsFieldType);	  iChronology    =    chronology.withBasicChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol  iJsFieldType	19	None	replace
1696	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(iHorizonology);  [CE]  cannot  find  symbol  iHorizonology  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(iHorizonology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(iHorizonology);	  iChronology    =    chronology.withBasicChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol  iHorizonology	19	None	replace
1697	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(iJsFieldType,  iChronology);  [CE]  cannot  find  symbol  iJsFieldType  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(iJsFieldType,  iChronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(iJsFieldType,  iChronology);	  iChronology    =    chronology.withBasicChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol  iJsFieldType	19	None	replace
1698	[BUG]  [BUGGY]  if(iMin!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMaxYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	66	None	replace
1699	[BUG]  [BUGGY]  if(iMin!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  iMin  =  chronology.getMinYear();  iMax  =  chronology.getAverageMillisPerMonth()  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  iMin  =  chronology.getMinYear();  iMax  =  chronology.getAverageMillisPerMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  iMin  =  chronology.getMinYear();  iMax  =  chronology.getAverageMillisPerMonth()	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMaxYear();    	non-compiled	[CE]  ';'  expected	66	None	replace
1700	[BUG]  [BUGGY]  if(iMin!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  super.setValue(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth()  [CE]  ')'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  super.setValue(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  super.setValue(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth()	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMaxYear();    	non-compiled	[CE]  ')'  expected	66	None	replace
1701	[BUG]  [BUGGY]  if(iMin!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  super.setValue(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMon  [CE]  ')'  expected  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  super.setValue(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMon  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  super.setValue(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMon	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMaxYear();    	non-compiled	[CE]  ')'  expected	66	None	replace
1702	[BUG]  [BUGGY]  if(iMin!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  super.setValue(DateTimeFieldType.dayOfMonth()  [CE]  ')'  expected  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  super.setValue(DateTimeFieldType.dayOfMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  super.setValue(DateTimeFieldType.dayOfMonth()	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMaxYear();    	non-compiled	[CE]  ')'  expected	66	None	replace
1703	[BUG]  [BUGGY]  if(iMin!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  iMin  =  chronology.getMinYear();  }  [CE]  cannot  find  symbol  iMin  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  iMin  =  chronology.getMinYear();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  iMin  =  chronology.getMinYear();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMaxYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	66	None	replace
1704	[BUG]  [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Node  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1705	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getJoinOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getJoinOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getJoinOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMonthOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	65	None	replace
1706	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth(),  jumpMonth);  [CE]  cannot  find  symbol  jumpMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth(),  jumpMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth(),  jumpMonth);	  iChronology    =    chronology.getChronology(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  jumpMonth	284	None	replace
1707	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth(),  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth(),  dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth(),  dayOfMonth);	  iChronology    =    chronology.getChronology(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	284	None	replace
1708	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth(),  null);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth(),  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth(),  null);	  iChronology    =    chronology.getChronology(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	284	None	replace
1709	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth(),  30);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth(),  30);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth(),  30);	  iChronology    =    chronology.getChronology(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	284	None	replace
1710	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).WithUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).WithUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).WithUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    +    1;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	311	None	replace
1711	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(1);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(1);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    +    1;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	311	None	replace
1712	[BUG]  [BUGGY]  iMin  =  iChronology.getMaxMonth()  +  1;  [CE]  cannot  find  symbol  iMin  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMaxMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMaxMonth()  +  1;	  iMin    =    iChronology.getMinMonth()    +    1;    	non-compiled	[CE]  cannot  find  symbol  iMin	185	None	replace
1713	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  year;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  year;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  year;	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	320	None	replace
1714	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  false);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this,  false);	  iChronology    =    chronology.getBasicChronology(this);    	non-compiled	[CE]  cannot  find  symbol	327	None	replace
1715	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  true);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this,  true);	  iChronology    =    chronology.getBasicChronology(this);    	non-compiled	[CE]  cannot  find  symbol	327	None	replace
1716	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  new  BasicChronology());  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  new  BasicChronology());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this,  new  BasicChronology());	  iChronology    =    chronology.getBasicChronology(this);    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	327	None	replace
1717	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  this);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  this);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this,  this);	  iChronology    =    chronology.getBasicChronology(this);    	non-compiled	[CE]  cannot  find  symbol	327	None	replace
1718	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.monthOfYear()  -  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.monthOfYear()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.monthOfYear()  -  1;	  int    iLeapMonth    =    iChronology.monthOfYear();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	109	None	replace
1719	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear(min);  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear(min);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear(min);	  iMin    =    iChronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	59	None	replace
1720	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear(edgeMonth);  [CE]  cannot  find  symbol  iMin  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear(edgeMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear(edgeMonth);	  iMin    =    iChronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	59	None	replace
1721	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    +    1;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	268	None	replace
1722	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    +    1;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	268	None	replace
1723	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    +    1;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	268	None	replace
1724	[BUG]  [BUGGY]  iChronology  =  chronology.monthOfYear(),  dayOfMonth;  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.monthOfYear(),  dayOfMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.monthOfYear(),  dayOfMonth;	  iChronology    =    chronology.monthOfYear();    	non-compiled	[CE]  ';'  expected	37	None	replace
1725	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.US_ASCII);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.US_ASCII);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.US_ASCII);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	297	None	replace
1726	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.US_PER_DAY);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.US_PER_DAY);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.US_PER_DAY);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	297	None	replace
1727	[BUG]  [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeZone.UTC);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeZone.UTC);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getInstance(DateTimeZone.UTC);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	297	None	replace
1728	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.ROOT);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.ROOT);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.ROOT);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	297	None	replace
1729	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth  +  4;  [CE]  cannot  find  symbol  dayOfMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth  +  4;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth  +  4;	  iChronology    =    chronology.dayOfMonth    +    1;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	221	None	replace
1730	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth  +  3;  [CE]  cannot  find  symbol  dayOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth  +  3;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth  +  3;	  iChronology    =    chronology.dayOfMonth    +    1;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	221	None	replace
1731	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth  +  1L;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth  +  1L;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth  +  1L;	  iChronology    =    chronology.dayOfMonth    +    1;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	221	None	replace
1732	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  dayOfMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  dayOfMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    dayOfMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	173	None	replace
1733	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  dayOfMonth,  leapMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  dayOfMonth,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  dayOfMonth,  leapMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    dayOfMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	173	None	replace
1734	[BUG]  [BUGGY]  Min  =  iChronology.getMinYear();  [CE]  cannot  find  symbol  Min  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Min  =  iChronology.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Min  =  iChronology.getMinYear();	  MIN    =    chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  Min	283	None	replace
1735	[BUG]  [BUGGY]  MIN  =  chronology.getMinYear()  +  1;  [CE]  cannot  assign  a  value  to  final  variable  MIN  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  MIN  =  chronology.getMinYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	MIN  =  chronology.getMinYear()  +  1;	  MIN    =    chronology.getMinYear();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  MIN	283	None	replace
1736	[BUG]  [BUGGY]  MINI  =  chronology.getMinYear();  [CE]  cannot  find  symbol  MINI  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  MINI  =  chronology.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	MINI  =  chronology.getMinYear();	  MIN    =    chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  MINI	283	None	replace
1737	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  29);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  29);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  29);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
1738	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinWidth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinWidth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinWidth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMaxMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	250	None	replace
1739	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getWeeksInYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getWeeksInYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getWeeksInYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getWeekOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	264	None	replace
1740	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getWeekOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	264	None	replace
1741	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getJoinOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getJoinOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getJoinOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getWeekOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	264	None	replace
1742	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getYearOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getYearOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getYearOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getWeekOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	264	None	replace
1743	[BUG]  [BUGGY]  iMax  =  chronology.getMinYear()  -  1;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMax  =  chronology.getMinYear()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMax  =  chronology.getMinYear()  -  1;	  iMax    =    chronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	61	None	replace
1744	[BUG]  [BUGGY]  iMax  =  chronology.getMinYear()  +  2;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMax  =  chronology.getMinYear()  +  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMax  =  chronology.getMinYear()  +  2;	  iMax    =    chronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	61	None	replace
1745	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth.getDateTimeField(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth.getDateTimeField(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth.getDateTimeField(DateTimeFieldType.dayOfMonth());	  iChronology    =    iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	70	None	replace
1746	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth());	  iChronology    =    iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
1747	[BUG]  [BUGGY]  iChronology  =  data.getDateTimeField(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  data  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  data.getDateTimeField(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  data.getDateTimeField(DateTimeFieldType.dayOfMonth());	  iChronology    =    iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  data	70	None	replace
1748	[BUG]  [BUGGY]  iChronology  =  type.getDateTimeField(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  type  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  type.getDateTimeField(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  type.getDateTimeField(DateTimeFieldType.dayOfMonth());	  iChronology    =    iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  type	70	None	replace
1749	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.chronology);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.chronology);	  iChronology    =    chronology.getBasicChronology(this.chronology);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	328	None	replace
1750	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.chronology).withUTC();  [CE]  cannot  find  symbol  chronology  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.chronology).withUTC();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.chronology).withUTC();	  iChronology    =    chronology.getBasicChronology(this.chronology);    	non-compiled	[CE]  cannot  find  symbol  chronology	328	None	replace
1751	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.period);  [CE]  cannot  find  symbol  period  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.period);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.period);	  iChronology    =    chronology.getBasicChronology(this.chronology);    	non-compiled	[CE]  cannot  find  symbol  period	328	None	replace
1752	[BUG]  [BUGGY]  iChronology  =  chronology.millisOfDay();  [CE]  incompatible  types  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.millisOfDay();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.millisOfDay();	  iChronology    =    chronology.monthOfYear;    	non-compiled	[CE]  incompatible  types	33	None	replace
1753	[BUG]  [BUGGY]  int  min  =  (this.iChronology!=  null?  this.iChronology.getMinYear()  :  0);  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  (this.iChronology!=  null?  this.iChronology.getMinYear()  :  0);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  (this.iChronology!=  null?  this.iChronology.getMinYear()  :  0);	  int    min    =    this.iChronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	119	None	replace
1754	[BUG]  [BUGGY]  int  min  =  (this.iChronology!=  null)?  this.iChronology.getMinYear()  :  0;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  (this.iChronology!=  null)?  this.iChronology.getMinYear()  :  0;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  (this.iChronology!=  null)?  this.iChronology.getMinYear()  :  0;	  int    min    =    this.iChronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	119	None	replace
1755	[BUG]  [BUGGY]  int  min  =  (this.iChronology!=  null?  this.iChronology.getMinYear()  :  1);  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  (this.iChronology!=  null?  this.iChronology.getMinYear()  :  1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  (this.iChronology!=  null?  this.iChronology.getMinYear()  :  1);	  int    min    =    this.iChronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	119	None	replace
1756	[BUG]  [BUGGY]  int  min  =  (this.iChronology!=  null)?  this.iChronology.getMinYear()  :  1;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  (this.iChronology!=  null)?  this.iChronology.getMinYear()  :  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  (this.iChronology!=  null)?  this.iChronology.getMinYear()  :  1;	  int    min    =    this.iChronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	119	None	replace
1757	[BUG]  [BUGGY]  iChronology  =  (iChronology  ==  null)?  DateTimeFieldType.dayOfMonth()  :  DateTimeFieldType.dayOfMonth();  [CE]  incompatible  types  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  (iChronology  ==  null)?  DateTimeFieldType.dayOfMonth()  :  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  (iChronology  ==  null)?  DateTimeFieldType.dayOfMonth()  :  DateTimeFieldType.dayOfMonth();	  iChronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  incompatible  types	211	None	replace
1758	[BUG]  [BUGGY]  iChronology  =  (iChronology!=  null)?  DateTimeFieldType.dayOfMonth()  :  DateTimeFieldType.dayOfMonth();  [CE]  incompatible  types  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  (iChronology!=  null)?  DateTimeFieldType.dayOfMonth()  :  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  (iChronology!=  null)?  DateTimeFieldType.dayOfMonth()  :  DateTimeFieldType.dayOfMonth();	  iChronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  incompatible  types	211	None	replace
1759	[BUG]  [BUGGY]  iChronology  =(DateTimeFieldType.dayOfMonth()  ==  null)?  DateTimeFieldType.dayOfMonth()  :  dayOfMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =(DateTimeFieldType.dayOfMonth()  ==  null)?  DateTimeFieldType.dayOfMonth()  :  dayOfMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =(DateTimeFieldType.dayOfMonth()  ==  null)?  DateTimeFieldType.dayOfMonth()  :  dayOfMonth;	  iChronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	211	None	replace
1760	[BUG]  [BUGGY]  iChronology  =(DateTimeFieldType.dayOfMonth()  ==  null)?  DateTimeFieldType.dayOfMonth()  :  DayTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  DayTimeFieldType  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =(DateTimeFieldType.dayOfMonth()  ==  null)?  DateTimeFieldType.dayOfMonth()  :  DayTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =(DateTimeFieldType.dayOfMonth()  ==  null)?  DateTimeFieldType.dayOfMonth()  :  DayTimeFieldType.dayOfMonth();	  iChronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  DayTimeFieldType	211	None	replace
1761	[BUG]  [BUGGY]  iChronology  =(DateTimeFieldType.dayOfMonth()  ==  null)?  DateTimeFieldType.dayOfMonth()  :  DateTimeFieldType.dayOfMonth();  [CE]  incompatible  types  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =(DateTimeFieldType.dayOfMonth()  ==  null)?  DateTimeFieldType.dayOfMonth()  :  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =(DateTimeFieldType.dayOfMonth()  ==  null)?  DateTimeFieldType.dayOfMonth()  :  DateTimeFieldType.dayOfMonth();	  iChronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  incompatible  types	211	None	replace
1762	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iJoinMonth);  [CE]  cannot  find  symbol  iJoinMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(iJoinMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iJoinMonth);	  iChronology    =    chronology.withUTC(spriteMonth);    	non-compiled	[CE]  cannot  find  symbol  iJoinMonth	207	None	replace
1763	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iHourMonth);  [CE]  cannot  find  symbol  iHourMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(iHourMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iHourMonth);	  iChronology    =    chronology.withUTC(spriteMonth);    	non-compiled	[CE]  cannot  find  symbol  iHourMonth	207	None	replace
1764	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iD);  [CE]  cannot  find  symbol  iD  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(iD);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iD);	  iChronology    =    chronology.withUTC(spriteMonth);    	non-compiled	[CE]  cannot  find  symbol  iD	207	None	replace
1765	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(throwMonth);  [CE]  cannot  find  symbol  throwMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(throwMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(throwMonth);	  iChronology    =    chronology.getChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  throwMonth	26	None	replace
1766	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iMonthOfYear);  [CE]  cannot  find  symbol  iMonthOfYear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iMonthOfYear);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iMonthOfYear);	  iChronology    =    chronology.getChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMonthOfYear	26	None	replace
1767	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN).withUTC();	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	244	None	replace
1768	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false).withUTC();	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	244	None	replace
1769	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.min);  [CE]  cannot  find  symbol  dayOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.min);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  this.min);	  iChronology    =    chronology.getChronology(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	25	None	replace
1770	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.minute);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.minute);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  this.minute);	  iChronology    =    chronology.getChronology(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	25	None	replace
1771	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.max);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.max);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  this.max);	  iChronology    =    chronology.getChronology(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	25	None	replace
1772	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth  +  1);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth  +  1);	  iChronology    =    chronology.getChronology(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	25	None	replace
1773	[BUG]  [BUGGY]  iChronology  =  chronology.withZoneOfYear(),  leapMonth;  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withZoneOfYear(),  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withZoneOfYear(),  leapMonth;	  iChronology    =    chronology.withUTC(),    leapMonth;    	non-compiled	[CE]  ';'  expected	51	None	replace
1774	[BUG]  [BUGGY]  iChronology  =  chronology.withZoneScope(),  leapMonth;  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withZoneScope(),  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withZoneScope(),  leapMonth;	  iChronology    =    chronology.withUTC(),    leapMonth;    	non-compiled	[CE]  ';'  expected	51	None	replace
1775	[BUG]  [BUGGY]  iChronology  =  chronology.withZoneUnit(),  leapMonth;  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withZoneUnit(),  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withZoneUnit(),  leapMonth;	  iChronology    =    chronology.withUTC(),    leapMonth;    	non-compiled	[CE]  ';'  expected	51	None	replace
1776	[BUG]  [BUGGY]  iMonth  =  this.chronology.getMonthOfYear();  [CE]  cannot  find  symbol  iMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  this.chronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  this.chronology.getMonthOfYear();	  iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMonth	40	None	replace
1777	[BUG]  [BUGGY]  iMonth  =  chronology.getMonthOfYear(this.dayOfMonth);  [CE]  cannot  find  symbol  iMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMonthOfYear(this.dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonthOfYear(this.dayOfMonth);	  iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMonth	40	None	replace
1778	[BUG]  [BUGGY]  iLeapMonth  =  DateTimeUtils.getChronology(chronology).getLeapMonth();  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  DateTimeUtils.getChronology(chronology).getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  DateTimeUtils.getChronology(chronology).getLeapMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	292	None	replace
1779	[BUG]  [BUGGY]  iLeapMonth  =  chronology.getLeapMonth();  this.chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  chronology.getLeapMonth();  this.chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  chronology.getLeapMonth();  this.chronology  =  DateTimeUtils.getChronology(chronology).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	292	None	replace
1780	[BUG]  [BUGGY]  iLeapMonth  =  chronology.getLeapMonth()  *  DateTimeUtils.getChronology(chronology).withUTC();  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  chronology.getLeapMonth()  *  DateTimeUtils.getChronology(chronology).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  chronology.getLeapMonth()  *  DateTimeUtils.getChronology(chronology).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	292	None	replace
1781	[BUG]  [BUGGY]  iLeapMonth  =  DateTimeUtils.getChronology(chronology);  [CE]  incompatible  types  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  DateTimeUtils.getChronology(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  DateTimeUtils.getChronology(chronology);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  incompatible  types	292	None	replace
1782	[BUG]  [BUGGY]  iLeapMonth  =  chronology.getLeapMonth()  *  Math.min(iLeapMonth,  leapMonth);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  chronology.getLeapMonth()  *  Math.min(iLeapMonth,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  chronology.getLeapMonth()  *  Math.min(iLeapMonth,  leapMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	292	None	replace
1783	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.dayOfMonth().iMax;  [CE]  cannot  find  symbol  iMax  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.dayOfMonth().iMax;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.dayOfMonth().iMax;	  int    iLeapMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMax	129	None	replace
1784	[BUG]  [BUGGY]  int  min  =  iParent.getMinYear();  [CE]  cannot  find  symbol  iParent  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iParent.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iParent.getMinYear();	  int    min    =    interval.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iParent	309	None	replace
1785	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    true);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	254	None	replace
1786	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  0);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  0);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  0);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    true);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	254	None	replace
1787	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology;  [CE]  ')'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    true);    	non-compiled	[CE]  ')'  expected	254	None	replace
1788	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  year;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  year;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  year;	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth!=    null?    chronology.dayOfMonth    :    dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	321	None	replace
1789	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  days;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  days;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  days;	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth!=    null?    chronology.dayOfMonth    :    dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	321	None	replace
1790	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()-1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()-1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()-1;	  iChronology    =    chronology.dayOfMonth-1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	222	None	replace
1791	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(2);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(2);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(2);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    -    1;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	136	None	replace
1792	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth  +  2;  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth  +  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth  +  2;	  int    iLeapMonth    =    chronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
1793	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  32);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  32);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  32);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    30);    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
1794	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth  +  leapMonth  *  1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth  +  leapMonth  *  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth  +  leapMonth  *  1;	  iChronology    =    chronology.dayOfMonth    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	35	None	replace
1795	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth  +  leapMonth+1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth  +  leapMonth+1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth  +  leapMonth+1;	  iChronology    =    chronology.dayOfMonth    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	35	None	replace
1796	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth  +  leapMonth  *  2;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth  +  leapMonth  *  2;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth  +  leapMonth  *  2;	  iChronology    =    chronology.dayOfMonth    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	35	None	replace
1797	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth  +  leapMonth-1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth  +  leapMonth-1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth  +  leapMonth-1;	  iChronology    =    chronology.dayOfMonth    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	35	None	replace
1798	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getMonthOfYear()  *  leapMonth;  [CE]  incompatible  types  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getMonthOfYear()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getMonthOfYear()  *  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    *    leapMonth;    	non-compiled	[CE]  incompatible  types	47	None	replace
1799	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iMonth  =  chronology.getMonthOfYear()  *  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iMonth  =  chronology.getMonthOfYear()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iMonth  =  chronology.getMonthOfYear()  *  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    *    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	47	None	replace
1800	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  *  leapMonth;  [CE]  incompatible  types  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  *  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    *    leapMonth;    	non-compiled	[CE]  incompatible  types	47	None	replace
1801	[BUG]  [BUGGY]  iMin  =  this.chronology.getMinMonth();  [CE]  cannot  find  symbol  iMin  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  this.chronology.getMinMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  this.chronology.getMinMonth();	  iMin    =    chronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	147	None	replace
1802	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this,  null);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this,  null);	  iChronology    =    chronology.getChronology(this);    	non-compiled	[CE]  cannot  find  symbol	285	None	replace
1803	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this,  false);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this,  false);	  iChronology    =    chronology.getChronology(this);    	non-compiled	[CE]  cannot  find  symbol	285	None	replace
1804	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth,  leapMonth  -  1;  [CE]  ';'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth,  leapMonth  -  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth,  leapMonth  -  1;	  iChronology    =    chronology.dayOfMonth,    leapMonth);    	non-compiled	[CE]  ';'  expected	294	None	replace
1805	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  null);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  null);	  iChronology    =    chronology.getInstance(DateTimeUtils.currentTimeMillis());    	non-compiled	[CE]  cannot  find  symbol	298	None	replace
1806	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  false);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  false);	  iChronology    =    chronology.getInstance(DateTimeUtils.currentTimeMillis());    	non-compiled	[CE]  cannot  find  symbol	298	None	replace
1807	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  30);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  30);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  30);	  iChronology    =    chronology.getInstance(DateTimeUtils.currentTimeMillis());    	non-compiled	[CE]  cannot  find  symbol	298	None	replace
1808	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis()  +  leapMonth);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis()  +  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis()  +  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeUtils.currentTimeMillis());    	non-compiled	[CE]  cannot  find  symbol	298	None	replace
1809	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  true);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  true);	  iChronology    =    chronology.getInstance(DateTimeUtils.currentTimeMillis());    	non-compiled	[CE]  cannot  find  symbol	298	None	replace
1810	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  milliseconds);  [CE]  cannot  find  symbol  milliseconds  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  milliseconds);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  milliseconds);	  iChronology    =    chronology.getInstance(DateTimeUtils.currentTimeMillis());    	non-compiled	[CE]  cannot  find  symbol  milliseconds	298	None	replace
1811	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  timeZone);  [CE]  cannot  find  symbol  timeZone  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  timeZone);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  timeZone);	  iChronology    =    chronology.getInstance(DateTimeUtils.currentTimeMillis());    	non-compiled	[CE]  cannot  find  symbol  timeZone	298	None	replace
1812	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getStartOfYear();  [CE]  incompatible  types  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getStartOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getStartOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getStartOfYear();    	non-compiled	[CE]  incompatible  types	265	None	replace
1813	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getEndOfYear();  [CE]  incompatible  types  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getEndOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getEndOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getStartOfYear();    	non-compiled	[CE]  incompatible  types	265	None	replace
1814	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.monthOfYear();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.monthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.monthOfYear();	  int    leapMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	87	None	replace
1815	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.dayOfMonth()  +  1;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.dayOfMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.dayOfMonth()  +  1;	  int    leapMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	87	None	replace
1816	[BUG]  [BUGGY]  iMax  =  chronology.getMinimumMonth();  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMax  =  chronology.getMinimumMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMax  =  chronology.getMinimumMonth();	  if(iDayOfMonth!=    chronology.getDayOfMonth())    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDay    	non-compiled	[CE]  cannot  find  symbol	275	None	replace
1817	[BUG]  [BUGGY]  iMax  =  chronology.getMinuteOfYear();  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMax  =  chronology.getMinuteOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMax  =  chronology.getMinuteOfYear();	  if(iDayOfMonth!=    chronology.getDayOfMonth())    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDay    	non-compiled	[CE]  cannot  find  symbol	275	None	replace
1818	[BUG]  [BUGGY]  iMax  =  chronology.getMaxMonth();  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMax  =  chronology.getMaxMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMax  =  chronology.getMaxMonth();	  if(iDayOfMonth!=    chronology.getDayOfMonth())    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDay    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	275	None	replace
1819	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  29);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  29);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  29);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    1);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
1820	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth-  1;  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth-  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth-  1;	  int    iLeapMonth    =    iChronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
1821	[BUG]  [BUGGY]  int  iLeapMonth  =  hiChronology.getLeapMonth()  +  leapMonth;  [CE]  cannot  find  symbol  hiChronology  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  hiChronology.getLeapMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  hiChronology.getLeapMonth()  +  leapMonth;	  int    iLeapMonth    =    iChronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  hiChronology	103	None	replace
1822	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth  *  2;  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth  *  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth  *  2;	  int    iLeapMonth    =    iChronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
1823	[BUG]  [BUGGY]  DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth()  +  1;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth()  +  1;	  DayOfMonth    iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
1824	[BUG]  [BUGGY]  DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth()  *  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth()  *  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth()  *  DateTimeFieldType.dayOfMonth();	  DayOfMonth    iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
1825	[BUG]  [BUGGY]  DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.minuteOfMonth();  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.minuteOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.minuteOfMonth();	  DayOfMonth    iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
1826	[BUG]  [BUGGY]  DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.monthOfYear();  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.monthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	DayOfMonth  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.monthOfYear();	  DayOfMonth    iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
1827	[BUG]  [BUGGY]  iMin  =  iFieldType.getMinYear()  +  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iFieldType.getMinYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iFieldType.getMinYear()  +  leapMonth;	  iMin    =    chronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iMin	137	None	replace
1828	[BUG]  [BUGGY]  iMin  =  info.getMinYear()  +  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  info.getMinYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  info.getMinYear()  +  leapMonth;	  iMin    =    chronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iMin	137	None	replace
1829	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getDefault());  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getDefault());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getDefault());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
1830	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  interval.getDefault());  [CE]  cannot  find  symbol  interval  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  interval.getDefault());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  interval.getDefault());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  interval	196	None	replace
1831	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  period.getDefault());  [CE]  cannot  find  symbol  period  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  period.getDefault());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  period.getDefault());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  period	196	None	replace
1832	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  dataZone.getDefault());  [CE]  cannot  find  symbol  dataZone  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  dataZone.getDefault());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  dataZone.getDefault());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  dataZone	196	None	replace
1833	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  this.dayOfMonth.getDefault());  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  this.dayOfMonth.getDefault());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  this.dayOfMonth.getDefault());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	196	None	replace
1834	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  date.getDefault());  [CE]  cannot  find  symbol  date  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  date.getDefault());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  date.getDefault());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  date	196	None	replace
1835	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth  *  2);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth  *  2);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth  *  2);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	167	None	replace
1836	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  iChronology.getDayOfMonth();  [CE]  incompatible  types  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  iChronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  iChronology.getDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  incompatible  types	158	None	replace
1837	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getMinYearOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getMinYearOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getMinYearOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	158	None	replace
1838	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getWeeksInYearMonth();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getWeeksInYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getWeeksInYearMonth();	  int    leapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	290	None	replace
1839	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getJoinMonth();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getJoinMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getJoinMonth();	  int    leapMonth    =    iChronology.getYearMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	238	None	replace
1840	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getYearMonth()  -  1;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getYearMonth()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getYearMonth()  -  1;	  int    leapMonth    =    iChronology.getYearMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	238	None	replace
1841	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getYearMonth()  +  1;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getYearMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getYearMonth()  +  1;	  int    leapMonth    =    iChronology.getYearMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	238	None	replace
1842	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  90);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  90);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  90);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    30);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	166	None	replace
1843	[BUG]  [BUGGY]  iMonth  =  DateTimeUtils.getChronology(chronology).getMonthOfYear();  [CE]  cannot  find  symbol  iMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  DateTimeUtils.getChronology(chronology).getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  DateTimeUtils.getChronology(chronology).getMonthOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMonth	270	None	replace
1844	[BUG]  [BUGGY]  iMonth  =  chronology.getMonthOfYear();  this.chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  [CE]  cannot  find  symbol  iMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMonthOfYear();  this.chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonthOfYear();  this.chronology  =  DateTimeUtils.getChronology(chronology,  MIN);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMonth	270	None	replace
1845	[BUG]  [BUGGY]  iMonth  =  chronology.getMonthOfYear();  this.chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  iLeapMonth);  [CE]  cannot  find  symbol  iMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMonthOfYear();  this.chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  iLeapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonthOfYear();  this.chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  iLeapMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMonth	270	None	replace
1846	[BUG]  [BUGGY]  iMonth  =  chronology.getMonthOfYear();  this.chronology  =  DateTimeUtils.getChronology(chronology);  [CE]  cannot  find  symbol  iMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMonthOfYear();  this.chronology  =  DateTimeUtils.getChronology(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonthOfYear();  this.chronology  =  DateTimeUtils.getChronology(chronology);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMonth	270	None	replace
1847	[BUG]  [BUGGY]  iMonth  =  chronology.getMonthOfYear();  this.chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  iHeapMonth);  [CE]  cannot  find  symbol  iMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMonthOfYear();  this.chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  iHeapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonthOfYear();  this.chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  iHeapMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMonth	270	None	replace
1848	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.iChronology);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.iChronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.iChronology);	  iChronology    =    chronology.getInstance(false);    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
1849	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DEFAULT_TIME_ZONE_OFFSET);  [CE]  cannot  find  symbol  DEFAULT_TIME_ZONE_OFFSET  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DEFAULT_TIME_ZONE_OFFSET);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DEFAULT_TIME_ZONE_OFFSET);	  iChronology    =    chronology.getInstance(false);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TIME_ZONE_OFFSET	156	None	replace
1850	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.iChronology,  false);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.iChronology,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.iChronology,  false);	  iChronology    =    chronology.getInstance(false);    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
1851	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this,  false);  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this,  false);	  iChronology    =    chronology.getInstance(false);    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
1852	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.millisOfDay(),  this.dayOfMonth);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.millisOfDay(),  this.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.millisOfDay(),  this.dayOfMonth);	  iChronology    =    chronology.getInstance(this.millisOfDay());    	non-compiled	[CE]  cannot  find  symbol	259	None	replace
1853	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.millisOfDay(),  this.monthOfYear());  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.millisOfDay(),  this.monthOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.millisOfDay(),  this.monthOfYear());	  iChronology    =    chronology.getInstance(this.millisOfDay());    	non-compiled	[CE]  cannot  find  symbol	259	None	replace
1854	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.millisOfDay(),  this.minuteOfMonth);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.millisOfDay(),  this.minuteOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.millisOfDay(),  this.minuteOfMonth);	  iChronology    =    chronology.getInstance(this.millisOfDay());    	non-compiled	[CE]  cannot  find  symbol	259	None	replace
1855	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapSecond);  [CE]  cannot  find  symbol  leapSecond  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapSecond);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapSecond);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    jumpMonth);    	non-compiled	[CE]  cannot  find  symbol  leapSecond	182	None	replace
1856	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(this);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(this);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(this);	  iChronology    =    chronology.withBasicChronology(iFieldType);    	non-compiled	[CE]  cannot  find  symbol	223	None	replace
1857	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(iMonthOfYear);  [CE]  cannot  find  symbol  iMonthOfYear  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(iMonthOfYear);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(iMonthOfYear);	  iChronology    =    chronology.withBasicChronology(iFieldType);    	non-compiled	[CE]  cannot  find  symbol  iMonthOfYear	223	None	replace
1858	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(iWeekMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(iWeekMonth);	  iChronology    =    chronology.withBasicChronology(iFieldType);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	223	None	replace
1859	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(iDate);  [CE]  cannot  find  symbol  iDate  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(iDate);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(iDate);	  iChronology    =    chronology.withBasicChronology(iFieldType);    	non-compiled	[CE]  cannot  find  symbol  iDate	223	None	replace
1860	[BUG]  [BUGGY]  iMin  =  this.chronology.getMinInt();  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  this.chronology.getMinInt();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  this.chronology.getMinInt();	  iMin    =    chronology.getMinInt();    	non-compiled	[CE]  cannot  find  symbol  iMin	150	None	replace
1861	[BUG]  [BUGGY]  iMin  =  iChronology.getMaxInt();  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMaxInt();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMaxInt();	  iMin    =    chronology.getMinInt();    	non-compiled	[CE]  cannot  find  symbol  iMin	150	None	replace
1862	[BUG]  [BUGGY]  iMin  =  iChronology.getMinin();  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinin();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinin();	  iMin    =    chronology.getMinInt();    	non-compiled	[CE]  cannot  find  symbol  iMin	150	None	replace
1863	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  ISOChronology.getInstance());  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  ISOChronology.getInstance());  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  ISOChronology.getInstance());	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    null);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	178	None	replace
1864	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  ISODateTimeFormat.localDateOptionalTimeParser());  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  ISODateTimeFormat.localDateOptionalTimeParser());  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  ISODateTimeFormat.localDateOptionalTimeParser());	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    null);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	178	None	replace
1865	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  ISODateTimeFormat.localDateParser());  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  ISODateTimeFormat.localDateParser());  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  ISODateTimeFormat.localDateParser());	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    null);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	178	None	replace
1866	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  ISODateTimeFormat.dayOfMonth());  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  ISODateTimeFormat.dayOfMonth());  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  ISODateTimeFormat.dayOfMonth());	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    null);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	178	None	replace
1867	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonthOfYear(strMonth);  [CE]  cannot  find  symbol  strMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonthOfYear(strMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonthOfYear(strMonth);	  int    iLeapMonth    =    chronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  strMonth	279	None	replace
1868	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonthOfYear(scronology);  [CE]  cannot  find  symbol  scronology  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonthOfYear(scronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonthOfYear(scronology);	  int    iLeapMonth    =    chronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  scronology	279	None	replace
1869	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(null,  true);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(null,  true);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth(null,  true);	  int    leapMonth    =    iChronology.getDayOfMonth(true);    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	239	None	replace
1870	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(0,  true);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(0,  true);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth(0,  true);	  int    leapMonth    =    iChronology.getDayOfMonth(true);    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	239	None	replace
1871	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  -  leapMonth  +  2;  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  -  leapMonth  +  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth()  -  leapMonth  +  2;	  int    iLeapMonth    =    iChronology.getLeapMonth()    -    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
1872	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1);  iLeapMonth  =  chronology.getLeapMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1);  iLeapMonth  =  chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1);  iLeapMonth  =  chronology.getLeapMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	160	None	replace
1873	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  leapMonth);  iLeapMonth  =  chronology.getLeapMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  leapMonth);  iLeapMonth  =  chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  leapMonth);  iLeapMonth  =  chronology.getLeapMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	160	None	replace
1874	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  iLeapMonth  =  chronology.getLeapMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  iLeapMonth  =  chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  iLeapMonth  =  chronology.getLeapMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	160	None	replace
1875	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  +  1);  iLeapMonth  =  chronology.getLeapMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  +  1);  iLeapMonth  =  chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  +  1);  iLeapMonth  =  chronology.getLeapMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	160	None	replace
1876	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  31;  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  31;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  31;	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth)+    1;    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
1877	[BUG]  [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  30);  [CE]  cannot  find  symbol  chronology  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  30);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  30);	  iChronology    =    this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  chronology	73	None	replace
1878	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  /  1;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  /  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth()  /  1;	  int    leapMonth    =    iChronology.getDayOfMonth()    -    1;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	86	None	replace
1879	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(chronology).getChronology();  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(chronology).getChronology();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(chronology).getChronology();	  iChronology    =    chronology.getChronology(iChronology).getChronology();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
1880	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth).getChronology();  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth).getChronology();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth).getChronology();	  iChronology    =    chronology.getChronology(iChronology).getChronology();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	32	None	replace
1881	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this).getChronology();  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this).getChronology();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this).getChronology();	  iChronology    =    chronology.getChronology(iChronology).getChronology();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
1882	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.chronology).getChronology();  [CE]  cannot  find  symbol  chronology  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.chronology).getChronology();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.chronology).getChronology();	  iChronology    =    chronology.getChronology(iChronology).getChronology();    	non-compiled	[CE]  cannot  find  symbol  chronology	32	None	replace
1883	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iChronology)?  chronology.getChronology()  :  null;  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iChronology)?  chronology.getChronology()  :  null;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iChronology)?  chronology.getChronology()  :  null;	  iChronology    =    chronology.getChronology(iChronology).getChronology();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
1884	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iChronology)?  null  :  chronology.getChronology();  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iChronology)?  null  :  chronology.getChronology();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iChronology)?  null  :  chronology.getChronology();	  iChronology    =    chronology.getChronology(iChronology).getChronology();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
1885	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  +  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  +  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear()    +    1;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	251	None	replace
1886	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear()    +    1;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	251	None	replace
1887	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth-  1;  [CE]  cannot  find  symbol  iField  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth-  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth-  1;	  iField    =    DateTimeFieldType.dayOfMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iField	88	None	replace
1888	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth+1;  [CE]  cannot  find  symbol  iField  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth+1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth+1;	  iField    =    DateTimeFieldType.dayOfMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iField	88	None	replace
1889	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  int);  [CE]  '.class'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  int);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  int);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    	non-compiled	[CE]  '.class'  expected	172	None	replace
1890	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  seconds);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  seconds);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  seconds);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	172	None	replace
1891	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1,  this.dayOfMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1,  this.dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1,  this.dayOfMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth    -    1);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	175	None	replace
1892	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1  +  1);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1  +  1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1  +  1);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth    -    1);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	175	None	replace
1893	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  *  1);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  *  1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  *  1);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth    -    1);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	175	None	replace
1894	[BUG]  [BUGGY]  iLeapMonth  =  iHeapMonth  +  chronology.getLeapMonth();  [CE]  cannot  find  symbol  iHeapMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iHeapMonth  +  chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iHeapMonth  +  chronology.getLeapMonth();	  iLeapMonth    =    leapMonth    +    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	293	None	replace
1895	[BUG]  [BUGGY]  iLeapMonth  =  iWeekMonth  +  chronology.getLeapMonth();  [CE]  cannot  find  symbol  iWeekMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iWeekMonth  +  chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iWeekMonth  +  chronology.getLeapMonth();	  iLeapMonth    =    leapMonth    +    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	293	None	replace
1896	[BUG]  [BUGGY]  iLeapMonth  =  iParent  +  chronology.getLeapMonth();  [CE]  cannot  find  symbol  iParent  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iParent  +  chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iParent  +  chronology.getLeapMonth();	  iLeapMonth    =    leapMonth    +    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  iParent	293	None	replace
1897	[BUG]  [BUGGY]  iLeapMonth  =  iChronology  +  chronology.getLeapMonth();  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology  +  chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology  +  chronology.getLeapMonth();	  iLeapMonth    =    leapMonth    +    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	293	None	replace
1898	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinuteOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinuteOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinuteOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	64	None	replace
1899	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYearOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYearOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYearOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	64	None	replace
1900	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYearOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYearOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYearOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	64	None	replace
1901	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(false,  false);  [CE]  no  suitable  method  found  for  withUTC(boolean,boolean)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(false,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(false,  false);	  iChronology    =    chronology.withUTC(true);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(boolean,boolean)	204	None	replace
1902	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(new  BasicChronology(chronology,  false));  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(new  BasicChronology(chronology,  false));  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(new  BasicChronology(chronology,  false));	  iChronology    =    chronology.withUTC(true);    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	204	None	replace
1903	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(new  BasicChronology(chronology,  true));  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(new  BasicChronology(chronology,  true));  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(new  BasicChronology(chronology,  true));	  iChronology    =    chronology.withUTC(true);    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	204	None	replace
1904	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(strMonth,  true);  [CE]  cannot  find  symbol  strMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(strMonth,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(strMonth,  true);	  iChronology    =    chronology.withUTC(true);    	non-compiled	[CE]  cannot  find  symbol  strMonth	204	None	replace
1905	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).date();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).date();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).date();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).dayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	135	None	replace
1906	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dateOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dateOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dateOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).dayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	135	None	replace
1907	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.monthOfYear);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.monthOfYear);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  this.monthOfYear);	  iChronology    =    chronology.getInstance(this.dayOfMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	299	None	replace
1908	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayOfMonth  +  1);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayOfMonth  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayOfMonth  +  1);	  iChronology    =    chronology.getInstance(this.dayOfMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	299	None	replace
1909	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	43	None	replace
1910	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getYearOfYear()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getYearOfYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getYearOfYear()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	43	None	replace
1911	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth  -  1);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth  -  1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth  -  1);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    this.dayOfMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	295	None	replace
1912	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  this.dayOfMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  this.dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  this.dayOfMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    this.dayOfMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	295	None	replace
1913	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth  -  1,  leapMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth  -  1,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth  -  1,  leapMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    this.dayOfMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	295	None	replace
1914	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(null,  false);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(null,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(null,  false);	  iChronology    =    chronology.getChronology(false);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
1915	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  this.iMonthOfYear);  [CE]  cannot  find  symbol  iMonthOfYear  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  this.iMonthOfYear);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.iChronology,  this.iMonthOfYear);	  iChronology    =    chronology.withUTC(this.iChronology);    	non-compiled	[CE]  cannot  find  symbol  iMonthOfYear	206	None	replace
1916	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  this.iMinYear);  [CE]  cannot  find  symbol  iMinYear  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  this.iMinYear);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.iChronology,  this.iMinYear);	  iChronology    =    chronology.withUTC(this.iChronology);    	non-compiled	[CE]  cannot  find  symbol  iMinYear	206	None	replace
1917	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  this.iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  this.iWeekMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.iChronology,  this.iWeekMonth);	  iChronology    =    chronology.withUTC(this.iChronology);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	206	None	replace
1918	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  this.iDate);  [CE]  cannot  find  symbol  iDate  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  this.iDate);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.iChronology,  this.iDate);	  iChronology    =    chronology.withUTC(this.iChronology);    	non-compiled	[CE]  cannot  find  symbol  iDate	206	None	replace
1919	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  null);  [CE]  no  suitable  method  found  for  withUTC(BasicChronology,<null>)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.iChronology,  null);	  iChronology    =    chronology.withUTC(this.iChronology);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(BasicChronology,<null>)	206	None	replace
1920	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  &&  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  &&  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  &&  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  1;	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    1;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	323	None	replace
1921	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  2)  [CE]  ';'  expected  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  2)  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  2)	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth)    	non-compiled	[CE]  ';'  expected	102	None	replace
1922	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth)&  ';'  [CE]  ';'  expected  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth)&  ';'  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth)&  ';'	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth)    	non-compiled	[CE]  ';'  expected	102	None	replace
1923	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-1)  [CE]  ';'  expected  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-1)  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-1)	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth)    	non-compiled	[CE]  ';'  expected	102	None	replace
1924	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  DEFAULT_TIME_ZONE).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  DEFAULT_TIME_ZONE).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  DEFAULT_TIME_ZONE).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	245	None	replace
1925	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN_YEAR).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN_YEAR).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN_YEAR).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	245	None	replace
1926	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  100).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  100).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  100).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	245	None	replace
1927	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  1000).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  1000).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  1000).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	245	None	replace
1928	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear(min);  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear(min);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear(min);	  iMin    =    chronology.getMinYear(stackMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	58	None	replace
1929	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear(min,  leapMonth);  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear(min,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear(min,  leapMonth);	  iMin    =    chronology.getMinYear(stackMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	58	None	replace
1930	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear(thenMonth);  [CE]  cannot  find  symbol  iMin  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear(thenMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear(thenMonth);	  iMin    =    chronology.getMinYear(stackMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	58	None	replace
1931	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(spitchMonth);  [CE]  cannot  find  symbol  spitchMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(spitchMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth(spitchMonth);	  int    iLeapMonth    =    chronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  spitchMonth	280	None	replace
1932	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1;  [CE]  ')'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1;	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth;    	non-compiled	[CE]  ')'  expected	81	None	replace
1933	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  -  1;  [CE]  ')'  expected  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  -  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  -  1;	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth;    	non-compiled	[CE]  ')'  expected	81	None	replace
1934	[BUG]  [BUGGY]  int  min  =  this.dayOfMonth.getMinYear()  +  1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  this.dayOfMonth.getMinYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  this.dayOfMonth.getMinYear()  +  1;	  int    min    =    this.dayOfMonth.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	118	None	replace
1935	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  21);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  21);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  21);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    31);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	169	None	replace
1936	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  0,  null);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  0,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  0,  null);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    null);    	non-compiled	[CE]  cannot  find  symbol	195	None	replace
1937	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  this);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  this);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  this);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    null);    	non-compiled	[CE]  cannot  find  symbol	195	None	replace
1938	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  dataArea,  null);  [CE]  cannot  find  symbol  dataArea  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  dataArea,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  dataArea,  null);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    null);    	non-compiled	[CE]  cannot  find  symbol  dataArea	195	None	replace
1939	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  null  +  leapMonth);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  null  +  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  null  +  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    null);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	195	None	replace
1940	[BUG]  [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth    ==    chronology.dayOfMonth)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	274	None	replace
1941	[BUG]  [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  iDayOfMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  iDayOfMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  iDayOfMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth    ==    chronology.dayOfMonth)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	274	None	replace
1942	[BUG]  [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iTagOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iTagOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iTagOfMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth    ==    chronology.dayOfMonth)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	274	None	replace
1943	[BUG]  [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDAYOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDAYOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDAYOfMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth    ==    chronology.dayOfMonth)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	274	None	replace
1944	[BUG]  [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMinYearOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMinYearOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMinYearOfMonth();  }	  if(iDayOfMonth    ==    chronology.dayOfMonth)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	274	None	replace
1945	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth,  MIN);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth,  MIN);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth()    -    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	144	None	replace
1946	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.min);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.min);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  this.min);	  iChronology    =    chronology.getInstance(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	153	None	replace
1947	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth  +  1);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth  +  1);	  iChronology    =    chronology.getInstance(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	153	None	replace
1948	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.minute);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.minute);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  this.minute);	  iChronology    =    chronology.getInstance(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	153	None	replace
1949	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.max);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.max);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  this.max);	  iChronology    =    chronology.getInstance(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	153	None	replace
1950	[BUG]  [BUGGY]  iChronology  =  chronology.withDayOfMonth(this.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withDayOfMonth(this.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withDayOfMonth(this.dayOfMonth);	  iChronology    =    chronology.withDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	48	None	replace
1951	[BUG]  [BUGGY]  iChronology  =  chronology.withDayOfMonth(true);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withDayOfMonth(true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withDayOfMonth(true);	  iChronology    =    chronology.withDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
1952	[BUG]  [BUGGY]  iChronology  =  chronology.withDayOfMonth(dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withDayOfMonth(dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withDayOfMonth(dayOfMonth);	  iChronology    =    chronology.withDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	48	None	replace
1953	[BUG]  [BUGGY]  iChronology  =  chronology.withDayOfMonth(strMonth);  [CE]  cannot  find  symbol  strMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withDayOfMonth(strMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withDayOfMonth(strMonth);	  iChronology    =    chronology.withDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  strMonth	48	None	replace
1954	[BUG]  [BUGGY]  iChronology  =  chronology.withDayOfMonth(switchMonth);  [CE]  cannot  find  symbol  switchMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withDayOfMonth(switchMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withDayOfMonth(switchMonth);	  iChronology    =    chronology.withDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  switchMonth	48	None	replace
1955	[BUG]  [BUGGY]  iChronology  =  chronology.withDayOfMonth(1);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withDayOfMonth(1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withDayOfMonth(1);	  iChronology    =    chronology.withDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
1956	[BUG]  [BUGGY]  iChronology  =  chronology.withDayOfMonth(this.monthOfYear);  [CE]  cannot  find  symbol  monthOfYear  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withDayOfMonth(this.monthOfYear);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withDayOfMonth(this.monthOfYear);	  iChronology    =    chronology.withDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  monthOfYear	48	None	replace
1957	[BUG]  [BUGGY]  iChronology  =  chronology.getMonthOfYear(this.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getMonthOfYear(this.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getMonthOfYear(this.dayOfMonth);	  iChronology    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	39	None	replace
1958	[BUG]  [BUGGY]  iChronology  =  chronology.getMonthOfYear(this.dayOfMonth,  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getMonthOfYear(this.dayOfMonth,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getMonthOfYear(this.dayOfMonth,  leapMonth);	  iChronology    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	39	None	replace
1959	[BUG]  [BUGGY]  iChronology  =  chronology.getMonthOfYear(dayOfMonth,  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getMonthOfYear(dayOfMonth,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getMonthOfYear(dayOfMonth,  leapMonth);	  iChronology    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	39	None	replace
1960	[BUG]  [BUGGY]  int  iLeapMonth  =  this.chronology.getLeapMonth()  -  1;  [CE]  cannot  find  symbol  chronology  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  this.chronology.getLeapMonth()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  this.chronology.getLeapMonth()  -  1;	  int    iLeapMonth    =    this.chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  chronology	125	None	replace
1961	[BUG]  [BUGGY]  int  iLeapMonth  =  this.chronology.getLeapMonth()  +  2;  [CE]  cannot  find  symbol  chronology  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  this.chronology.getLeapMonth()  +  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  this.chronology.getLeapMonth()  +  2;	  int    iLeapMonth    =    this.chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  chronology	125	None	replace
1962	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  /|  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  /|  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  /|  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth!=    null?    chronology.dayOfMonth    :    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  illegal  start  of  expression	319	None	replace
1963	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	230	None	replace
1964	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  4;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  4;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  4;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    /    2;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	133	None	replace
1965	[BUG]  [BUGGY]  int  iMin  =  iFieldType.getMinMonth();  [CE]  cannot  find  symbol  iFieldType  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  iFieldType.getMinMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  iFieldType.getMinMonth();	  int    iMin    =    chronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iFieldType	316	None	replace
1966	[BUG]  [BUGGY]  int  iMin  =  data.getMinMonth();  [CE]  cannot  find  symbol  data  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  data.getMinMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  data.getMinMonth();	  int    iMin    =    chronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  data	316	None	replace
1967	[BUG]  [BUGGY]  int  iMin  =  chronology.getMinMonth()  +  1;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  chronology.getMinMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  chronology.getMinMonth()  +  1;	  int    iMin    =    chronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol	316	None	replace
1968	[BUG]  [BUGGY]  iStartMonth  =  chronology.getStartMonth();  [CE]  cannot  find  symbol  iStartMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iStartMonth  =  chronology.getStartMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iStartMonth  =  chronology.getStartMonth();	  if(iDayOfMonth    ==    chronology.getDayOfMonth())    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iStartMonth	273	None	replace
1969	[BUG]  [BUGGY]  iWeekMonth  =  chronology.getWeekMonth();  [CE]  cannot  find  symbol  iWeekMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iWeekMonth  =  chronology.getWeekMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iWeekMonth  =  chronology.getWeekMonth();	  if(iDayOfMonth    ==    chronology.getDayOfMonth())    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	273	None	replace
1970	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	159	None	replace
1971	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getRightMonth()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getRightMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getRightMonth()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	159	None	replace
1972	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	159	None	replace
1973	[BUG]  [BUGGY]  iMin  =  (this.iChronology!=  null)?  this.iChronology.getMinYear()  :  0;  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  (this.iChronology!=  null)?  this.iChronology.getMinYear()  :  0;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  (this.iChronology!=  null)?  this.iChronology.getMinYear()  :  0;	  iMin    =    this.iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	55	None	replace
1974	[BUG]  [BUGGY]  iMin  =  (this.iChronology!=  null)?  this.iChronology.getMinYear()  :  1;  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  (this.iChronology!=  null)?  this.iChronology.getMinYear()  :  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  (this.iChronology!=  null)?  this.iChronology.getMinYear()  :  1;	  iMin    =    this.iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	55	None	replace
1975	[BUG]  [BUGGY]  iMin  =  (this.iChronology!=  null?  this.iChronology.getMinYear()  :  0);  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  (this.iChronology!=  null?  this.iChronology.getMinYear()  :  0);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  (this.iChronology!=  null?  this.iChronology.getMinYear()  :  0);	  iMin    =    this.iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	55	None	replace
1976	[BUG]  [BUGGY]  iMin  =  (this.iChronology!=  null?  this.iChronology.getMinYear()  :  1);  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  (this.iChronology!=  null?  this.iChronology.getMinYear()  :  1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  (this.iChronology!=  null?  this.iChronology.getMinYear()  :  1);	  iMin    =    this.iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	55	None	replace
1977	[BUG]  [BUGGY]  iMin  =  (this.iChronology!=  null)?  this.iChronology.getMinYear()  :  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  (this.iChronology!=  null)?  this.iChronology.getMinYear()  :  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  (this.iChronology!=  null)?  this.iChronology.getMinYear()  :  leapMonth;	  iMin    =    this.iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	55	None	replace
1978	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	10	None	replace
1979	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	10	None	replace
1980	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  iDayOfMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  iDayOfMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  iDayOfMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	10	None	replace
1981	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iTagOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iTagOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iTagOfMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	10	None	replace
1982	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDAYOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDAYOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDAYOfMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	10	None	replace
1983	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMinYearOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMinYearOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMinYearOfMonth();  }	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	10	None	replace
1984	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinOutYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinOutYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinOutYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinInYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	252	None	replace
1985	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxInYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxInYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxInYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinInYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	252	None	replace
1986	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  iMonth  =  chronology.dayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  iMonth  =  chronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  iMonth  =  chronology.dayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	45	None	replace
1987	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  +  4;  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  +  4;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  +  4;	  int    iLeapMonth    =    iChronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
1988	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  +  31;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  +  31;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  +  31;	  int    iLeapMonth    =    iChronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
1989	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinMonth()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinMonth()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	68	None	replace
1990	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinMonth()  +  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinMonth()  +  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	68	None	replace
1991	[BUG]  [BUGGY]  Integer  iMin  =  DateTimeUtils.getChronology(chronology);  [CE]  incompatible  types  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iMin  =  DateTimeUtils.getChronology(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iMin  =  DateTimeUtils.getChronology(chronology);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinMonth();    	non-compiled	[CE]  incompatible  types	68	None	replace
1992	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);	  iChronology    =    data.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	258	None	replace
1993	[BUG]  [BUGGY]  iChronology  =  getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);	  iChronology    =    data.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	258	None	replace
1994	[BUG]  [BUGGY]  iMonth  =  chronology.getMonthOfYear(2);  [CE]  cannot  find  symbol  iMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMonthOfYear(2);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonthOfYear(2);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear(1);    	non-compiled	[CE]  cannot  find  symbol  iMonth	271	None	replace
1995	[BUG]  [BUGGY]  iChronology  =  this.chronology.dayOfMonth()  +  1;  [CE]  cannot  find  symbol  chronology  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.dayOfMonth()  +  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.dayOfMonth()  +  1;	  iChronology    =    chronology.dayOfMonth()    +    1;    	non-compiled	[CE]  cannot  find  symbol  chronology	199	None	replace
1996	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  1L;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  1L;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  +  1L;	  iChronology    =    chronology.dayOfMonth()    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	199	None	replace
1997	[BUG]  [BUGGY]  iChronology  =  Chronology.dayOfMonth();  [CE]  cannot  find  symbol  Chronology  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  Chronology.dayOfMonth();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  Chronology.dayOfMonth();	  iChronology    =    chronology.dayOfMonth()    +    1;    	non-compiled	[CE]  cannot  find  symbol  Chronology	199	None	replace
1998	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  2;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  2;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  +  2;	  iChronology    =    chronology.dayOfMonth()    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	199	None	replace
1999	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getYearMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getYearMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	41	None	replace
2000	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	41	None	replace
2001	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  [CE]  illegal  start  of  expression  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
2002	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  [CE]  illegal  start  of  expression  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
2003	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMon  [CE]  illegal  start  of  expression  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMon  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMon	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
2004	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  throw  new  IllegalFieldValueException( " ");  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  throw  new  IllegalFieldValueException( " ");  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  throw  new  IllegalFieldValueException( " ");  }	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	15	None	replace
2005	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getInstance(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  [CE]  illegal  start  of  expression  [FE]                                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getInstance(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getInstance(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
2006	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  [CE]  illegal  start  of  expression  [FE]                                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
2007	[BUG]  [BUGGY]  iChronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  iChronology.getDayOfMonth();  [CE]  incompatible  types  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  iChronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  iChronology.getDayOfMonth();	  Integer    iChronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    iChronology.getDayOfMonth();    	non-compiled	[CE]  incompatible  types	229	None	replace
2008	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  iChronology.getDayOfMonth()  +  1;  [CE]  incompatible  types  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  iChronology.getDayOfMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  iChronology.getDayOfMonth()  +  1;	  Integer    iChronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    iChronology.getDayOfMonth();    	non-compiled	[CE]  incompatible  types	229	None	replace
2009	[BUG]  [BUGGY]  if(iMax  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMon  [CE]  ';'  expected  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMax  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMon  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMax  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMon	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMon    	non-compiled	[CE]  ';'  expected	13	None	replace
2010	[BUG]  [BUGGY]  if(iMax  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMax  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMax  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMon    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	13	None	replace
2011	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.get  [CE]  ';'  expected  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.get  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.get	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMon    	non-compiled	[CE]  ';'  expected	13	None	replace
2012	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDay  [CE]  ';'  expected  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDay  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDay	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMon    	non-compiled	[CE]  ';'  expected	13	None	replace
2013	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayO  [CE]  ';'  expected  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayO  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayO	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMon    	non-compiled	[CE]  ';'  expected	13	None	replace
2014	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth  -  1;  [CE]  ';'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth  -  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC(),    leapMonth;    	non-compiled	[CE]  ';'  expected	130	None	replace
2015	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth  +  3;  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth  +  3;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth  +  3;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC(),    leapMonth;    	non-compiled	[CE]  ';'  expected	130	None	replace
2016	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  jumpMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  jumpMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  jumpMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC(),    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	130	None	replace
2017	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this,.millisOfDay());  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this,.millisOfDay());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this,.millisOfDay());	  iChronology    =    chronology.getChronology(this.millisOfDay());    	non-compiled	[CE]  illegal  start  of  expression	266	None	replace
2018	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.millisOfDay(),  this.monthOfYear());  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.millisOfDay(),  this.monthOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.millisOfDay(),  this.monthOfYear());	  iChronology    =    chronology.getChronology(this.millisOfDay());    	non-compiled	[CE]  cannot  find  symbol	266	None	replace
2019	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getHeight());  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getHeight());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getHeight());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
2020	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getHeaderMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getHeaderMillisPerMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getHeaderMillisPerMonth());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
2021	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getSecondMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getSecondMillisPerMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getSecondMillisPerMonth());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
2022	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getYearMonth());  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getYearMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getYearMonth());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
2023	[BUG]  [BUGGY]  int  iMin  =  data.getMinYear();  [CE]  cannot  find  symbol  data  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  data.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  data.getMinYear();	  int    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  data	141	None	replace
2024	[BUG]  [BUGGY]  iMin  =  iChronology.getMaxWeekMonth();  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMaxWeekMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMaxWeekMonth();	  iMin    =    chronology.getMinWeekMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	151	None	replace
2025	[BUG]  [BUGGY]  iMin  =  this.chronology.getMinWeekMonth();  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  this.chronology.getMinWeekMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  this.chronology.getMinWeekMonth();	  iMin    =    chronology.getMinWeekMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	151	None	replace
2026	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYearWeekMonth();  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYearWeekMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYearWeekMonth();	  iMin    =    chronology.getMinWeekMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	151	None	replace
2027	[BUG]  [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true);  [CE]  cannot  find  symbol  chronology  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    true);    	non-compiled	[CE]  cannot  find  symbol  chronology	100	None	replace
2028	[BUG]  [BUGGY]  iChronology  =  data.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true);  [CE]  cannot  find  symbol  data  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  data.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  data.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    true);    	non-compiled	[CE]  cannot  find  symbol  data	100	None	replace
2029	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMONTth,  true);  [CE]  cannot  find  symbol  leapMONTth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMONTth,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMONTth,  true);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    true);    	non-compiled	[CE]  cannot  find  symbol  leapMONTth	100	None	replace
2030	[BUG]  [BUGGY]  iMin  =  iChronology.getMaxYear(dayOfMonth);  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMaxYear(dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMaxYear(dayOfMonth);	  iMin    =    iChronology.getMaxYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	215	None	replace
2031	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(iWeekMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iWeekMonth);	  iChronology    =    chronology.withUTC(strMonth);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	202	None	replace
2032	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth-1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth-1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  -  leapMonth-1;	  iChronology    =    chronology.dayOfMonth()    -    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	113	None	replace
2033	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth,  false);  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  -  leapMonth,  false);	  iChronology    =    chronology.dayOfMonth()    -    leapMonth;    	non-compiled	[CE]  ';'  expected	113	None	replace
2034	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	232	None	replace
2035	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  [CE]  illegal  start  of  expression  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	232	None	replace
2036	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMon  [CE]  illegal  start  of  expression  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMon  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMon	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	232	None	replace
2037	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  [CE]  illegal  start  of  expression  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	232	None	replace
2038	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(iMonthOfYear);  [CE]  cannot  find  symbol  iMonthOfYear  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(iMonthOfYear);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(iMonthOfYear);	  iChronology    =    chronology.getInstance(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMonthOfYear	155	None	replace
2039	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(iChronology);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(iChronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(iChronology);	  iChronology    =    chronology.getInstance(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
2040	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(iFieldType);  [CE]  cannot  find  symbol  iFieldType  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(iFieldType);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(iFieldType);	  iChronology    =    chronology.getInstance(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iFieldType	155	None	replace
2041	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(iLastMonth);  [CE]  cannot  find  symbol  iLastMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(iLastMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(iLastMonth);	  iChronology    =    chronology.getInstance(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iLastMonth	155	None	replace
2042	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(strategyMonth);  [CE]  cannot  find  symbol  strategyMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(strategyMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(strategyMonth);	  iChronology    =    chronology.getInstance(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  strategyMonth	155	None	replace
2043	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.dayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  chronology.dayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.dayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	234	None	replace
2044	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  iDayOfMon  [CE]  illegal  start  of  expression  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  iDayOfMon  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  iDayOfMon	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	234	None	replace
2045	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  *  1000);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  *  1000);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  *  1000);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth    +    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	168	None	replace
2046	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  *  100);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  *  100);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  *  100);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth    +    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	168	None	replace
2047	[BUG]  [BUGGY]  iLeapMonth  =  this.chronology.getLeapMonth();  [CE]  cannot  find  symbol  chronology  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  this.chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  this.chronology.getLeapMonth();	  iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  chronology	8	None	replace
2048	[BUG]  [BUGGY]  iLeapMonth  =  ichronology.getLeapMonth();  [CE]  cannot  find  symbol  ichronology  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  ichronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  ichronology.getLeapMonth();	  iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  ichronology	8	None	replace
2049	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMONTth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMONTth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMONTth(),  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    pointOfMonth);    	non-compiled	[CE]  cannot  find  symbol	303	None	replace
2050	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  dayOfMonth);	  iChronology    =    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	200	None	replace
2051	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  null);  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  null);	  iChronology    =    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	200	None	replace
2052	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  hour);  [CE]  cannot  find  symbol  hour  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  hour);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  hour);	  iChronology    =    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  hour	200	None	replace
2053	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  false);  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  false);	  iChronology    =    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	200	None	replace
2054	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(throwMonth);  [CE]  cannot  find  symbol  throwMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(throwMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(throwMonth);	  iChronology    =    chronology.getBasicChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  throwMonth	20	None	replace
2055	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(iHours);  [CE]  cannot  find  symbol  iHours  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(iHours);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(iHours);	  iChronology    =    chronology.getBasicChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iHours	20	None	replace
2056	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  0,  MIN);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  0,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  0,  MIN);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
2057	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  this.min);  [CE]  cannot  find  symbol  min  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  this.min);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  this.min);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol  min	95	None	replace
2058	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  40);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  40);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  40);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
2059	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  60);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  60);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  60);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
2060	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth  *  1;  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth  *  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth  *  1;	  iLeapMonth    =    iChronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
2061	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth-  1;  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth-  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth()  +  leapMonth-  1;	  iLeapMonth    =    iChronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
2062	[BUG]  [BUGGY]  iChronology  =  iChronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  iChronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  iChronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth);	  iChronology    =    chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	281	None	replace
2063	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.hourOfYear(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.hourOfYear(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.hourOfYear(),  leapMonth);	  iChronology    =    chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	281	None	replace
2064	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DurationFieldType.dayOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  DurationFieldType  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DurationFieldType.dayOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getDateTimeField(DurationFieldType.dayOfMonth(),  leapMonth);	  iChronology    =    chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  DurationFieldType	281	None	replace
2065	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  jumpMonth);  [CE]  cannot  find  symbol  jumpMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  jumpMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  jumpMonth);	  iChronology    =    chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  jumpMonth	281	None	replace
2066	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth)+  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth)+  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth)+  1;	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    +    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	69	None	replace
2067	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth,  null);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth,  null);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    +    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	69	None	replace
2068	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth,  true);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth,  true);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    +    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	69	None	replace
2069	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  this.min);  [CE]  cannot  find  symbol  min  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  this.min);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  this.min);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol  min	76	None	replace
2070	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  0,  MIN);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  0,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  0,  MIN);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
2071	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  31);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  31);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  31);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
2072	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  null);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  null);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
2073	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  40);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  40);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  40);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
2074	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  60);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  60);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  60);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
2075	[BUG]  [BUGGY]  int  iLeapMonth  =  info.getLeapMonth();  [CE]  cannot  find  symbol  info  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  info.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  info.getLeapMonth();	  int    iLeapMonth    =    leapMonth.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  info	128	None	replace
2076	[BUG]  [BUGGY]  Integer  iMin  =  chronology.getMinYear();  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iMin  =  chronology.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iMin  =  chronology.getMinYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	63	None	replace
2077	[BUG]  [BUGGY]  iMin  =  interval.getMinYear();  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  interval.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  interval.getMinYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	63	None	replace
2078	[BUG]  [BUGGY]  iMin  =  info.getMinYear();  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  info.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  info.getMinYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	63	None	replace
2079	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.hourOfYear());  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.hourOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.hourOfYear());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfYear());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
2080	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.monthOfYear());  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.monthOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.monthOfYear());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfYear());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
2081	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.weekOfYear());  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.weekOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.weekOfYear());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfYear());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
2082	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.hourOfDay());  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.hourOfDay());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.hourOfDay());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfYear());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
2083	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth  -  1,  chronology.getLeapMonth();  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth  -  1,  chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth  -  1,  chronology.getLeapMonth();	  iLeapMonth    =    leapMonth,    chronology.getLeapMonth();    	non-compiled	[CE]  ';'  expected	4	None	replace
2084	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)&  ';'  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)&  ';'  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)&  ';'	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth)    	non-compiled	[CE]  ';'  expected	75	None	replace
2085	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.millisOfDay(),  leapMonth)  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.millisOfDay(),  leapMonth)  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.millisOfDay(),  leapMonth)	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth)    	non-compiled	[CE]  ';'  expected	75	None	replace
2086	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.hourOfYear(),  leapMonth)  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.hourOfYear(),  leapMonth)  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.hourOfYear(),  leapMonth)	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth)    	non-compiled	[CE]  ';'  expected	75	None	replace
2087	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth-1)  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth-1)  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth-1)	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth)    	non-compiled	[CE]  ';'  expected	75	None	replace
2088	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.hourOfDay(),  leapMonth)  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.hourOfDay(),  leapMonth)  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.hourOfDay(),  leapMonth)	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth)    	non-compiled	[CE]  ';'  expected	75	None	replace
2089	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  1);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	183	None	replace
2090	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  1  +  leapMonth);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  1  +  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  1  +  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	183	None	replace
2091	[BUG]  [BUGGY]  iMax  =  chronology.getLeapMonth();  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMax  =  chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMax  =  chronology.getLeapMonth();	  if(iDayOfMonth    ==    chronology.getDayOfMonth())    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    	non-compiled	[CE]  cannot  find  symbol	278	None	replace
2092	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  +  4;  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  +  4;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth()  *  leapMonth  +  4;	  iLeapMonth    =    iChronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
2093	[BUG]  [BUGGY]  iLeapMonth  =  chronology.getLeapMonth(iChronology);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  chronology.getLeapMonth(iChronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  chronology.getLeapMonth(iChronology);	  int    iLeapMonth    =    iChronology.getLeapMonth(chronology);    	non-compiled	[CE]  cannot  find  symbol	219	None	replace
2094	[BUG]  [BUGGY]  int  iLeapMonth  =  info.getLeapMonth(chronology);  [CE]  cannot  find  symbol  info  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  info.getLeapMonth(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  info.getLeapMonth(chronology);	  int    iLeapMonth    =    iChronology.getLeapMonth(chronology);    	non-compiled	[CE]  cannot  find  symbol  info	219	None	replace
2095	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getdayOfMonth();  [CE]  incompatible  types  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getdayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getdayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getdayOfMonth();    	non-compiled	[CE]  incompatible  types	46	None	replace
2096	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getdayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getdayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMonth  =  chronology.getdayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getdayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	46	None	replace
2097	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this,  iChronology);  [CE]  no  suitable  method  found  for  withUTC(BasicMonthOfYearDateTimeField,BasicChronology)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this,  iChronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this,  iChronology);	  iChronology    =    chronology.withUTC(iChronology);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(BasicMonthOfYearDateTimeField,BasicChronology)	203	None	replace
2098	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iChronology,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(iChronology,  dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iChronology,  dayOfMonth);	  iChronology    =    chronology.withUTC(iChronology);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	203	None	replace
2099	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth,  iChronology);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth,  iChronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.dayOfMonth,  iChronology);	  iChronology    =    chronology.withUTC(iChronology);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	203	None	replace
2100	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iChronology,  false);  [CE]  no  suitable  method  found  for  withUTC(BasicChronology,boolean)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(iChronology,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iChronology,  false);	  iChronology    =    chronology.withUTC(iChronology);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(BasicChronology,boolean)	203	None	replace
2101	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonths;  [CE]  cannot  find  symbol  dayOfMonths  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonths;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonths;	  iChronology    =    chronology.dayOfYear;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonths	34	None	replace
2102	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN),  false).withUTC();  [CE]  <identifier>  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN),  false).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN),  false).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    false).withUTC();    	non-compiled	[CE]  <identifier>  expected	246	None	replace
2103	[BUG]  [BUGGY]  iMin  =  (this.chronology!=  null?  this.chronology.getMinYear()  :  0);  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  (this.chronology!=  null?  this.chronology.getMinYear()  :  0);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  (this.chronology!=  null?  this.chronology.getMinYear()  :  0);	  iMin    =    this.chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	214	None	replace
2104	[BUG]  [BUGGY]  iMin  =  (this.chronology!=  null?  this.chronology.getMinYear()  :  1);  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  (this.chronology!=  null?  this.chronology.getMinYear()  :  1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  (this.chronology!=  null?  this.chronology.getMinYear()  :  1);	  iMin    =    this.chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	214	None	replace
2105	[BUG]  [BUGGY]  iMin  =  (this.chronology!=  null)?  this.chronology.getMinYear()  :  0;  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  (this.chronology!=  null)?  this.chronology.getMinYear()  :  0;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  (this.chronology!=  null)?  this.chronology.getMinYear()  :  0;	  iMin    =    this.chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	214	None	replace
2106	[BUG]  [BUGGY]  iChronology  =  chronology.getDayOfMonth(this.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDayOfMonth(this.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDayOfMonth(this.dayOfMonth);	  iChronology    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	36	None	replace
2107	[BUG]  [BUGGY]  iChronology  =  chronology.getDayOfMonth(this.dayOfMonth,  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDayOfMonth(this.dayOfMonth,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDayOfMonth(this.dayOfMonth,  leapMonth);	  iChronology    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	36	None	replace
2108	[BUG]  [BUGGY]  iChronology  =  chronology.getDayOfMonth(true);  [CE]  no  suitable  method  found  for  getDayOfMonth(boolean)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDayOfMonth(true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDayOfMonth(true);	  iChronology    =    chronology.getDayOfMonth();    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(boolean)	36	None	replace
2109	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-3);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-3);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-3);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth-1);    	non-compiled	[CE]  cannot  find  symbol	241	None	replace
2110	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-5);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-5);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-5);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth-1);    	non-compiled	[CE]  cannot  find  symbol	241	None	replace
2111	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-4);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-4);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-4);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth-1);    	non-compiled	[CE]  cannot  find  symbol	241	None	replace
2112	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getWeeksInYearMonth();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getWeeksInYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getWeeksInYearMonth();	  int    leapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	127	None	replace
2113	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getStandardMonth();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getStandardMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getStandardMonth();	  int    leapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	127	None	replace
2114	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getWeekOfYearMonth();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getWeekOfYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getWeekOfYearMonth();	  int    leapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	127	None	replace
2115	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  21);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  21);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  21);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth    +    2);    	non-compiled	[CE]  cannot  find  symbol	242	None	replace
2116	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  0,  null);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  0,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  0,  null);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    null);    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
2117	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  dataArea,  null);  [CE]  cannot  find  symbol  dataArea  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  dataArea,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  dataArea,  null);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    null);    	non-compiled	[CE]  cannot  find  symbol  dataArea	184	None	replace
2118	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  null  +  leapMonth);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  null  +  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  null  +  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    null);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	184	None	replace
2119	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  false);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  false);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    null);    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
2120	[BUG]  [BUGGY]  int  min  =  iChronology.getMaxYear()  +  1;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMaxYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMaxYear()  +  1;	  int    min    =    iChronology.getMaxYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	123	None	replace
2121	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth,  null);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth,  null);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth()    +    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	142	None	replace
2122	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth,  true);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  +  leapMonth,  true);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth()    +    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	142	None	replace
2123	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth-1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth-1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.dayOfMonth-1;	  int    iLeapMonth    =    iChronology.dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	108	None	replace
2124	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth  *  leapMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.dayOfMonth  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.dayOfMonth  *  leapMonth;	  int    iLeapMonth    =    iChronology.dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	108	None	replace
2125	[BUG]  [BUGGY]  iMin  =  0,  chronology.getMinMonth();  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  0,  chronology.getMinMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  0,  chronology.getMinMonth();	  iMin    =    0,    iChronology.getMinMonth();    	non-compiled	[CE]  ';'  expected	187	None	replace
2126	[BUG]  [BUGGY]  iMin  =  0,  iChronology.getMinMonth()  +  2;  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  0,  iChronology.getMinMonth()  +  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  0,  iChronology.getMinMonth()  +  2;	  iMin    =    0,    iChronology.getMinMonth();    	non-compiled	[CE]  ';'  expected	187	None	replace
2127	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  iChronology);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  iChronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  iChronology);	  iChronology    =    chronology.getBasicChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	18	None	replace
2128	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  iChronology);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  iChronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this,  iChronology);	  iChronology    =    chronology.getBasicChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
2129	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(iJsFieldType,  iChronology);  [CE]  cannot  find  symbol  iJsFieldType  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(iJsFieldType,  iChronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(iJsFieldType,  iChronology);	  iChronology    =    chronology.getBasicChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol  iJsFieldType	18	None	replace
2130	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth  [CE]  ';'  expected  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth    	non-compiled	[CE]  ';'  expected	16	None	replace
2131	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(period,  chronology);  [CE]  cannot  find  symbol  period  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear(period,  chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(period,  chronology);	  int    min    =    iChronology.getMinYear(chronology);    	non-compiled	[CE]  cannot  find  symbol  period	310	None	replace
2132	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(variance,  chronology);  [CE]  cannot  find  symbol  variance  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear(variance,  chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(variance,  chronology);	  int    min    =    iChronology.getMinYear(chronology);    	non-compiled	[CE]  cannot  find  symbol  variance	310	None	replace
2133	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(iWeekMonth,  chronology);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear(iWeekMonth,  chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(iWeekMonth,  chronology);	  int    min    =    iChronology.getMinYear(chronology);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	310	None	replace
2134	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.dayOfMonth()  -  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.dayOfMonth()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.dayOfMonth()  -  1;	  iLeapMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	3	None	replace
2135	[BUG]  [BUGGY]  this.iField  =  DateTimeFieldType.dayOfMonth()  +  1;  [CE]  cannot  find  symbol  iField  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  this.iField  =  DateTimeFieldType.dayOfMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	this.iField  =  DateTimeFieldType.dayOfMonth()  +  1;	  iField    =    DateTimeFieldType.dayOfMonth()    +    1;    	non-compiled	[CE]  cannot  find  symbol  iField	213	None	replace
2136	[BUG]  [BUGGY]  theMonthOfYear  =  DateTimeFieldType.dayOfMonth()  +  1;  [CE]  cannot  find  symbol  theMonthOfYear  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  theMonthOfYear  =  DateTimeFieldType.dayOfMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	theMonthOfYear  =  DateTimeFieldType.dayOfMonth()  +  1;	  iField    =    DateTimeFieldType.dayOfMonth()    +    1;    	non-compiled	[CE]  cannot  find  symbol  theMonthOfYear	213	None	replace
2137	[BUG]  [BUGGY]  Item  iField  =  DateTimeFieldType.dayOfMonth()  +  1;  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Item  iField  =  DateTimeFieldType.dayOfMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Item  iField  =  DateTimeFieldType.dayOfMonth()  +  1;	  iField    =    DateTimeFieldType.dayOfMonth()    +    1;    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
2138	[BUG]  [BUGGY]  Item  iField  =  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Item  iField  =  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Item  iField  =  DateTimeFieldType.dayOfMonth();	  iField    =    DateTimeFieldType.dayOfMonth()    +    1;    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
2139	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.weekOfYear();  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.weekOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.weekOfYear();	  int    iLeapMonth    =    iChronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
2140	[BUG]  [BUGGY]  iMin  =  this.interval.getMinMonth();  [CE]  cannot  find  symbol  iMin  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  this.interval.getMinMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  this.interval.getMinMonth();	  iMin    =    interval.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	317	None	replace
2141	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)-  1;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)-  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)-  1;	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth));    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
2142	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfYear(),  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfYear(),  dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfYear(),  dayOfMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	194	None	replace
2143	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.hourOfYear(),  dayOfMonth);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.hourOfYear(),  dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.hourOfYear(),  dayOfMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
2144	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.hourOfMonth(),  dayOfMonth);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.hourOfMonth(),  dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.hourOfMonth(),  dayOfMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
2145	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth  -  1);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth  -  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth  -  1);	  iChronology    =    chronology.getChronology(DateTimeZone.UTC,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	288	None	replace
2146	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth)+  1;  [CE]  cannot  find  symbol  DateTimeZone  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth)+  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth)+  1;	  iChronology    =    chronology.getChronology(DateTimeZone.UTC,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	288	None	replace
2147	[BUG]  [BUGGY]  int  min  =  iDate.getMinYear();  [CE]  cannot  find  symbol  iDate  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iDate.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iDate.getMinYear();	  int    min    =    dataArea.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iDate	120	None	replace
2148	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  true);  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  true);	  iChronology    =    new    BasicChronology(chronology.getBasicChronology());    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
2149	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  false);  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  false);	  iChronology    =    new    BasicChronology(chronology.getBasicChronology());    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
2150	[BUG]  [BUGGY]  iChronology  =  this.chronology.getBasicChronology(this.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getBasicChronology(this.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getBasicChronology(this.dayOfMonth);	  iChronology    =    this.chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	24	None	replace
2151	[BUG]  [BUGGY]  iChronology  =(this.chronology!=  null)?  this.chronology  :  chronology.getBasicChronology();  [CE]  cannot  find  symbol  chronology  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =(this.chronology!=  null)?  this.chronology  :  chronology.getBasicChronology();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =(this.chronology!=  null)?  this.chronology  :  chronology.getBasicChronology();	  iChronology    =    this.chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol  chronology	24	None	replace
2152	[BUG]  [BUGGY]  iChronology  =(this.chronology  ==  null)?  this.chronology  :  chronology.getBasicChronology();  [CE]  cannot  find  symbol  chronology  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =(this.chronology  ==  null)?  this.chronology  :  chronology.getBasicChronology();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =(this.chronology  ==  null)?  this.chronology  :  chronology.getBasicChronology();	  iChronology    =    this.chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol  chronology	24	None	replace
2153	[BUG]  [BUGGY]  iChronology  =  DateTimeUtils.getBasicChronology(chronology);  [CE]  cannot  find  symbol  [FE]                                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  DateTimeUtils.getBasicChronology(chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  DateTimeUtils.getBasicChronology(chronology);	  iChronology    =    this.chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
2154	[BUG]  [BUGGY]  iChronology  =(this.chronology!=  null)?  this.chronology.getBasicChronology()  :  chronology;  [CE]  cannot  find  symbol  chronology  [FE]                                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =(this.chronology!=  null)?  this.chronology.getBasicChronology()  :  chronology;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =(this.chronology!=  null)?  this.chronology.getBasicChronology()  :  chronology;	  iChronology    =    this.chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol  chronology	24	None	replace
2155	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  -  leapMonth  +  31;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  -  leapMonth  +  31;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  -  leapMonth  +  31;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    -    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	134	None	replace
2156	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	14	None	replace
2157	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  }  else  {  [CE]  illegal  start  of  expression  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  }  else  {  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  }  else  {	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth()    +    leapMonth;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
2158	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  }  else  {  throw  new  IllegalFieldValueException( "Date  [CE]  unclosed  string  literal  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  }  else  {  throw  new  IllegalFieldValueException( "Date  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  }  else  {  throw  new  IllegalFieldValueException( "Date	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth()    +    leapMonth;    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
2159	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  [CE]  incompatible  types  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth()    +    leapMonth;    	non-compiled	[CE]  incompatible  types	14	None	replace
2160	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  }  else  {  i  [CE]  illegal  start  of  expression  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  }  else  {  i  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  }  else  {  i	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth()    +    leapMonth;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
2161	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear()  +  leapMonth  *  1;  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear()  +  leapMonth  *  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear()  +  leapMonth  *  1;	  iMin    =    iChronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iMin	56	None	replace
2162	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear()  +  leapMonth-  1;  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear()  +  leapMonth-  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear()  +  leapMonth-  1;	  iMin    =    iChronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iMin	56	None	replace
2163	[BUG]  [BUGGY]  int  iMin  =  iChronology.getMinYear()  +  leapMonth;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  iChronology.getMinYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  iChronology.getMinYear()  +  leapMonth;	  iMin    =    iChronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	56	None	replace
2164	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear()  +  leapMonth  *  2;  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear()  +  leapMonth  *  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear()  +  leapMonth  *  2;	  iMin    =    iChronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iMin	56	None	replace
2165	[BUG]  [BUGGY]  iMin  =  data.getMinYear()  +  1;  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  data.getMinYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  data.getMinYear()  +  1;	  iMin    =    data.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	216	None	replace
2166	[BUG]  [BUGGY]  iMin  =  time.getMinYear();  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  time.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  time.getMinYear();	  iMin    =    data.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	216	None	replace
2167	[BUG]  [BUGGY]  iLeapMonth  =  chronology.getFirstDayOfMonth();  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  chronology.getFirstDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  chronology.getFirstDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLastDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
2168	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(strMonth);  [CE]  cannot  find  symbol  strMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(strMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth(strMonth);	  int    iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  strMonth	107	None	replace
2169	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(true);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(true);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth(true);	  int    iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
2170	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(iMax);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(iMax);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth(iMax);	  int    iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
2171	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(priority);  [CE]  cannot  find  symbol  priority  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth(priority);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth(priority);	  int    iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  priority	107	None	replace
2172	[BUG]  [BUGGY]  int  iLeapMonth  =  ichronology.getLeapMonth()  +  leapMonth;  [CE]  cannot  find  symbol  ichronology  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  ichronology.getLeapMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  ichronology.getLeapMonth()  +  leapMonth;	  int    iLeapMonth    =    chronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  ichronology	124	None	replace
2173	[BUG]  [BUGGY]  int  iLeapMonth  =  info.getLeapMonth()  +  leapMonth;  [CE]  cannot  find  symbol  info  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  info.getLeapMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  info.getLeapMonth()  +  leapMonth;	  int    iLeapMonth    =    chronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  info	124	None	replace
2174	[BUG]  [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  false);  [CE]  cannot  find  symbol  chronology  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  false);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    false);    	non-compiled	[CE]  cannot  find  symbol  chronology	98	None	replace
2175	[BUG]  [BUGGY]  iChronology  =  data.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  false);  [CE]  cannot  find  symbol  data  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  data.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  data.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  false);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    false);    	non-compiled	[CE]  cannot  find  symbol  data	98	None	replace
2176	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMONTth,  false);  [CE]  cannot  find  symbol  leapMONTth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMONTth,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMONTth,  false);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    false);    	non-compiled	[CE]  cannot  find  symbol  leapMONTth	98	None	replace
2177	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth,  false);  [CE]  cannot  find  symbol  jumpMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth,  false);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    false);    	non-compiled	[CE]  cannot  find  symbol  jumpMonth	98	None	replace
2178	[BUG]  [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  chronology.getLeapMonth());  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  chronology.getLeapMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  chronology.getLeapMonth());	  iChronology    =    this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	256	None	replace
2179	[BUG]  [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  1,  leapMonth);  [CE]  cannot  find  symbol  chronology  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  1,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  1,  leapMonth);	  iChronology    =    this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  chronology	256	None	replace
2180	[BUG]  [BUGGY]  iLeapMonth  =  jumpMonth.getLeapMonth();  [CE]  cannot  find  symbol  jumpMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  jumpMonth.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  jumpMonth.getLeapMonth();	  iLeapMonth    =    leapMonth.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  jumpMonth	2	None	replace
2181	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth,  false);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth,  false);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    -    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	71	None	replace
2182	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth,  30);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth,  30);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth,  30);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    -    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	71	None	replace
2183	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth,  MIN);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth,  MIN);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    -    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	71	None	replace
2184	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  leapMonth  -  1);  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  leapMonth  -  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  leapMonth  -  1);	  iChronology    =    new    BasicChronology(chronology.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	198	None	replace
2185	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  1,  leapMonth);  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  1,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  1,  leapMonth);	  iChronology    =    new    BasicChronology(chronology.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	198	None	replace
2186	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  leapMonth  +  2);  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  leapMonth  +  2);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  leapMonth  +  2);	  iChronology    =    new    BasicChronology(chronology.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	198	None	replace
2187	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear(switchMonth  +  1);  [CE]  cannot  find  symbol  iMin  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear(switchMonth  +  1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear(switchMonth  +  1);	  iMin    =    chronology.getMinYear(switchMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	60	None	replace
2188	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth.getInstance(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth.getInstance(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth.getInstance(DateTimeFieldType.dayOfMonth());	  iChronology    =    iChronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	143	None	replace
2189	[BUG]  [BUGGY]  iChronology  =  chronology.findInstance(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.findInstance(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.findInstance(DateTimeFieldType.dayOfMonth());	  iChronology    =    iChronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
2190	[BUG]  [BUGGY]  iChronology  =  data.getInstance(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  data  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  data.getInstance(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  data.getInstance(DateTimeFieldType.dayOfMonth());	  iChronology    =    iChronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  data	143	None	replace
2191	[BUG]  [BUGGY]  iChronology  =  chronology.visit(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.visit(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.visit(DateTimeFieldType.dayOfMonth());	  iChronology    =    iChronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
2192	[BUG]  [BUGGY]  iChronology  =  period.getInstance(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  period  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  period.getInstance(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  period.getInstance(DateTimeFieldType.dayOfMonth());	  iChronology    =    iChronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  period	143	None	replace
2193	[BUG]  [BUGGY]  int  iLeapMonth  =  this.iChronology.getLeapMonth()  +  1;  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  this.iChronology.getLeapMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  this.iChronology.getLeapMonth()  +  1;	  int    iLeapMonth    =    iChronology.getLeapMonth()    +    1;    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
2194	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.iChronology);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.iChronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.iChronology);	  iChronology    =    chronology.getChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
2195	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this,  iChronology);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this,  iChronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this,  iChronology);	  iChronology    =    chronology.getChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
2196	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iJoinFieldType,  iChronology);  [CE]  cannot  find  symbol  iJoinFieldType  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iJoinFieldType,  iChronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iJoinFieldType,  iChronology);	  iChronology    =    chronology.getChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol  iJoinFieldType	27	None	replace
2197	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getInstance(chronology);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getInstance(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getInstance(chronology);	  BasicChronology    chronology    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	296	None	replace
2198	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis()  /  DateTimeUtils.getChronology(chronology);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis()  /  DateTimeUtils.getChronology(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis()  /  DateTimeUtils.getChronology(chronology);	  BasicChronology    chronology    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	296	None	replace
2199	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis()  /  DateTimeUtils.MILLIS_PER_HOUR;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis()  /  DateTimeUtils.MILLIS_PER_HOUR;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis()  /  DateTimeUtils.MILLIS_PER_HOUR;	  BasicChronology    chronology    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	296	None	replace
2200	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis(),  chronology;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis(),  chronology;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis(),  chronology;	  BasicChronology    chronology    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	296	None	replace
2201	[BUG]  [BUGGY]  int  iLeapMonth  =  this.iChronology.getLeapMonth(this.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  this.iChronology.getLeapMonth(this.dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  this.iChronology.getLeapMonth(this.dayOfMonth);	  int    iLeapMonth    =    this.iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	289	None	replace
2202	[BUG]  [BUGGY]  int  iLeapMonth  =  this.iChronology.getLeapMonth()  +  2;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  this.iChronology.getLeapMonth()  +  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  this.iChronology.getLeapMonth()  +  2;	  int    iLeapMonth    =    this.iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	289	None	replace
2203	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getFirstMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getFirstMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getFirstMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLastMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	235	None	replace
2204	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  29);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  29);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  29);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
2205	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getZone());  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getZone());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getZone());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getZone());    	non-compiled	[CE]  cannot  find  symbol	306	None	replace
2206	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  dataZone.getZone());  [CE]  cannot  find  symbol  dataZone  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  dataZone.getZone());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  dataZone.getZone());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getZone());    	non-compiled	[CE]  cannot  find  symbol  dataZone	306	None	replace
2207	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  date.getZone());  [CE]  cannot  find  symbol  date  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  date.getZone());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  date.getZone());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getZone());    	non-compiled	[CE]  cannot  find  symbol  date	306	None	replace
2208	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  period.getZone());  [CE]  cannot  find  symbol  period  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  period.getZone());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  period.getZone());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getZone());    	non-compiled	[CE]  cannot  find  symbol  period	306	None	replace
2209	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  interval.getZone());  [CE]  cannot  find  symbol  interval  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  interval.getZone());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  interval.getZone());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getZone());    	non-compiled	[CE]  cannot  find  symbol  interval	306	None	replace
2210	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  dataArea.getZone());  [CE]  cannot  find  symbol  dataArea  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  dataArea.getZone());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  dataArea.getZone());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getZone());    	non-compiled	[CE]  cannot  find  symbol  dataArea	306	None	replace
2211	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  this.dayOfMonth.getZone());  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  this.dayOfMonth.getZone());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  this.dayOfMonth.getZone());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getZone());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	306	None	replace
2212	[BUG]  [BUGGY]  iField  =  this.dateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  iField  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  this.dateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  this.dateTimeFieldType.dayOfMonth();	  iField    =    dateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iField	92	None	replace
2213	[BUG]  [BUGGY]  iField  =  this.dayOfMonthType.dayOfMonth();  [CE]  cannot  find  symbol  iField  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  this.dayOfMonthType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  this.dayOfMonthType.dayOfMonth();	  iField    =    dateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iField	92	None	replace
2214	[BUG]  [BUGGY]  iField  =  periodType.dayOfMonth();  [CE]  cannot  find  symbol  iField  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  periodType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  periodType.dayOfMonth();	  iField    =    dateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iField	92	None	replace
2215	[BUG]  [BUGGY]  iChronology  =  iChronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  null);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  iChronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  iChronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  null);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    null);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
2216	[BUG]  [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  null);  [CE]  cannot  find  symbol  chronology  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  null);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    null);    	non-compiled	[CE]  cannot  find  symbol  chronology	97	None	replace
2217	[BUG]  [BUGGY]  iChronology  =  null.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  null);  [CE]  <null>  cannot  be  dereferenced  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  null.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  null.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  null);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    null);    	non-compiled	[CE]  <null>  cannot  be  dereferenced	97	None	replace
2218	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth,  null);  [CE]  cannot  find  symbol  jumpMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth,  null);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    null);    	non-compiled	[CE]  cannot  find  symbol  jumpMonth	97	None	replace
2219	[BUG]  [BUGGY]  iHeaderMonth  =  chronology.getMonthOfYear();  [CE]  cannot  find  symbol  iHeaderMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iHeaderMonth  =  chronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iHeaderMonth  =  chronology.getMonthOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iHeaderMonth	267	None	replace
2220	[BUG]  [BUGGY]  iWindow  =  chronology.getMonthOfYear();  [CE]  cannot  find  symbol  iWindow  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iWindow  =  chronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iWindow  =  chronology.getMonthOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iWindow	267	None	replace
2221	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  1000);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  1000);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  1000);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	177	None	replace
2222	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN_YEAR);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN_YEAR);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN_YEAR);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	177	None	replace
2223	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.dayOfMonth);	  iChronology    =    chronology.getBasicChronology(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	17	None	replace
2224	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth  +  1);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth  +  1);	  iChronology    =    chronology.getBasicChronology(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	17	None	replace
2225	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  12);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  12);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  12);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    30);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	255	None	replace
2226	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  100);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  100);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  100);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    40);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	171	None	replace
2227	[BUG]  [BUGGY]  iMin  =  this.chronology.getMinYearMonth();  [CE]  cannot  find  symbol  iMin  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  this.chronology.getMinYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  this.chronology.getMinYearMonth();	  iMin    =    chronology.getMinYearMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	148	None	replace
2228	[BUG]  [BUGGY]  iMin  =  chronology.getMinYearMonth()  +  1;  [CE]  cannot  find  symbol  iMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYearMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYearMonth()  +  1;	  iMin    =    chronology.getMinYearMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	148	None	replace
2229	[BUG]  [BUGGY]  iMin  =  iChronology.getMaxYearMonth();  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMaxYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMaxYearMonth();	  iMin    =    chronology.getMinYearMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	148	None	replace
2230	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYearMonth()  +  2;  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYearMonth()  +  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYearMonth()  +  2;	  iMin    =    iChronology.getMinYearMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	152	None	replace
2231	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYearMonth()  *  2;  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYearMonth()  *  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYearMonth()  *  2;	  iMin    =    iChronology.getMinYearMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	152	None	replace
2232	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfYear(),  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfYear(),  dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfYear(),  dayOfMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	302	None	replace
2233	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.hourOfYear(),  dayOfMonth);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.hourOfYear(),  dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.hourOfYear(),  dayOfMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	302	None	replace
2234	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.weekOfYear(),  dayOfMonth);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.weekOfYear(),  dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.weekOfYear(),  dayOfMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	302	None	replace
2235	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.monthOfYear(),  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.monthOfYear(),  dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.monthOfYear(),  dayOfMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	302	None	replace
2236	[BUG]  [BUGGY]  iMin  =  chronology.getMinYearOfYear();  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYearOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYearOfYear();	  iMin    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	140	None	replace
2237	[BUG]  [BUGGY]  iMin  =  this.chronology.getDayOfMonth();  [CE]  cannot  find  symbol  iMin  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  this.chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  this.chronology.getDayOfMonth();	  iMin    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	140	None	replace
2238	[BUG]  [BUGGY]  iMin  =  chronology.getMinuteOfYear();  [CE]  cannot  find  symbol  iMin  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinuteOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinuteOfYear();	  iMin    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	140	None	replace
2239	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth  -  1);  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth  -  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth(),  leapMonth  -  1);	  iChronology    =    chronology.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  ';'  expected	114	None	replace
2240	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth);  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  -  leapMonth);	  iChronology    =    chronology.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  ';'  expected	114	None	replace
2241	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth(strMonth);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth(strMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getDayOfMonth(strMonth);	  int    leapMonth    =    iChronology.getDayOfMonth(chronology);    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	237	None	replace
2242	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(gronology);  [CE]  cannot  find  symbol  gronology  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(gronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(gronology);	  iChronology    =    chronology.withUTC(switchMonth);    	non-compiled	[CE]  cannot  find  symbol  gronology	49	None	replace
2243	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().withZone(DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().withZone(DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().withZone(DateTimeFieldType.dayOfMonth(),  leapMonth);	  iChronology    =    chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	324	None	replace
2244	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.hourOfYear(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.hourOfYear(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.hourOfYear(),  leapMonth);	  iChronology    =    chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	324	None	replace
2245	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth;  [CE]  ')'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth;	  iChronology    =    chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  ')'  expected	324	None	replace
2246	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.hourOfYear);  [CE]  cannot  find  symbol  hourOfYear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.hourOfYear);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.hourOfYear);	  iChronology    =    chronology.getChronology(chronology);    	non-compiled	[CE]  cannot  find  symbol  hourOfYear	286	None	replace
2247	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.period);  [CE]  cannot  find  symbol  period  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.period);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.period);	  iChronology    =    chronology.getChronology(chronology);    	non-compiled	[CE]  cannot  find  symbol  period	286	None	replace
2248	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.year);  [CE]  cannot  find  symbol  year  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.year);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.year);	  iChronology    =    chronology.getChronology(chronology);    	non-compiled	[CE]  cannot  find  symbol  year	286	None	replace
2249	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth  +  1);  [CE]  cannot  find  symbol  dayOfMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.dayOfMonth  +  1);	  iChronology    =    chronology.withUTC(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	201	None	replace
2250	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth,  this.min);  [CE]  cannot  find  symbol  dayOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth,  this.min);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.dayOfMonth,  this.min);	  iChronology    =    chronology.withUTC(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	201	None	replace
2251	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth,  this.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth,  this.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.dayOfMonth,  this.dayOfMonth);	  iChronology    =    chronology.withUTC(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	201	None	replace
2252	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth,  this.minute);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth,  this.minute);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.dayOfMonth,  this.minute);	  iChronology    =    chronology.withUTC(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	201	None	replace
2253	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth,  this.max);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth,  this.max);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.dayOfMonth,  this.max);	  iChronology    =    chronology.withUTC(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	201	None	replace
2254	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth)+  1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth)+  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.dayOfMonth)+  1;	  iChronology    =    chronology.withUTC(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	201	None	replace
2255	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonthOfYear(secondMonth);  [CE]  cannot  find  symbol  secondMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonthOfYear(secondMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonthOfYear(secondMonth);	  iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  secondMonth	210	None	replace
2256	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonthOfYear(strMonth);  [CE]  cannot  find  symbol  strMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonthOfYear(strMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonthOfYear(strMonth);	  iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  strMonth	210	None	replace
2257	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonthOfYear(true);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonthOfYear(true);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonthOfYear(true);	  iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
2258	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getRightMonth()  *  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getRightMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getRightMonth()  *  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	161	None	replace
2259	[BUG]  [BUGGY]  iLeapMonth  =  DateTimeUtils.getChronology(chronology).getLeapMonth()  *  leapMonth;  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  DateTimeUtils.getChronology(chronology).getLeapMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  DateTimeUtils.getChronology(chronology).getLeapMonth()  *  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
2260	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.monthOfYear();  [CE]  cannot  find  symbol  iField  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.monthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.monthOfYear();	  iField    =    DateTimeFieldType.dayOfMonth()    |    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iField	307	None	replace
2261	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  jumpMonth  -  1);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  jumpMonth  -  1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  jumpMonth  -  1);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    jumpMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	174	None	replace
2262	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getMonthOfDay();  [CE]  incompatible  types  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getMonthOfDay();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getMonthOfDay();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfDay();    	non-compiled	[CE]  incompatible  types	44	None	replace
2263	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iMonth  =  chronology.getMonthOfDay();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iMonth  =  chronology.getMonthOfDay();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iMonth  =  chronology.getMonthOfDay();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfDay();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	44	None	replace
2264	[BUG]  [BUGGY]  jourOfMonth  =  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  jourOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  jourOfMonth  =  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	jourOfMonth  =  DateTimeFieldType.dayOfMonth();	  dayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  jourOfMonth	94	None	replace
2265	[BUG]  [BUGGY]  TageOfMonth  =  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  TageOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  TageOfMonth  =  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	TageOfMonth  =  DateTimeFieldType.dayOfMonth();	  dayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  TageOfMonth	94	None	replace
2266	[BUG]  [BUGGY]  daysOfMonth  =  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  daysOfMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  daysOfMonth  =  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	daysOfMonth  =  DateTimeFieldType.dayOfMonth();	  dayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  daysOfMonth	94	None	replace
2267	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.getDefault(),  timeZone);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.getDefault(),  timeZone);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.getDefault(),  timeZone);	  iChronology    =    chronology.getInstance(DateTimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	260	None	replace
2268	[BUG]  [BUGGY]  iYearMonth  =  chronology.getYearMonth();  [CE]  cannot  find  symbol  iYearMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iYearMonth  =  chronology.getYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iYearMonth  =  chronology.getYearMonth();	  if(iDayOfMonth!=    chronology.getDayOfMonth())    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iYearMonth	272	None	replace
2269	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  30);  [CE]  cannot  find  symbol  DateTimeFormat  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  30);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  30);	  iChronology    =    chronology.getInstance(DateTimeFormat.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  DateTimeFormat	301	None	replace
2270	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  dayOfMonth);  [CE]  cannot  find  symbol  DateTimeFormat  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  dayOfMonth);	  iChronology    =    chronology.getInstance(DateTimeFormat.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  DateTimeFormat	301	None	replace
2271	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  minute);  [CE]  cannot  find  symbol  DateTimeFormat  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  minute);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  minute);	  iChronology    =    chronology.getInstance(DateTimeFormat.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  DateTimeFormat	301	None	replace
2272	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  seconds);  [CE]  cannot  find  symbol  DateTimeFormat  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  seconds);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  seconds);	  iChronology    =    chronology.getInstance(DateTimeFormat.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  DateTimeFormat	301	None	replace
2273	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  hour);  [CE]  cannot  find  symbol  DateTimeFormat  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  hour);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  hour);	  iChronology    =    chronology.getInstance(DateTimeFormat.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  DateTimeFormat	301	None	replace
2274	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  false);  [CE]  cannot  find  symbol  DateTimeFormat  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  false);	  iChronology    =    chronology.getInstance(DateTimeFormat.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  DateTimeFormat	301	None	replace
2275	[BUG]  [BUGGY]  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear();  [CE]  incompatible  types  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear();	  Integer    iChronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  incompatible  types	263	None	replace
2276	[BUG]  [BUGGY]  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getMonthOfYear();  [CE]  incompatible  types  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getMonthOfYear();	  Integer    iChronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  incompatible  types	263	None	replace
2277	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  this.chronology.getMonthOfYear();  [CE]  incompatible  types  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  this.chronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  this.chronology.getMonthOfYear();	  Integer    iChronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  incompatible  types	263	None	replace
2278	[BUG]  [BUGGY]  iLeapMonth  =  iChronology  +  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology  +  leapMonth;	  iLeapMonth    =    leapMonth    +    iChronology.getLeapMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	5	None	replace
2279	[BUG]  [BUGGY]  iLeapMonth  =  MIN  +  iChronology.getLeapMonth();  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  MIN  +  iChronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  MIN  +  iChronology.getLeapMonth();	  iLeapMonth    =    leapMonth    +    iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
2280	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.hourOfYear());  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.hourOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.hourOfYear());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfYear());    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
2281	[BUG]  [BUGGY]  iMin  =  iFieldType.getMaxYear();  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iFieldType.getMaxYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iFieldType.getMaxYear();	  iMin    =    chronology.getMaxYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	57	None	replace
2282	[BUG]  [BUGGY]  int  iMonth  =  iChronology.getMonthOfYear();  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMonth  =  iChronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMonth  =  iChronology.getMonthOfYear();	  int    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	269	None	replace
2283	[BUG]  [BUGGY]  int  iMonth  =  chronology.getMonthOfYear(this.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMonth  =  chronology.getMonthOfYear(this.dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMonth  =  chronology.getMonthOfYear(this.dayOfMonth);	  int    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	269	None	replace
2284	[BUG]  [BUGGY]  int  iMonth  =  chronology.getMonthOfYear()  +  2;  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMonth  =  chronology.getMonthOfYear()  +  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMonth  =  chronology.getMonthOfYear()  +  2;	  int    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	269	None	replace
2285	[BUG]  [BUGGY]  int  iMonth  =  chronology.getMonthOfYear(dayOfMonth,  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMonth  =  chronology.getMonthOfYear(dayOfMonth,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMonth  =  chronology.getMonthOfYear(dayOfMonth,  leapMonth);	  int    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	269	None	replace
2286	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.monthOfYear);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.monthOfYear);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  this.monthOfYear);	  iChronology    =    chronology.getChronology(this.dayOfMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	287	None	replace
2287	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayofMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayofMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayofMonth);	  iChronology    =    chronology.getChronology(this.dayOfMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	287	None	replace
2288	[BUG]  [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Node  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  iDayOfMonth  =  chronology.getDayOfMonth();	  Node    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	231	None	replace
2289	[BUG]  [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology!=  null?  0  :  chronology.getDayOfMonth();  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology!=  null?  0  :  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Node  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology!=  null?  0  :  chronology.getDayOfMonth();	  Node    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	231	None	replace
2290	[BUG]  [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology!=  null?  -1  :  chronology.getDayOfMonth();  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology!=  null?  -1  :  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Node  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology!=  null?  -1  :  chronology.getDayOfMonth();	  Node    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	231	None	replace
2291	[BUG]  [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Node  chronology  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();	  Node    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	231	None	replace
2292	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth-1);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth-1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth-1);	  iChronology    =    chronology.getInstance(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	154	None	replace
2293	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth;  [CE]  ')'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth;	  iChronology    =    chronology.getInstance(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  ')'  expected	154	None	replace
2294	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth  +  2);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth  +  2);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth  +  2);	  iChronology    =    chronology.getInstance(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	154	None	replace
2295	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth  *  2);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth  *  2);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  leapMonth  *  2);	  iChronology    =    chronology.getInstance(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	154	None	replace
2296	[BUG]  [BUGGY]  int  iLeapMonth  =  decodeBasicMonth(chronology.getLeapMonth());  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  decodeBasicMonth(chronology.getLeapMonth());  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  decodeBasicMonth(chronology.getLeapMonth());	  int    iLeapMonth    =    ichronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	179	None	replace
2297	[BUG]  [BUGGY]  int  iLeapMonth  =  hiFieldType.getLeapMonth();  [CE]  cannot  find  symbol  hiFieldType  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  hiFieldType.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  hiFieldType.getLeapMonth();	  int    iLeapMonth    =    ichronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  hiFieldType	179	None	replace
2298	[BUG]  [BUGGY]  iMin  =  (this.iChronology!=  null)?  this.iChronology.getMinMonth()  :  1;  [CE]  cannot  find  symbol  iMin  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  (this.iChronology!=  null)?  this.iChronology.getMinMonth()  :  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  (this.iChronology!=  null)?  this.iChronology.getMinMonth()  :  1;	  iMin    =    this.iChronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	186	None	replace
2299	[BUG]  [BUGGY]  iMin  =  (this.iChronology!=  null)?  this.iChronology.getMinMonth()  :  0;  [CE]  cannot  find  symbol  iMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  (this.iChronology!=  null)?  this.iChronology.getMinMonth()  :  0;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  (this.iChronology!=  null)?  this.iChronology.getMinMonth()  :  0;	  iMin    =    this.iChronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	186	None	replace
2300	[BUG]  [BUGGY]  iMin  =  (this.iChronology!=  null)?  this.iChronology.getMinMonth()  :  leapMonth;  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  (this.iChronology!=  null)?  this.iChronology.getMinMonth()  :  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  (this.iChronology!=  null)?  this.iChronology.getMinMonth()  :  leapMonth;	  iMin    =    this.iChronology.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	186	None	replace
2301	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDay  [CE]  ';'  expected  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDay  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDay	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  ';'  expected	12	None	replace
2302	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayO  [CE]  ';'  expected  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayO  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayO	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  ';'  expected	12	None	replace
2303	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.get  [CE]  ';'  expected  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.get  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.get	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  ';'  expected	12	None	replace
2304	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOf  [CE]  ';'  expected  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOf  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOf	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  ';'  expected	12	None	replace
2305	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.  [CE]  illegal  start  of  expression  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
2306	[BUG]  [BUGGY]  iLeapMonth  =  new  BasicChronology(chronology.dayOfMonth,  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  new  BasicChronology(chronology.dayOfMonth,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  new  BasicChronology(chronology.dayOfMonth,  leapMonth);	  iLeapMonth    =    iChronology.dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	209	None	replace
2307	[BUG]  [BUGGY]  iLeapMonth  =  new  BasicChronology(chronology.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  new  BasicChronology(chronology.dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  new  BasicChronology(chronology.dayOfMonth);	  iLeapMonth    =    iChronology.dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	209	None	replace
2308	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.dayOfMonth  *  leapMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.dayOfMonth  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.dayOfMonth  *  leapMonth;	  iLeapMonth    =    iChronology.dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	209	None	replace
2309	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.dayOfMonth+1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.dayOfMonth+1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.dayOfMonth+1;	  iLeapMonth    =    iChronology.dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	209	None	replace
2310	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonthOfYear(chronology);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonthOfYear(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonthOfYear(chronology);	  int    iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
2311	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonthOfYear(secondMonth);  [CE]  cannot  find  symbol  secondMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonthOfYear(secondMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonthOfYear(secondMonth);	  int    iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  secondMonth	220	None	replace
2312	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonthOfYear(true);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonthOfYear(true);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonthOfYear(true);	  int    iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
2313	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonthOfYear(this.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonthOfYear(this.dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonthOfYear(this.dayOfMonth);	  int    iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	220	None	replace
2314	[BUG]  [BUGGY]  MIN  =  iChronology.getMinMonth();  [CE]  cannot  assign  a  value  to  final  variable  MIN  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  MIN  =  iChronology.getMinMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	MIN  =  iChronology.getMinMonth();	  iMin    =    iChronology.getMinMonth()    +    2;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  MIN	188	None	replace
2315	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear()  /  1;  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear()  /  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear()  /  1;	  iMin    =    iChronology.getMinYear()    +    1;    	non-compiled	[CE]  cannot  find  symbol  iMin	247	None	replace
2316	[BUG]  [BUGGY]  iDayOfMonth  =  chronology.getDayOfMonth(this.dayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iDayOfMonth  =  chronology.getDayOfMonth(this.dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iDayOfMonth  =  chronology.getDayOfMonth(this.dayOfMonth);	  iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	9	None	replace
2317	[BUG]  [BUGGY]  iDayOfMonth  =  chronology.getDayOfMonth(strMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iDayOfMonth  =  chronology.getDayOfMonth(strMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iDayOfMonth  =  chronology.getDayOfMonth(strMonth);	  iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	9	None	replace
2318	[BUG]  [BUGGY]  iDayOfMonth  =  chronology.getDayOfMonth(dayOfMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iDayOfMonth  =  chronology.getDayOfMonth(dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iDayOfMonth  =  chronology.getDayOfMonth(dayOfMonth);	  iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	9	None	replace
2319	[BUG]  [BUGGY]  iDayOfMonth  =  chronology.getDayOfMonth()  +  1;  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iDayOfMonth  =  chronology.getDayOfMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iDayOfMonth  =  chronology.getDayOfMonth()  +  1;	  iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	9	None	replace
2320	[BUG]  [BUGGY]  iDayOfMonth  =  chronology.getDayOfMonth(stackMonth);  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iDayOfMonth  =  chronology.getDayOfMonth(stackMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iDayOfMonth  =  chronology.getDayOfMonth(stackMonth);	  iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	9	None	replace
2321	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1);  iMonth  =  chronology.getMonthOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1);  iMonth  =  chronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1);  iMonth  =  chronology.getMonthOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	42	None	replace
2322	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  leapMonth);  iMonth  =  chronology.getMonthOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  leapMonth);  iMonth  =  chronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  leapMonth);  iMonth  =  chronology.getMonthOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	42	None	replace
2323	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  +  1);  iMonth  =  chronology.getMonthOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  +  1);  iMonth  =  chronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  +  1);  iMonth  =  chronology.getMonthOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	42	None	replace
2324	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.withUTC(strMonth);  [CE]  cannot  find  symbol  strMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.withUTC(strMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  ||  chronology.withUTC(strMonth);	  iChronology    =    chronology.withUTC()    ||    chronology.withUTC();    	non-compiled	[CE]  cannot  find  symbol  strMonth	313	None	replace
2325	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.withUTC(spunkMonth);  [CE]  cannot  find  symbol  spunkMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.withUTC(spunkMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  ||  chronology.withUTC(spunkMonth);	  iChronology    =    chronology.withUTC()    ||    chronology.withUTC();    	non-compiled	[CE]  cannot  find  symbol  spunkMonth	313	None	replace
2326	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.withUTC(spitchMonth);  [CE]  cannot  find  symbol  spitchMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.withUTC(spitchMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  ||  chronology.withUTC(spitchMonth);	  iChronology    =    chronology.withUTC()    ||    chronology.withUTC();    	non-compiled	[CE]  cannot  find  symbol  spitchMonth	313	None	replace
2327	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.withUTC(sprayMonth);  [CE]  cannot  find  symbol  sprayMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.withUTC(sprayMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  ||  chronology.withUTC(sprayMonth);	  iChronology    =    chronology.withUTC()    ||    chronology.withUTC();    	non-compiled	[CE]  cannot  find  symbol  sprayMonth	313	None	replace
2328	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.withUTC(serialVersion);  [CE]  cannot  find  symbol  serialVersion  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.withUTC(serialVersion);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  ||  chronology.withUTC(serialVersion);	  iChronology    =    chronology.withUTC()    ||    chronology.withUTC();    	non-compiled	[CE]  cannot  find  symbol  serialVersion	313	None	replace
2329	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth);	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	176	None	replace
2330	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true);	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	176	None	replace
2331	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  30);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  30);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology,  30);	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	176	None	replace
2332	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  leapMonth  *  2;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  leapMonth  *  2;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  +  leapMonth  *  2;	  iChronology    =    chronology.dayOfMonth()    +    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	110	None	replace
2333	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  leapMonth-  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  leapMonth-  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  +  leapMonth-  1;	  iChronology    =    chronology.dayOfMonth()    +    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	110	None	replace
2334	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  leapMonth+1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  leapMonth+1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  +  leapMonth+1;	  iChronology    =    chronology.dayOfMonth()    +    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	110	None	replace
2335	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getWeeksInYearMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getWeeksInYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getWeeksInYearMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getWeeksInYearMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	236	None	replace
2336	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getWeeksOutYearMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getWeeksOutYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getWeeksOutYearMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getWeeksInYearMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	236	None	replace
2337	[BUG]  [BUGGY]  iLeapMonth  =  Math.min(iChronology.getMonthOfYear(),  leapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  Math.min(iChronology.getMonthOfYear(),  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  Math.min(iChronology.getMonthOfYear(),  leapMonth);	  iLeapMonth    =    leapMonth;    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	7	None	replace
2338	[BUG]  [BUGGY]  iLeapMonth  =  Math.min(iChronology.getYearMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  Math.min(iChronology.getYearMonth(),  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  Math.min(iChronology.getYearMonth(),  leapMonth);	  iLeapMonth    =    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
2339	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  iChronology.getHeapMonth();  [CE]  incompatible  types  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  iChronology.getHeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  iChronology.getHeapMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getHeapMonth();    	non-compiled	[CE]  incompatible  types	162	None	replace
2340	[BUG]  [BUGGY]  if(iLeapMonth!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getHeapMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	162	None	replace
2341	[BUG]  [BUGGY]  if(iLeapMonth  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getHeapMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	162	None	replace
2342	[BUG]  [BUGGY]  if(iLeapMonth!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  else  {  iLeapMonth  =  leapMonth;  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  else  {  iLeapMonth  =  leapMonth;  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  else  {  iLeapMonth  =  leapMonth;  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getHeapMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	162	None	replace
2343	[BUG]  [BUGGY]  if(iLeapMonth  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  else  {  iLeapMonth  =  leapMonth;  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  else  {  iLeapMonth  =  leapMonth;  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  else  {  iLeapMonth  =  leapMonth;  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getHeapMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	162	None	replace
2344	[BUG]  [BUGGY]  if(iLeapMonth!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  else  {  throw  new  IllegalFieldValueException( "Date  [CE]  unclosed  string  literal  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  else  {  throw  new  IllegalFieldValueException( "Date  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth!=  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  else  {  throw  new  IllegalFieldValueException( "Date	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getHeapMonth();    	non-compiled	[CE]  unclosed  string  literal	162	None	replace
2345	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth-  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth-  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  +  leapMonth-  1;	  iChronology    =    chronology.withUTC()    +    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	52	None	replace
2346	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth  *  2;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth  *  2;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  +  leapMonth  *  2;	  iChronology    =    chronology.withUTC()    +    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	52	None	replace
2347	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth  *  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth  *  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  +  leapMonth  *  1;	  iChronology    =    chronology.withUTC()    +    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	52	None	replace
2348	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth+1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth+1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  +  leapMonth+1;	  iChronology    =    chronology.withUTC()    +    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	52	None	replace
2349	[BUG]  [BUGGY]  iMin  =  chronology.getMinYOfYear();  [CE]  cannot  find  symbol  iMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinyOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	249	None	replace
2350	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinyOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinyOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinyOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinyOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	249	None	replace
2351	[BUG]  [BUGGY]  int  min  =  this.chronology.getMinYear()  +  1;  [CE]  cannot  find  symbol  chronology  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  this.chronology.getMinYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  this.chronology.getMinYear()  +  1;	  int    min    =    this.chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  chronology	189	None	replace
2352	[BUG]  [BUGGY]  int  min  =  this.chronology.getMinYear(this.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  this.chronology.getMinYear(this.dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  this.chronology.getMinYear(this.dayOfMonth);	  int    min    =    this.chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	189	None	replace
2353	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(new  BasicChronology[]  {  }  );  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(new  BasicChronology[]  {  }  );  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(new  BasicChronology[]  {  }  );	  iChronology    =    chronology.getChronology(null);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
2354	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  int).withUTC();  [CE]  '.class'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  int).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  int).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth).withUTC();    	non-compiled	[CE]  '.class'  expected	131	None	replace
2355	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  seconds).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  seconds).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  seconds).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	131	None	replace
2356	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN),  leapMonth).withUTC();  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN),  leapMonth).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN),  leapMonth).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth).withUTC();    	non-compiled	[CE]  ';'  expected	131	None	replace
2357	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.year);  [CE]  cannot  find  symbol  year  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.year);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.year);	  iChronology    =    chronology.getBasicChronology(chronology);    	non-compiled	[CE]  cannot  find  symbol  year	329	None	replace
2358	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.millisOfDay);  [CE]  cannot  find  symbol  millisOfDay  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.millisOfDay);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.millisOfDay);	  iChronology    =    chronology.getInstance(DEFAULT_TIME_ZONE);    	non-compiled	[CE]  cannot  find  symbol  millisOfDay	261	None	replace
2359	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapSecond);  [CE]  cannot  find  symbol  leapSecond  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapSecond);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapSecond);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    jumpMonth);    	non-compiled	[CE]  cannot  find  symbol  leapSecond	193	None	replace
2360	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  -  1  +  leapMonth;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  -  1  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth()  -  1  +  leapMonth;	  int    iLeapMonth    =    iChronology.getLeapMonth()    -    1;    	non-compiled	[CE]  cannot  find  symbol	218	None	replace
2361	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  -  2;  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth()  -  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth()  -  2;	  int    iLeapMonth    =    iChronology.getLeapMonth()    -    1;    	non-compiled	[CE]  cannot  find  symbol	218	None	replace
2362	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iMin  =  chronology.getMinYear()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iMin  =  chronology.getMinYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iMin  =  chronology.getMinYear()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	62	None	replace
2363	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(strMonth);  [CE]  incompatible  types  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(strMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(strMonth);	  iChronology    =    chronology.withUTC()?    null    :    chronology.withUTC();    	non-compiled	[CE]  incompatible  types	50	None	replace
2364	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(spitchMonth);  [CE]  incompatible  types  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(spitchMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(spitchMonth);	  iChronology    =    chronology.withUTC()?    null    :    chronology.withUTC();    	non-compiled	[CE]  incompatible  types	50	None	replace
2365	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(spunkMonth);  [CE]  incompatible  types  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(spunkMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(spunkMonth);	  iChronology    =    chronology.withUTC()?    null    :    chronology.withUTC();    	non-compiled	[CE]  incompatible  types	50	None	replace
2366	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(scronology);  [CE]  incompatible  types  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(scronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(scronology);	  iChronology    =    chronology.withUTC()?    null    :    chronology.withUTC();    	non-compiled	[CE]  incompatible  types	50	None	replace
2367	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.hourOfYear,  this.dayOfMonth);  [CE]  cannot  find  symbol  hourOfYear  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.hourOfYear,  this.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.hourOfYear,  this.dayOfMonth);	  iChronology    =    chronology.getBasicChronology(this.hourOfYear);    	non-compiled	[CE]  cannot  find  symbol  hourOfYear	225	None	replace
2368	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.monthOfYear);  [CE]  cannot  find  symbol  monthOfYear  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.monthOfYear);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.monthOfYear);	  iChronology    =    chronology.getBasicChronology(this.hourOfYear);    	non-compiled	[CE]  cannot  find  symbol  monthOfYear	225	None	replace
2369	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.hourOfYear,  this.minute);  [CE]  cannot  find  symbol  hourOfYear  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.hourOfYear,  this.minute);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.hourOfYear,  this.minute);	  iChronology    =    chronology.getBasicChronology(this.hourOfYear);    	non-compiled	[CE]  cannot  find  symbol  hourOfYear	225	None	replace
2370	[BUG]  [BUGGY]  iMin  =  iChronology.getMinMonth()  +  leapMonth  *  1;  [CE]  cannot  find  symbol  iMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinMonth()  +  leapMonth  *  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinMonth()  +  leapMonth  *  1;	  iMin    =    iChronology.getMinMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iMin	149	None	replace
2371	[BUG]  [BUGGY]  iMin  =  iChronology.getMinMonth()  +  leapMonth-  1;  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinMonth()  +  leapMonth-  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinMonth()  +  leapMonth-  1;	  iMin    =    iChronology.getMinMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iMin	149	None	replace
2372	[BUG]  [BUGGY]  iMin  =  iChronology.getMinMonth()  +  leapMonth  *  2;  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinMonth()  +  leapMonth  *  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinMonth()  +  leapMonth  *  2;	  iMin    =    iChronology.getMinMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iMin	149	None	replace
2373	[BUG]  [BUGGY]  iMin  =  iChronology.getMinMonth()  +  leapMonth+  1;  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinMonth()  +  leapMonth+  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinMonth()  +  leapMonth+  1;	  iMin    =    iChronology.getMinMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iMin	149	None	replace
2374	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(true,  null);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(true,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(true,  null);	  iChronology    =    chronology.getInstance(true);    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
2375	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(true,  false);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(true,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(true,  false);	  iChronology    =    chronology.getInstance(true);    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
2376	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(true,  jumpMonth);  [CE]  cannot  find  symbol  jumpMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(true,  jumpMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(true,  jumpMonth);	  iChronology    =    chronology.getInstance(true);    	non-compiled	[CE]  cannot  find  symbol  jumpMonth	157	None	replace
2377	[BUG]  [BUGGY]  iMin  =  this.chronology.getMinYear(dayOfMonth);  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  this.chronology.getMinYear(dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  this.chronology.getMinYear(dayOfMonth);	  iMin    =    chronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	138	None	replace
2378	[BUG]  [BUGGY]  iMin  =  info.getMinYear(dayOfMonth);  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  info.getMinYear(dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  info.getMinYear(dayOfMonth);	  iMin    =    chronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	138	None	replace
2379	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMONTth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMONTth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMONTth(),  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    hourMonth);    	non-compiled	[CE]  cannot  find  symbol	305	None	replace
2380	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.hourOfYear(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.hourOfYear(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.hourOfYear(),  leapMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    hourMonth);    	non-compiled	[CE]  cannot  find  symbol	305	None	replace
2381	[BUG]  [BUGGY]  int  iLeapMonth  =  iFieldType.getLeapMonth()  +  leapMonth;  [CE]  cannot  find  symbol  iFieldType  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iFieldType.getLeapMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iFieldType.getLeapMonth()  +  leapMonth;	  int    iLeapMonth    =    iFieldType.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  iFieldType	181	None	replace
2382	[BUG]  [BUGGY]  int  iLeapMonth  =  iDateTimeFieldType.getLeapMonth();  [CE]  cannot  find  symbol  iDateTimeFieldType  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iDateTimeFieldType.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iDateTimeFieldType.getLeapMonth();	  int    iLeapMonth    =    iFieldType.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  iDateTimeFieldType	181	None	replace
2383	[BUG]  [BUGGY]  int  iLeapMonth  =  iZone.getLeapMonth();  [CE]  cannot  find  symbol  iZone  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  iZone.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  iZone.getLeapMonth();	  int    iLeapMonth    =    iFieldType.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  iZone	181	None	replace
2384	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfYear  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfYear);  [CE]  cannot  find  symbol  dayOfYear  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfYear  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfYear);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfYear  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfYear);	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    new    BasicChronology(chronology.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfYear	322	None	replace
2385	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.monthOfYear);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.monthOfYear);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.monthOfYear);	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    new    BasicChronology(chronology.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	322	None	replace
2386	[BUG]  [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth()  -  2;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth()  -  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iField  =  DateTimeFieldType.dayOfMonth()  -  2;	  int    iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	91	None	replace
2387	[BUG]  [BUGGY]  int  min  =  chronology.getMinYear()  -  2;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  chronology.getMinYear()  -  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMinYear()  -  2;	  int    min    =    chronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	117	None	replace
2388	[BUG]  [BUGGY]  iMin  =  iFieldType.getMinDayOfMonth();  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iFieldType.getMinDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iFieldType.getMinDayOfMonth();	  iMin    =    chronology.getMinDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	139	None	replace
2389	[BUG]  [BUGGY]  iMin  =  info.getMinDayOfMonth();  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  info.getMinDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  info.getMinDayOfMonth();	  iMin    =    chronology.getMinDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	139	None	replace
2390	[BUG]  [BUGGY]  iMin  =  data.getMinDayOfMonth();  [CE]  cannot  find  symbol  iMin  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  data.getMinDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  data.getMinDayOfMonth();	  iMin    =    chronology.getMinDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	139	None	replace
2391	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  -  1;  [CE]  ')'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  -  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  -  1;	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth;    	non-compiled	[CE]  ')'  expected	240	None	replace
2392	[BUG]  [BUGGY]  iMin  =  0,  chronology.getMinYear();  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  0,  chronology.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  0,  chronology.getMinYear();	  iMin    =    0,    iChronology.getMinYear();    	non-compiled	[CE]  ';'  expected	248	None	replace
2393	[BUG]  [BUGGY]  iMin  =  0,  iChronology.getMinYear()  +  2;  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  0,  iChronology.getMinYear()  +  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  0,  iChronology.getMinYear()  +  2;	  iMin    =    0,    iChronology.getMinYear();    	non-compiled	[CE]  ';'  expected	248	None	replace
2394	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()?  DateTimeFieldType.dayOfMonth()  :  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  iField  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()?  DateTimeFieldType.dayOfMonth()  :  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()?  DateTimeFieldType.dayOfMonth()  :  DateTimeFieldType.dayOfMonth();	  iField    =    DateTimeFieldType.dayOfMonth()    |    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iField	307	None	replace
2395	[BUG]  [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.dayOfMonth();  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.dayOfMonth();	  iField    =    DateTimeFieldType.dayOfMonth()    |    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	307	None	replace
2396	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  *  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  iField  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  *  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()  *  DateTimeFieldType.dayOfMonth();	  iField    =    DateTimeFieldType.dayOfMonth()    |    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iField	307	None	replace
2397	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  this.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  this.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  this.dayOfMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	79	None	replace
2398	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getStandardMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getStandardMillisPerMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getStandardMillisPerMonth());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
2399	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  BooleanUtils.safeNegate(chronology.dayOfMonth));  [CE]  cannot  find  symbol  DateTimeZone  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  BooleanUtils.safeNegate(chronology.dayOfMonth));  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  BooleanUtils.safeNegate(chronology.dayOfMonth));	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    false);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	170	None	replace
2400	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  BooleanUtils.safeNegate(chronology.dayOfMonth),  false);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  BooleanUtils.safeNegate(chronology.dayOfMonth),  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  BooleanUtils.safeNegate(chronology.dayOfMonth),  false);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    false);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	170	None	replace
2401	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false).withUTC();  [CE]  cannot  find  symbol  DateTimeZone  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false).withUTC();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  false).withUTC();	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    false);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	170	None	replace
2402	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  BooleanUtils.toBooleanObject(chronology));  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  BooleanUtils.toBooleanObject(chronology));  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  BooleanUtils.toBooleanObject(chronology));	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    false);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	170	None	replace
2403	[BUG]  [BUGGY]  iChronology  =  chronology.withZoneUTC(),  leapMonth;  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withZoneUTC(),  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withZoneUTC(),  leapMonth;	  iChronology    =    chronology.withUTC(),    leapMonth;    	non-compiled	[CE]  ';'  expected	51	None	replace
2404	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  -  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  -  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  -  leapMonth;	  iChronology    =    chronology.withUTC(),    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	51	None	replace
2405	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(),  leapMonth  *  MIN;  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(),  leapMonth  *  MIN;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(),  leapMonth  *  MIN;	  iChronology    =    chronology.withUTC(),    leapMonth;    	non-compiled	[CE]  ';'  expected	51	None	replace
2406	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.hourOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.hourOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.hourOfMonth(),  leapMonth);	  iChronology    =    chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	281	None	replace
2407	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.weekOfYear(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.weekOfYear(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.weekOfYear(),  leapMonth);	  iChronology    =    chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	281	None	replace
2408	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.monthOfYear(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.monthOfYear(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.monthOfYear(),  leapMonth);	  iChronology    =    chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	281	None	replace
2409	[BUG]  [BUGGY]  int  min  =  chronology.getMinX()  +  1;  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  chronology.getMinX()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMinX()  +  1;	  int    min    =    chronology.getMinX();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
2410	[BUG]  [BUGGY]  int  min  =  chronology.getMinX(),  leapMonth;  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  chronology.getMinX(),  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMinX(),  leapMonth;	  int    min    =    chronology.getMinX();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
2411	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.withUTC(secondMonth);  [CE]  cannot  find  symbol  secondMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.withUTC(secondMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  ||  chronology.withUTC(secondMonth);	  iChronology    =    chronology.withUTC()    ||    chronology.withUTC();    	non-compiled	[CE]  cannot  find  symbol  secondMonth	313	None	replace
2412	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()?  chronology.withUTC()  :  null;  [CE]  incompatible  types  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()?  chronology.withUTC()  :  null;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()?  chronology.withUTC()  :  null;	  iChronology    =    chronology.withUTC()    ||    chronology.withUTC();    	non-compiled	[CE]  incompatible  types	313	None	replace
2413	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.withUTC(hibernate);  [CE]  cannot  find  symbol  hibernate  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.withUTC(hibernate);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  ||  chronology.withUTC(hibernate);	  iChronology    =    chronology.withUTC()    ||    chronology.withUTC();    	non-compiled	[CE]  cannot  find  symbol  hibernate	313	None	replace
2414	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.withoutUTC();  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  ||  chronology.withoutUTC();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  ||  chronology.withoutUTC();	  iChronology    =    chronology.withUTC()    ||    chronology.withUTC();    	non-compiled	[CE]  cannot  find  symbol	313	None	replace
2415	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1,  1);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1,  1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1,  1);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth    -    1);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	175	None	replace
2416	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getDaysInYearMonth()  -  leapMonth;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getDaysInYearMonth()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getDaysInYearMonth()  -  leapMonth;	  int    leapMonth    =    iChronology.getDayOfMonth()    -    leapMonth;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	84	None	replace
2417	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.weekMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.weekMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  this.weekMonth);	  iChronology    =    chronology.getInstance(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	154	None	replace
2418	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.year);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.year);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  this.year);	  iChronology    =    chronology.getInstance(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	154	None	replace
2419	[BUG]  [BUGGY]  MIN  =  chronology.getMinMonth();  [CE]  cannot  assign  a  value  to  final  variable  MIN  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  MIN  =  chronology.getMinMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	MIN  =  chronology.getMinMonth();	  iMin    =    this.iChronology.getMinMonth();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  MIN	186	None	replace
2420	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  null),  chronology);  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  null),  chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  null),  chronology);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    null);    	non-compiled	[CE]  ';'  expected	97	None	replace
2421	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  null  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  null  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  null  +  1);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    null);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	97	None	replace
2422	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-1);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth-1);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth-1);    	non-compiled	[CE]  cannot  find  symbol	241	None	replace
2423	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth-1);  [CE]  cannot  find  symbol  jumpMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth-1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth-1);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth-1);    	non-compiled	[CE]  cannot  find  symbol  jumpMonth	241	None	replace
2424	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(chronology.dayOfMonth.getDefault());  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(chronology.dayOfMonth.getDefault());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(chronology.dayOfMonth.getDefault());	  iChronology    =    chronology.withUTC(iDateTimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	314	None	replace
2425	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(chronology.getZone());  [CE]  no  suitable  method  found  for  withUTC(DateTimeZone)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(chronology.getZone());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(chronology.getZone());	  iChronology    =    chronology.withUTC(iDateTimeZone.getDefault());    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(DateTimeZone)	314	None	replace
2426	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(chronology.getDayOfMonth());  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(chronology.getDayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(chronology.getDayOfMonth());	  iChronology    =    chronology.withUTC(iDateTimeZone.getDefault());    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	314	None	replace
2427	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(chronology.getTarget());  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(chronology.getTarget());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(chronology.getTarget());	  iChronology    =    chronology.withUTC(iDateTimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol	314	None	replace
2428	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(chronology.dayOfMonth());  [CE]  no  suitable  method  found  for  withUTC(DateTimeField)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(chronology.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(chronology.dayOfMonth());	  iChronology    =    chronology.withUTC(iDateTimeZone.getDefault());    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(DateTimeField)	314	None	replace
2429	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	230	None	replace
2430	[BUG]  [BUGGY]  if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	230	None	replace
2431	[BUG]  [BUGGY]  if(chronology!=  null)  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(chronology!=  null)  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(chronology!=  null)  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	230	None	replace
2432	[BUG]  [BUGGY]  if(chronology!=  null)  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth()  [CE]  ';'  expected  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(chronology!=  null)  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(chronology!=  null)  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth()	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  ';'  expected	230	None	replace
2433	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDay  [CE]  illegal  start  of  expression  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDay  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDay	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	230	None	replace
2434	[BUG]  [BUGGY]  if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDay  [CE]  illegal  start  of  expression  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDay  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDay	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	230	None	replace
2435	[BUG]  [BUGGY]  iDayOfMonth  =  chronology.getMonthOfYear();  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iDayOfMonth  =  chronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iDayOfMonth  =  chronology.getMonthOfYear();	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	12	None	replace
2436	[BUG]  [BUGGY]  iSecondMonth  =  chronology.getSecondMonth();  [CE]  cannot  find  symbol  iSecondMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iSecondMonth  =  chronology.getSecondMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iSecondMonth  =  chronology.getSecondMonth();	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iSecondMonth	12	None	replace
2437	[BUG]  [BUGGY]  iDate  =  chronology.getDate();  [CE]  cannot  find  symbol  iDate  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iDate  =  chronology.getDate();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iDate  =  chronology.getDate();	  if(iDayOfMonth    ==    chronology.getDayOfMonth())    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDate	273	None	replace
2438	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(false,  dataArea);  [CE]  cannot  find  symbol  dataArea  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(false,  dataArea);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(false,  dataArea);	  iChronology    =    chronology.getChronology(false);    	non-compiled	[CE]  cannot  find  symbol  dataArea	31	None	replace
2439	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology!=  null?  chronology.getMinMonth()  :  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology!=  null?  chronology.getMinMonth()  :  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology!=  null?  chronology.getMinMonth()  :  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	68	None	replace
2440	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iMin  =  chronology.getMinMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iMin  =  chronology.getMinMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iMin  =  chronology.getMinMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	68	None	replace
2441	[BUG]  [BUGGY]  MIN  =  chronology.getMinMonth()  +  1;  [CE]  cannot  assign  a  value  to  final  variable  MIN  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  MIN  =  chronology.getMinMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	MIN  =  chronology.getMinMonth()  +  1;	  iMin    =    iChronology.getMinMonth()    +    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  MIN	185	None	replace
2442	[BUG]  [BUGGY]  iMin  =  chronology.getMinMonth()  *  1;  [CE]  cannot  find  symbol  iMin  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinMonth()  *  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinMonth()  *  1;	  iMin    =    iChronology.getMinMonth()    +    1;    	non-compiled	[CE]  cannot  find  symbol  iMin	185	None	replace
2443	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth,  chronology.getBasicChronology());  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth,  chronology.getBasicChronology());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth,  chronology.getBasicChronology());	  iChronology    =    new    BasicChronology(chronology.getBasicChronology());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	22	None	replace
2444	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  chronology.getBasicMonth());  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  chronology.getBasicMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.getBasicChronology(),  chronology.getBasicMonth());	  iChronology    =    new    BasicChronology(chronology.getBasicChronology());    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
2445	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iSecondOfMinute  =  chronology.getSecondOfMinute();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iSecondOfMinute  =  chronology.getSecondOfMinute();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iSecondOfMinute  =  chronology.getSecondOfMinute();  }	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	10	None	replace
2446	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iJoinMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iJoinMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iJoinMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	10	None	replace
2447	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iStartMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iStartMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iStartMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	10	None	replace
2448	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  Class  <?>  iDayOfMonth  =  chronology.getDayOfMonth();  iDayOfMonth  =  iDayOfMonth;  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  Class  <?>  iDayOfMonth  =  chronology.getDayOfMonth();  iDayOfMonth  =  iDayOfMonth;  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  Class  <?>  iDayOfMonth  =  chronology.getDayOfMonth();  iDayOfMonth  =  iDayOfMonth;  }	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	10	None	replace
2449	[BUG]  [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iYearOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iYearOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iYearOfMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	10	None	replace
2450	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  hourMonth);  [CE]  cannot  find  symbol  DateTimeFormat  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  hourMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  hourMonth);	  iChronology    =    chronology.getInstance(DateTimeFormat.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  DateTimeFormat	301	None	replace
2451	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  1);  [CE]  cannot  find  symbol  DateTimeFormat  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFormat.dayOfMonth(),  1);	  iChronology    =    chronology.getInstance(DateTimeFormat.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  DateTimeFormat	301	None	replace
2452	[BUG]  [BUGGY]  iChronology  =  chronology.findChronology(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.findChronology(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.findChronology(DateTimeFieldType.dayOfMonth());	  iChronology    =    iChronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
2453	[BUG]  [BUGGY]  iChronology  =  chronology.year().getInstance(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.year().getInstance(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.year().getInstance(DateTimeFieldType.dayOfMonth());	  iChronology    =    iChronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
2454	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear()  /  1;  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear()  /  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear()  /  1;	  iMin    =    chronology.getMinYear()    +    1;    	non-compiled	[CE]  cannot  find  symbol  iMin	304	None	replace
2455	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(null,  this);  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(null,  this);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(null,  this);	  iChronology    =    chronology.getBasicChronology(null);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
2456	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  chronology.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  chronology.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  chronology.dayOfMonth);	  iChronology    =    new    BasicChronology(chronology.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	198	None	replace
2457	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  chronology.getMonthOfYear());  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  chronology.getMonthOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  chronology.getMonthOfYear());	  iChronology    =    new    BasicChronology(chronology.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	198	None	replace
2458	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  chronology.dayOfMonth,  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  chronology.dayOfMonth,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  chronology.dayOfMonth,  leapMonth);	  iChronology    =    new    BasicChronology(chronology.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	198	None	replace
2459	[BUG]  [BUGGY]  MIN  =  chronology.getMinYearMonth();  [CE]  cannot  assign  a  value  to  final  variable  MIN  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  MIN  =  chronology.getMinYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	MIN  =  chronology.getMinYearMonth();	  iMin    =    iChronology.getMinYearMonth();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  MIN	152	None	replace
2460	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth  +  1);  [CE]  cannot  find  symbol  jumpMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth  +  1);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth    +    2);    	non-compiled	[CE]  cannot  find  symbol  jumpMonth	242	None	replace
2461	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  1,  leapMonth);  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  1,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  -  1,  leapMonth);	  iChronology    =    chronology.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  ';'  expected	114	None	replace
2462	[BUG]  [BUGGY]  iChronology  =  chronology.getMonthOfYear(this,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getMonthOfYear(this,  dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getMonthOfYear(this,  dayOfMonth);	  iChronology    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	39	None	replace
2463	[BUG]  [BUGGY]  iChronology  =  chronology.getMonthOfYear(this.dayOfMonth,  this.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getMonthOfYear(this.dayOfMonth,  this.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getMonthOfYear(this.dayOfMonth,  this.dayOfMonth);	  iChronology    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	39	None	replace
2464	[BUG]  [BUGGY]  iChronology  =  chronology.getMonthOfYear(this,  leapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear(BasicMonthOfYearDateTimeField,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getMonthOfYear(this,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getMonthOfYear(this,  leapMonth);	  iChronology    =    chronology.getMonthOfYear();    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(BasicMonthOfYearDateTimeField,int)	39	None	replace
2465	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  this);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  this);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  this);	  iChronology    =    chronology.getChronology(DateTimeZone.UTC,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	288	None	replace
2466	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  2);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  2);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeZone.UTC,  leapMonth,  2);	  iChronology    =    chronology.getChronology(DateTimeZone.UTC,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	288	None	replace
2467	[BUG]  [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  chronology  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());	  iChronology    =    this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  chronology	73	None	replace
2468	[BUG]  [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  chronology.getMinuteMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  chronology.getMinuteMillisPerMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  chronology.getMinuteMillisPerMonth());	  iChronology    =    this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
2469	[BUG]  [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  chronology.getMinYear());  [CE]  cannot  find  symbol  chronology  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  chronology.getMinYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  chronology.getMinYear());	  iChronology    =    this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  chronology	73	None	replace
2470	[BUG]  [BUGGY]  int  iMin  =  chronology.getMinYear(stackMonth);  [CE]  cannot  find  symbol  stackMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  chronology.getMinYear(stackMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  chronology.getMinYear(stackMonth);	  iMin    =    chronology.getMinYear(stackMonth);    	non-compiled	[CE]  cannot  find  symbol  stackMonth	58	None	replace
2471	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear(stackMonth)-  1;  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear(stackMonth)-  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear(stackMonth)-  1;	  iMin    =    chronology.getMinYear(stackMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	58	None	replace
2472	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(null,  MIN);  [CE]  no  suitable  method  found  for  withUTC(<null>,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(null,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(null,  MIN);	  iChronology    =    chronology.withUTC(null);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(<null>,int)	205	None	replace
2473	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(null,  null);  [CE]  no  suitable  method  found  for  withUTC(<null>,<null>)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(null,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(null,  null);	  iChronology    =    chronology.withUTC(null);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(<null>,<null>)	205	None	replace
2474	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(null,  false);  [CE]  no  suitable  method  found  for  withUTC(<null>,boolean)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(null,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(null,  false);	  iChronology    =    chronology.withUTC(null);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(<null>,boolean)	205	None	replace
2475	[BUG]  [BUGGY]  iChronology  =  (iChronology  ==  null)?  DateTimeFieldType.dayOfMonth()  :  new  BasicChronology(chronology);  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  (iChronology  ==  null)?  DateTimeFieldType.dayOfMonth()  :  new  BasicChronology(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  (iChronology  ==  null)?  DateTimeFieldType.dayOfMonth()  :  new  BasicChronology(chronology);	  iChronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	211	None	replace
2476	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth());  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth());  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth());	  iChronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	211	None	replace
2477	[BUG]  [BUGGY]  iChronology  =(DateTimeFieldType)chronology.dayOfMonth();  [CE]  inconvertible  types  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =(DateTimeFieldType)chronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =(DateTimeFieldType)chronology.dayOfMonth();	  iChronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  inconvertible  types	211	None	replace
2478	[BUG]  [BUGGY]  iMin  =  iChronology.getMinMonth()  +  leapMonth  *  Math.min(iMax,  leapMonth);  [CE]  cannot  find  symbol  iMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinMonth()  +  leapMonth  *  Math.min(iMax,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinMonth()  +  leapMonth  *  Math.min(iMax,  leapMonth);	  iMin    =    iChronology.getMinMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iMin	149	None	replace
2479	[BUG]  [BUGGY]  iMin  =  iChronology.getMinMonth()  +  leapMonth,  chronology.getHeaderMillisPerMonth();  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinMonth()  +  leapMonth,  chronology.getHeaderMillisPerMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinMonth()  +  leapMonth,  chronology.getHeaderMillisPerMonth();	  iMin    =    iChronology.getMinMonth()    +    leapMonth;    	non-compiled	[CE]  ';'  expected	149	None	replace
2480	[BUG]  [BUGGY]  iMin  =  iChronology.getMinMonth()  +  leapMonth,  chronology.getLeapMonth();  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinMonth()  +  leapMonth,  chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinMonth()  +  leapMonth,  chronology.getLeapMonth();	  iMin    =    iChronology.getMinMonth()    +    leapMonth;    	non-compiled	[CE]  ';'  expected	149	None	replace
2481	[BUG]  [BUGGY]  iMin  =  iChronology.getMinMonth()  +  leapMonth,  chronology.getDayOfMonth();  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinMonth()  +  leapMonth,  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinMonth()  +  leapMonth,  chronology.getDayOfMonth();	  iMin    =    iChronology.getMinMonth()    +    leapMonth;    	non-compiled	[CE]  ';'  expected	149	None	replace
2482	[BUG]  [BUGGY]  iMin  =  iChronology.getMinMonth()  +  leapMonth,  chronology.getLeapMonth());  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinMonth()  +  leapMonth,  chronology.getLeapMonth());  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinMonth()  +  leapMonth,  chronology.getLeapMonth());	  iMin    =    iChronology.getMinMonth()    +    leapMonth;    	non-compiled	[CE]  ';'  expected	149	None	replace
2483	[BUG]  [BUGGY]  DayOfMonth  iField  =  DateTimeFieldType.DayOfMonth();  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  DayOfMonth  iField  =  DateTimeFieldType.DayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	DayOfMonth  iField  =  DateTimeFieldType.DayOfMonth();	  DayOfMonth    iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
2484	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth);  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()  +  leapMonth);	  iField    =    DateTimeFieldType.dayOfMonth()    +    leapMonth;    	non-compiled	[CE]  ';'  expected	88	None	replace
2485	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null,  dayOfMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null,  dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null,  dayOfMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    null);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	178	None	replace
2486	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null,  0);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null,  0);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null,  0);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    null);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	178	None	replace
2487	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null,  1);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null,  1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null,  1);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    null);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	178	None	replace
2488	[BUG]  [BUGGY]  iLeapMonth  =  chronology.getLeapMonth(strMonth);  [CE]  cannot  find  symbol  strMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  chronology.getLeapMonth(strMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  chronology.getLeapMonth(strMonth);	  iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  strMonth	8	None	replace
2489	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayOfMonth  +  1);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayOfMonth  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayOfMonth  +  1);	  iChronology    =    chronology.getChronology(this.dayOfMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	287	None	replace
2490	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayOfMonth)+  1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayOfMonth)+  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  this.dayOfMonth)+  1;	  iChronology    =    chronology.getChronology(this.dayOfMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	287	None	replace
2491	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  this.min);  [CE]  cannot  find  symbol  min  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  this.min);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.iChronology,  this.min);	  iChronology    =    chronology.withUTC(this.iChronology);    	non-compiled	[CE]  cannot  find  symbol  min	206	None	replace
2492	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  this.minute);  [CE]  cannot  find  symbol  minute  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.iChronology,  this.minute);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.iChronology,  this.minute);	  iChronology    =    chronology.withUTC(this.iChronology);    	non-compiled	[CE]  cannot  find  symbol  minute	206	None	replace
2493	[BUG]  [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  chronology);  [CE]  cannot  find  symbol  chronology  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  chronology);	  iChronology    =    this.chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  chronology	256	None	replace
2494	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	64	None	replace
2495	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();  }  else  {  iMin  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();  }  else  {  iMin  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();  }  else  {  iMin  =  chronology.getDayOfMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	64	None	replace
2496	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();  }  else  {  iMin  =  chronology.getMinYear();  iMax  =  chronology.getAverageMillisPerMonth()  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();  }  else  {  iMin  =  chronology.getMinYear();  iMax  =  chronology.getAverageMillisPerMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();  }  else  {  iMin  =  chronology.getMinYear();  iMax  =  chronology.getAverageMillisPerMonth()	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getDayOfMonth();    	non-compiled	[CE]  ';'  expected	64	None	replace
2497	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();  }  else  {  iMin  =  chronology.getMinMonth();  iMax  =  chronology.getAverageMillisPerMonth()  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();  }  else  {  iMin  =  chronology.getMinMonth();  iMax  =  chronology.getAverageMillisPerMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();  }  else  {  iMin  =  chronology.getMinMonth();  iMax  =  chronology.getAverageMillisPerMonth()	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getDayOfMonth();    	non-compiled	[CE]  ';'  expected	64	None	replace
2498	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();  }  else  {  iMax  =  chronology.getMinMonth();  iLeapMonth  =  leapMonth;  }  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();  }  else  {  iMax  =  chronology.getMinMonth();  iLeapMonth  =  leapMonth;  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();  }  else  {  iMax  =  chronology.getMinMonth();  iLeapMonth  =  leapMonth;  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	64	None	replace
2499	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();  }  else  {  iMax  =  chronology.getMinMonth();  iLeapMonth  =  [CE]  illegal  start  of  expression  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();  }  else  {  iMax  =  chronology.getMinMonth();  iLeapMonth  =  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();  }  else  {  iMax  =  chronology.getMinMonth();  iLeapMonth  =	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
2500	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth,  this.dayOfMonth);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth,  this.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth,  this.dayOfMonth);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	167	None	replace
2501	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth,  this.year);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth,  this.year);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth,  this.year);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	167	None	replace
2502	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth,  this.monthOfYear);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth,  this.monthOfYear);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth,  this.monthOfYear);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	167	None	replace
2503	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth)-  1;  [CE]  cannot  find  symbol  DateTimeZone  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth)-  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  this.dayOfMonth)-  1;	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	167	None	replace
2504	[BUG]  [BUGGY]  int  iLeapMonth  =  interval.getLeapMonth();  [CE]  cannot  find  symbol  interval  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  interval.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  interval.getLeapMonth();	  int    iLeapMonth    =    ichronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  interval	179	None	replace
2505	[BUG]  [BUGGY]  Integer  iLeapMonth  =  chronology.getLeapMonth()  -  leapMonth;  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iLeapMonth  =  chronology.getLeapMonth()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iLeapMonth  =  chronology.getLeapMonth()  -  leapMonth;	  int    iLeapMonth    =    iChronology.getLeapMonth()    -    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
2506	[BUG]  [BUGGY]  Int  iLeapMonth  =  chronology.getLeapMonth()  -  leapMonth;  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Int  iLeapMonth  =  chronology.getLeapMonth()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Int  iLeapMonth  =  chronology.getLeapMonth()  -  leapMonth;	  int    iLeapMonth    =    iChronology.getLeapMonth()    -    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
2507	[BUG]  [BUGGY]  int  iLeapMonth  =  data.getLeapMonth()  -  leapMonth;  [CE]  cannot  find  symbol  data  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  data.getLeapMonth()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  data.getLeapMonth()  -  leapMonth;	  int    iLeapMonth    =    iChronology.getLeapMonth()    -    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  data	105	None	replace
2508	[BUG]  [BUGGY]  t  iLeapMonth  =  chronology.getLeapMonth()  -  leapMonth;  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  t  iLeapMonth  =  chronology.getLeapMonth()  -  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	t  iLeapMonth  =  chronology.getLeapMonth()  -  leapMonth;	  int    iLeapMonth    =    iChronology.getLeapMonth()    -    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
2509	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN_YEAR);  [CE]  cannot  find  symbol  MIN_YEAR  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN_YEAR);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN_YEAR);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol  MIN_YEAR	76	None	replace
2510	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()?  DateTimeFieldType.DAY_OF_MONTH  :  DateTimeFieldType.DAY_OF_MONTH;  [CE]  cannot  find  symbol  iField  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()?  DateTimeFieldType.DAY_OF_MONTH  :  DateTimeFieldType.DAY_OF_MONTH;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()?  DateTimeFieldType.DAY_OF_MONTH  :  DateTimeFieldType.DAY_OF_MONTH;	  iField    =    DateTimeFieldType.dayOfMonth()    |    DateTimeFieldType.DAY_OF_MONTH;    	non-compiled	[CE]  cannot  find  symbol  iField	308	None	replace
2511	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.DAY_OF_MONTH()  |  DateTimeFieldType.dayOfMonth;  [CE]  cannot  find  symbol  iField  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.DAY_OF_MONTH()  |  DateTimeFieldType.dayOfMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.DAY_OF_MONTH()  |  DateTimeFieldType.dayOfMonth;	  iField    =    DateTimeFieldType.dayOfMonth()    |    DateTimeFieldType.DAY_OF_MONTH;    	non-compiled	[CE]  cannot  find  symbol  iField	308	None	replace
2512	[BUG]  [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()?  DateTimeFieldType.DAY_OF_MONTH  :  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  iField  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iField  =  DateTimeFieldType.dayOfMonth()?  DateTimeFieldType.DAY_OF_MONTH  :  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iField  =  DateTimeFieldType.dayOfMonth()?  DateTimeFieldType.DAY_OF_MONTH  :  DateTimeFieldType.dayOfMonth();	  iField    =    DateTimeFieldType.dayOfMonth()    |    DateTimeFieldType.DAY_OF_MONTH;    	non-compiled	[CE]  cannot  find  symbol  iField	308	None	replace
2513	[BUG]  [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.DAY_OF_MONTH;  [CE]  DAY_OF_MONTH  is  not  public  in  DateTimeFieldType;  cannot  be  accessed  from  outside  package  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.DAY_OF_MONTH;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iField  =  DateTimeFieldType.dayOfMonth()  |  DateTimeFieldType.DAY_OF_MONTH;	  iField    =    DateTimeFieldType.dayOfMonth()    |    DateTimeFieldType.DAY_OF_MONTH;    	non-compiled	[CE]  DAY_OF_MONTH  is  not  public  in  DateTimeFieldType;  cannot  be  accessed  from  outside  package	308	None	replace
2514	[BUG]  [BUGGY]  iChronology  =(this.chronology!=  null?  this.chronology.getBasicChronology()  :  chronology.getBasicChronology());  [CE]  cannot  find  symbol  chronology  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =(this.chronology!=  null?  this.chronology.getBasicChronology()  :  chronology.getBasicChronology());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =(this.chronology!=  null?  this.chronology.getBasicChronology()  :  chronology.getBasicChronology());	  iChronology    =    this.chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol  chronology	24	None	replace
2515	[BUG]  [BUGGY]  iChronology  =(this.chronology!=  null?  this.chronology.getBasicChronology()  :  chronology.getBasicChronology();  [CE]  ')'  expected  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =(this.chronology!=  null?  this.chronology.getBasicChronology()  :  chronology.getBasicChronology();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =(this.chronology!=  null?  this.chronology.getBasicChronology()  :  chronology.getBasicChronology();	  iChronology    =    this.chronology.getBasicChronology();    	non-compiled	[CE]  ')'  expected	24	None	replace
2516	[BUG]  [BUGGY]  iChronology  =(this.chronology!=  null?  this.chronology.getBasicChronology()  :  chronology;  [CE]  ')'  expected  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =(this.chronology!=  null?  this.chronology.getBasicChronology()  :  chronology;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =(this.chronology!=  null?  this.chronology.getBasicChronology()  :  chronology;	  iChronology    =    this.chronology.getBasicChronology();    	non-compiled	[CE]  ')'  expected	24	None	replace
2517	[BUG]  [BUGGY]  iChronology  =  chronology,  this.chronology.getBasicChronology();  [CE]  ';'  expected  [FE]                                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology,  this.chronology.getBasicChronology();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology,  this.chronology.getBasicChronology();	  iChronology    =    this.chronology.getBasicChronology();    	non-compiled	[CE]  ';'  expected	24	None	replace
2518	[BUG]  [BUGGY]  iChronology  =(this.chronology!=  null?  this.chronology.getBasicChronology()  :  chronology);  [CE]  cannot  find  symbol  chronology  [FE]                                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =(this.chronology!=  null?  this.chronology.getBasicChronology()  :  chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =(this.chronology!=  null?  this.chronology.getBasicChronology()  :  chronology);	  iChronology    =    this.chronology.getBasicChronology();    	non-compiled	[CE]  cannot  find  symbol  chronology	24	None	replace
2519	[BUG]  [BUGGY]  iChronology  =  chronology.withDayOfMonth(iFieldType);  [CE]  cannot  find  symbol  iFieldType  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withDayOfMonth(iFieldType);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withDayOfMonth(iFieldType);	  iChronology    =    chronology.withDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iFieldType	48	None	replace
2520	[BUG]  [BUGGY]  iChronology  =  chronology.withDayOfMonth(iMax);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withDayOfMonth(iMax);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withDayOfMonth(iMax);	  iChronology    =    chronology.withDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
2521	[BUG]  [BUGGY]  iChronology  =  chronology.withDayOfMonth(iHeader);  [CE]  cannot  find  symbol  iHeader  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withDayOfMonth(iHeader);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withDayOfMonth(iHeader);	  iChronology    =    chronology.withDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iHeader	48	None	replace
2522	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMonthOfYear();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth()  [CE]  ';'  expected  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMonthOfYear();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMonthOfYear();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth()	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth()    	non-compiled	[CE]  ';'  expected	11	None	replace
2523	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMonthOfYear();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMonthOfYear();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMonthOfYear();  }	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth()    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	11	None	replace
2524	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth()  [CE]  ';'  expected  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth()	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth()    	non-compiled	[CE]  ';'  expected	11	None	replace
2525	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMonthOfYear();  }  else  {  [CE]  illegal  start  of  expression  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMonthOfYear();  }  else  {  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMonthOfYear();  }  else  {	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth()    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2526	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMonthOfYear();  }  else  {  iDayOfMonth  =  chronology.get  [CE]  ';'  expected  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMonthOfYear();  }  else  {  iDayOfMonth  =  chronology.get  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMonthOfYear();  }  else  {  iDayOfMonth  =  chronology.get	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth()    	non-compiled	[CE]  ';'  expected	11	None	replace
2527	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMonthOfYear();  }  else  {  iDayOfMonth  =  chronology.getDayOfMon  [CE]  ';'  expected  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMonthOfYear();  }  else  {  iDayOfMonth  =  chronology.getDayOfMon  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMonthOfYear();  }  else  {  iDayOfMonth  =  chronology.getDayOfMon	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth()    	non-compiled	[CE]  ';'  expected	11	None	replace
2528	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMonthOfYear();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth  [CE]  ';'  expected  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMonthOfYear();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMonthOfYear();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMonth()    	non-compiled	[CE]  ';'  expected	11	None	replace
2529	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this,  MIN);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this,  MIN);	  iChronology    =    chronology.getChronology(this);    	non-compiled	[CE]  cannot  find  symbol	285	None	replace
2530	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this,  new  BasicChronology[]  {  this  }  );  [CE]  incompatible  types  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this,  new  BasicChronology[]  {  this  }  );  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this,  new  BasicChronology[]  {  this  }  );	  iChronology    =    chronology.getChronology(this);    	non-compiled	[CE]  incompatible  types	285	None	replace
2531	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this,  dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this,  dayOfMonth);	  iChronology    =    chronology.getChronology(this);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	285	None	replace
2532	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this,  new  BasicChronology[]  {  null  }  );  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this,  new  BasicChronology[]  {  null  }  );  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this,  new  BasicChronology[]  {  null  }  );	  iChronology    =    chronology.getChronology(this);    	non-compiled	[CE]  cannot  find  symbol	285	None	replace
2533	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this,  new  BasicChronology(chronology));  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this,  new  BasicChronology(chronology));  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this,  new  BasicChronology(chronology));	  iChronology    =    chronology.getChronology(this);    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	285	None	replace
2534	[BUG]  [BUGGY]  int  iMin  =  chronology.getMinyOfYear();  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  chronology.getMinyOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  chronology.getMinyOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinyOfYear();    	non-compiled	[CE]  cannot  find  symbol	249	None	replace
2535	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(i);  [CE]  cannot  find  symbol  i  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(i);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(i);	  iChronology    =    chronology.withUTC(stackMonth);    	non-compiled	[CE]  cannot  find  symbol  i	54	None	replace
2536	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  1;  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  1;	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth)+    1;    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
2537	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  30,  30);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  30,  30);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  30,  30);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    30);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	166	None	replace
2538	[BUG]  [BUGGY]  int  min  =(this.iChronology.getMinYear()  ==  0)?  this.iChronology.getMinYear()  :  1;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =(this.iChronology.getMinYear()  ==  0)?  this.iChronology.getMinYear()  :  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =(this.iChronology.getMinYear()  ==  0)?  this.iChronology.getMinYear()  :  1;	  int    min    =    this.iChronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	119	None	replace
2539	[BUG]  [BUGGY]  int  min  =(this.iChronology.getMinYear()  >=  0)?  this.iChronology.getMinYear()  :  1;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =(this.iChronology.getMinYear()  >=  0)?  this.iChronology.getMinYear()  :  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =(this.iChronology.getMinYear()  >=  0)?  this.iChronology.getMinYear()  :  1;	  int    min    =    this.iChronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	119	None	replace
2540	[BUG]  [BUGGY]  int  min  =(this.iChronology.getMinYear()  ==  0)?  this.iChronology.getMinYear()  :  0;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =(this.iChronology.getMinYear()  ==  0)?  this.iChronology.getMinYear()  :  0;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =(this.iChronology.getMinYear()  ==  0)?  this.iChronology.getMinYear()  :  0;	  int    min    =    this.iChronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	119	None	replace
2541	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear(dayOfMonth  +  1);  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear(dayOfMonth  +  1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear(dayOfMonth  +  1);	  iMin    =    iChronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	59	None	replace
2542	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear(year);  [CE]  cannot  find  symbol  iMin  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear(year);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear(year);	  iMin    =    iChronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	59	None	replace
2543	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear(dayOfMonth)-  1;  [CE]  cannot  find  symbol  iMin  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear(dayOfMonth)-  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear(dayOfMonth)-  1;	  iMin    =    iChronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	59	None	replace
2544	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear(dayOfMonth)+  1;  [CE]  cannot  find  symbol  iMin  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear(dayOfMonth)+  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear(dayOfMonth)+  1;	  iMin    =    iChronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	59	None	replace
2545	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN_YEAR);  [CE]  cannot  find  symbol  MIN_YEAR  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN_YEAR);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  MIN_YEAR);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    MIN);    	non-compiled	[CE]  cannot  find  symbol  MIN_YEAR	95	None	replace
2546	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  1,  leapMonth);  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  1,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)+  1,  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth),    leapMonth);    	non-compiled	[CE]  ';'  expected	77	None	replace
2547	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)/  2,  leapMonth);  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)/  2,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth)/  2,  leapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth),    leapMonth);    	non-compiled	[CE]  ';'  expected	77	None	replace
2548	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  chronology.monthOfYear());  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  chronology.monthOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  chronology.monthOfYear());	  iChronology    =    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	200	None	replace
2549	[BUG]  [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  chronology.dayOfMonth());  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  chronology.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  new  BasicChronology(chronology.dayOfMonth(),  chronology.dayOfMonth());	  iChronology    =    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	200	None	replace
2550	[BUG]  [BUGGY]  Int  iLeapMonth  =  chronology.getLeapMonth(iChronology);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Int  iLeapMonth  =  chronology.getLeapMonth(iChronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Int  iLeapMonth  =  chronology.getLeapMonth(iChronology);	  int    iLeapMonth    =    iChronology.getLeapMonth(chronology);    	non-compiled	[CE]  cannot  find  symbol	219	None	replace
2551	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(iChronology).getLeapMonth();  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(iChronology).getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth(iChronology).getLeapMonth();	  int    iLeapMonth    =    iChronology.getLeapMonth(chronology);    	non-compiled	[CE]  cannot  find  symbol	219	None	replace
2552	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(int);  [CE]  '.class'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(int);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth(int);	  int    iLeapMonth    =    iChronology.getLeapMonth(chronology);    	non-compiled	[CE]  '.class'  expected	219	None	replace
2553	[BUG]  [BUGGY]  t  iLeapMonth  =  chronology.getLeapMonth(iChronology);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  t  iLeapMonth  =  chronology.getLeapMonth(iChronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	t  iLeapMonth  =  chronology.getLeapMonth(iChronology);	  int    iLeapMonth    =    iChronology.getLeapMonth(chronology);    	non-compiled	[CE]  cannot  find  symbol	219	None	replace
2554	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(chronology);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(chronology);	  iChronology    =    chronology.withBasicChronology(iFieldType);    	non-compiled	[CE]  cannot  find  symbol	223	None	replace
2555	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(iFieldValue);  [CE]  cannot  find  symbol  iFieldValue  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(iFieldValue);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(iFieldValue);	  iChronology    =    chronology.withBasicChronology(iFieldType);    	non-compiled	[CE]  cannot  find  symbol  iFieldValue	223	None	replace
2556	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(iHours);  [CE]  cannot  find  symbol  iHours  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(iHours);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(iHours);	  iChronology    =    chronology.withBasicChronology(iFieldType);    	non-compiled	[CE]  cannot  find  symbol  iHours	223	None	replace
2557	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(iJoinMonth);  [CE]  cannot  find  symbol  iJoinMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(iJoinMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(iJoinMonth);	  iChronology    =    chronology.withBasicChronology(iFieldType);    	non-compiled	[CE]  cannot  find  symbol  iJoinMonth	223	None	replace
2558	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(DateTimeFieldType.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(DateTimeFieldType.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(DateTimeFieldType.dayOfMonth);	  iChronology    =    chronology.getBasicChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	20	None	replace
2559	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(peekMonth);  [CE]  cannot  find  symbol  peekMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(peekMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(peekMonth);	  iChronology    =    chronology.getBasicChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  peekMonth	20	None	replace
2560	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(DateTimeFieldType.dayOfMonth());	  iChronology    =    chronology.getBasicChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
2561	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.year  ==  null?  chronology.dayOfMonth  :  1;  [CE]  cannot  find  symbol  year  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.year  ==  null?  chronology.dayOfMonth  :  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.year  ==  null?  chronology.dayOfMonth  :  1;	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    1;    	non-compiled	[CE]  cannot  find  symbol  year	323	None	replace
2562	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  >=  null?  chronology.dayOfMonth  :  1;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  >=  null?  chronology.dayOfMonth  :  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  >=  null?  chronology.dayOfMonth  :  1;	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    1;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	323	None	replace
2563	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth,  this.dayOfMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth,  this.dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth,  this.dayOfMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    this.dayOfMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	295	None	replace
2564	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth,  this.minute);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth,  this.minute);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth,  this.minute);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    this.dayOfMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	295	None	replace
2565	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth,  this.year);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth,  this.year);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth,  this.year);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    this.dayOfMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	295	None	replace
2566	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth,  this.min);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth,  this.min);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth,  this.min);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    this.dayOfMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	295	None	replace
2567	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth  -  1,  this.dayOfMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth  -  1,  this.dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth  -  1,  this.dayOfMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    this.dayOfMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	295	None	replace
2568	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth,  1);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth,  1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth,  1);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    this.dayOfMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	295	None	replace
2569	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  -  1,  chronology.dayOfMonth);  [CE]  cannot  find  symbol  DateTimeZone  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  -  1,  chronology.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  -  1,  chronology.dayOfMonth);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth    -    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	227	None	replace
2570	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	41	None	replace
2571	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.dayOfMonth  [CE]  ')'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.dayOfMonth  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.dayOfMonth	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  ')'  expected	41	None	replace
2572	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMon  [CE]  ')'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMon  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMon	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  ')'  expected	41	None	replace
2573	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  }  else  {  System.arraycopy(chronology,  0,  iChronology,  [CE]  ')'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  }  else  {  System.arraycopy(chronology,  0,  iChronology,  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  }  else  {  System.arraycopy(chronology,  0,  iChronology,	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  ')'  expected	41	None	replace
2574	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.dayOfMonth()  [CE]  ')'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.dayOfMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.dayOfMonth()	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  ')'  expected	41	None	replace
2575	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  }  else  {  System.arraycopy(chronology,  0,  iChronology  [CE]  ')'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  }  else  {  System.arraycopy(chronology,  0,  iChronology  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  }  else  {  System.arraycopy(chronology,  0,  iChronology	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  ')'  expected	41	None	replace
2576	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.monthOfYear()  [CE]  ')'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.monthOfYear()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.monthOfYear()	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  ')'  expected	41	None	replace
2577	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.dayOfMonth,  [CE]  ')'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.dayOfMonth,  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getDayOfMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.dayOfMonth,	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  ')'  expected	41	None	replace
2578	[BUG]  [BUGGY]  iChronology  =  chronology.getWeekOfYear();  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getWeekOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getWeekOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getWeekOfYear();    	non-compiled	[CE]  cannot  find  symbol	264	None	replace
2579	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayofMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayofMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this.dayOfMonth,  this.dayofMonth);	  iChronology    =    chronology.getInstance(this.dayOfMonth,    this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	299	None	replace
2580	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis()  /  DateTimeConstants.MILLIS_PER_DAY;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis()  /  DateTimeConstants.MILLIS_PER_DAY;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis()  /  DateTimeConstants.MILLIS_PER_DAY;	  BasicChronology    chronology    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	296	None	replace
2581	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis(),  seconds;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis(),  seconds;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis(),  seconds;	  BasicChronology    chronology    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	296	None	replace
2582	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis()  /  DateTimeUtils.getMonthOfYear(chronology);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis()  /  DateTimeUtils.getMonthOfYear(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.currentTimeMillis()  /  DateTimeUtils.getMonthOfYear(chronology);	  BasicChronology    chronology    =    DateTimeUtils.currentTimeMillis();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	296	None	replace
2583	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(chronology.getDateTimeZone());  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(chronology.getDateTimeZone());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(chronology.getDateTimeZone());	  iChronology    =    chronology.getInstance(DateTimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol	260	None	replace
2584	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfYear  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfYear());  [CE]  cannot  find  symbol  dayOfYear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfYear  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfYear  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfYear());	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  dayOfYear	318	None	replace
2585	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.year  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());  [CE]  cannot  find  symbol  year  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.year  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.year  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  year	318	None	replace
2586	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.monthOfYear());  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.monthOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.monthOfYear());	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	318	None	replace
2587	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology,  MIN);  iDayOfMonth  =  iChronology.getDayOfMonth();  [CE]  method  getChronology  in  class  DateTimeUtils  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology,  MIN);  iDayOfMonth  =  iChronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology,  MIN);  iDayOfMonth  =  iChronology.getDayOfMonth();	  Integer    iChronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    iChronology.getDayOfMonth();    	non-compiled	[CE]  method  getChronology  in  class  DateTimeUtils  cannot  be  applied  to  given  types;	229	None	replace
2588	[BUG]  [BUGGY]  int  iChronology  =  DateTimeUtils.getChronology(chronology);  [CE]  incompatible  types  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iChronology  =  DateTimeUtils.getChronology(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iChronology  =  DateTimeUtils.getChronology(chronology);	  Integer    iChronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    iChronology.getDayOfMonth();    	non-compiled	[CE]  incompatible  types	229	None	replace
2589	[BUG]  [BUGGY]  iMin  =  chronology.getMinInt()  +  1;  [CE]  cannot  find  symbol  iMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinInt()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinInt()  +  1;	  iMin    =    chronology.getMinInt();    	non-compiled	[CE]  cannot  find  symbol  iMin	150	None	replace
2590	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfYear());  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getDateTimeField(DateTimeFieldType.dayOfYear());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfYear());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
2591	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth.getDateTimeField(DateTimeFieldType.dayOfYear());  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth.getDateTimeField(DateTimeFieldType.dayOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth.getDateTimeField(DateTimeFieldType.dayOfYear());	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfYear());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	72	None	replace
2592	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth,  iLeapMonth);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth,  iLeapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  -  leapMonth,  iLeapMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    -    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	71	None	replace
2593	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  40,  dayOfMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  40,  dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  40,  dayOfMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    dayOfMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	173	None	replace
2594	[BUG]  [BUGGY]  if(iLeapMonth  ==  chronology.getLastDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastDayOfMonth();  }  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth  ==  chronology.getLastDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth  ==  chronology.getLastDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastDayOfMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLastDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
2595	[BUG]  [BUGGY]  if(iLeapMonth  ==  chronology.getLastDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastDayOfMonth();  }  else  {  [CE]  illegal  start  of  expression  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth  ==  chronology.getLastDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastDayOfMonth();  }  else  {  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth  ==  chronology.getLastDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastDayOfMonth();  }  else  {	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLastDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
2596	[BUG]  [BUGGY]  if(iLeapMonth  ==  chronology.getLastDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastDayOfMonth()  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth  ==  chronology.getLastDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastDayOfMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth  ==  chronology.getLastDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastDayOfMonth()	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLastDayOfMonth();    	non-compiled	[CE]  ';'  expected	163	None	replace
2597	[BUG]  [BUGGY]  if(iLeapMonth  ==  chronology.getLastDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastDayOfMonth()  +  leapMonth;  }  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth  ==  chronology.getLastDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastDayOfMonth()  +  leapMonth;  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth  ==  chronology.getLastDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastDayOfMonth()  +  leapMonth;  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLastDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
2598	[BUG]  [BUGGY]  if(iLeapMonth  ==  chronology.getLastDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastDayOfMonth();  }  else  {  throw  new  IllegalFieldValueException( "Date  [CE]  unclosed  string  literal  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth  ==  chronology.getLastDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastDayOfMonth();  }  else  {  throw  new  IllegalFieldValueException( "Date  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth  ==  chronology.getLastDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastDayOfMonth();  }  else  {  throw  new  IllegalFieldValueException( "Date	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLastDayOfMonth();    	non-compiled	[CE]  unclosed  string  literal	163	None	replace
2599	[BUG]  [BUGGY]  if(iLeapMonth  ==  chronology.getLastDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getLastDayOfMonth();  iLeapMonth  =  chronology.getLastDayOfMonth();  }  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth  ==  chronology.getLastDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getLastDayOfMonth();  iLeapMonth  =  chronology.getLastDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth  ==  chronology.getLastDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getLastDayOfMonth();  iLeapMonth  =  chronology.getLastDayOfMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLastDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
2600	[BUG]  [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology!=  null?  chronology.getDayOfMonth()  :  dayOfMonth;  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology!=  null?  chronology.getDayOfMonth()  :  dayOfMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Node  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology!=  null?  chronology.getDayOfMonth()  :  dayOfMonth;	  Node    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	231	None	replace
2601	[BUG]  [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology,  iDayOfMonth);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology,  iDayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Node  chronology  =  DateTimeUtils.getChronology(chronology,  iDayOfMonth);	  Node    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	231	None	replace
2602	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear(dayOfMonth  +  1);  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear(dayOfMonth  +  1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear(dayOfMonth  +  1);	  iMin    =    chronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	138	None	replace
2603	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear(dayOfMonth)+  1;  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear(dayOfMonth)+  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear(dayOfMonth)+  1;	  iMin    =    chronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	138	None	replace
2604	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear(dayOfMonth)-  1;  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear(dayOfMonth)-  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear(dayOfMonth)-  1;	  iMin    =    chronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	138	None	replace
2605	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  30,  null);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  30,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  30,  null);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    30);    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
2606	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  30,  30);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  30,  30);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  30,  30);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    30);    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
2607	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth  *  Math.sqrt(DateTimeFieldType.dayOfMonth());  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth  *  Math.sqrt(DateTimeFieldType.dayOfMonth());  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth  *  Math.sqrt(DateTimeFieldType.dayOfMonth());	  iLeapMonth    =    leapMonth;    	non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	7	None	replace
2608	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth  *  Math.max(iMax,  leapMonth);  [CE]  variable  iMax  might  not  have  been  initialized  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth  *  Math.max(iMax,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth  *  Math.max(iMax,  leapMonth);	  iLeapMonth    =    leapMonth;    	non-compiled	[CE]  variable  iMax  might  not  have  been  initialized	7	None	replace
2609	[BUG]  [BUGGY]  iLeapMonth  =  Math.max(iLeapMonth,  leapMonth);  [CE]  variable  iLeapMonth  might  not  have  been  initialized  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  Math.max(iLeapMonth,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  Math.max(iLeapMonth,  leapMonth);	  iLeapMonth    =    leapMonth;    	non-compiled	[CE]  variable  iLeapMonth  might  not  have  been  initialized	7	None	replace
2610	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth  *  Math.log(DateTimeFieldType.dayOfMonth())+  1;  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth  *  Math.log(DateTimeFieldType.dayOfMonth())+  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth  *  Math.log(DateTimeFieldType.dayOfMonth())+  1;	  iLeapMonth    =    leapMonth;    	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	7	None	replace
2611	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth  *  Math.log(DateTimeFieldType.dayOfMonth());  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth  *  Math.log(DateTimeFieldType.dayOfMonth());  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth  *  Math.log(DateTimeFieldType.dayOfMonth());	  iLeapMonth    =    leapMonth;    	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	7	None	replace
2612	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getStartOfYear()  +  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getStartOfYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getStartOfYear()  +  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getStartOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	265	None	replace
2613	[BUG]  [BUGGY]  int  iMonth  =  chronology.getStartOfYear();  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMonth  =  chronology.getStartOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMonth  =  chronology.getStartOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getStartOfYear();    	non-compiled	[CE]  cannot  find  symbol	265	None	replace
2614	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iMonth  =  chronology.getStartOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iMonth  =  chronology.getStartOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iMonth  =  chronology.getStartOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getStartOfYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	265	None	replace
2615	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(chronology);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(chronology);	  iChronology    =    chronology.getInstance(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
2616	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(chronology.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(chronology.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(chronology.dayOfMonth);	  iChronology    =    chronology.getInstance(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	155	None	replace
2617	[BUG]  [BUGGY]  int  min  =  time.getMinYear();  [CE]  cannot  find  symbol  time  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  time.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  time.getMinYear();	  int    min    =    data.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  time	190	None	replace
2618	[BUG]  [BUGGY]  int  MIN  =  chronology.getMinYear();  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  MIN  =  chronology.getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  MIN  =  chronology.getMinYear();	  MIN    =    chronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	283	None	replace
2619	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();  }  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	65	None	replace
2620	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();  }  else  {  iMin  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();  }  else  {  iMin  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();  }  else  {  iMin  =  chronology.getDayOfMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	65	None	replace
2621	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();  }  else  {  iMin  =  chronology.getMonthOfYear();  }  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();  }  else  {  iMin  =  chronology.getMonthOfYear();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();  }  else  {  iMin  =  chronology.getMonthOfYear();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	65	None	replace
2622	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  [CE]  illegal  start  of  expression  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMonthOfYear();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
2623	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	65	None	replace
2624	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();  }  else  {  iMin  =  chronology.getDayOfMonth()  [CE]  ';'  expected  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();  }  else  {  iMin  =  chronology.getDayOfMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();  }  else  {  iMin  =  chronology.getDayOfMonth()	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMonthOfYear();    	non-compiled	[CE]  ';'  expected	65	None	replace
2625	[BUG]  [BUGGY]  int  iMin  =  chronology.getDayOfMonth();  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  chronology.getDayOfMonth();	  iMin    =    chronology.getDayOfMonth();    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	140	None	replace
2626	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  leapMonth  *  Math.max(iChronology.getDayOfMonth());  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  leapMonth  *  Math.max(iChronology.getDayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  +  leapMonth  *  Math.max(iChronology.getDayOfMonth());	  iChronology    =    chronology.dayOfMonth()    +    leapMonth;    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	110	None	replace
2627	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  leapMonth,  chronology.dayOfMonth;  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  leapMonth,  chronology.dayOfMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  +  leapMonth,  chronology.dayOfMonth;	  iChronology    =    chronology.dayOfMonth()    +    leapMonth;    	non-compiled	[CE]  ';'  expected	110	None	replace
2628	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  leapMonth,  chronology.getDayOfMonth();  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  leapMonth,  chronology.getDayOfMonth();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  +  leapMonth,  chronology.getDayOfMonth();	  iChronology    =    chronology.dayOfMonth()    +    leapMonth;    	non-compiled	[CE]  ';'  expected	110	None	replace
2629	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  leapMonth  *  Math.max(iChronology.getYear());  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  leapMonth  *  Math.max(iChronology.getYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  +  leapMonth  *  Math.max(iChronology.getYear());	  iChronology    =    chronology.dayOfMonth()    +    leapMonth;    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	110	None	replace
2630	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getStandardMonth();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getStandardMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getStandardMonth();	  int    leapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	290	None	replace
2631	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.dayOfMonth().iHeap;  [CE]  cannot  find  symbol  iHeap  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.dayOfMonth().iHeap;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.dayOfMonth().iHeap;	  int    iLeapMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iHeap	129	None	replace
2632	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.hourOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.hourOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.hourOfMonth);	  iChronology    =    chronology.getBasicChronology(this.hourOfYear);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	225	None	replace
2633	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.monthOfMonth);  [CE]  cannot  find  symbol  monthOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.monthOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.monthOfMonth);	  iChronology    =    chronology.getBasicChronology(this.hourOfYear);    	non-compiled	[CE]  cannot  find  symbol  monthOfMonth	225	None	replace
2634	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  false);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  false);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    false);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
2635	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth,  true);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    false);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
2636	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth,  true);  [CE]  cannot  find  symbol  jumpMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth,  true);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth,    false);    	non-compiled	[CE]  cannot  find  symbol  jumpMonth	98	None	replace
2637	[BUG]  [BUGGY]  int  iLeapMonth  =  this.iChronology.getLeapMonthOfYear();  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  this.iChronology.getLeapMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  this.iChronology.getLeapMonthOfYear();	  int    iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
2638	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getLeapMonthOfYear();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getLeapMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getLeapMonthOfYear();	  int    iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	220	None	replace
2639	[BUG]  [BUGGY]  int  iLeapMonth  =  hiChronology.getLeapMonthOfYear();  [CE]  cannot  find  symbol  hiChronology  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  hiChronology.getLeapMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  hiChronology.getLeapMonthOfYear();	  int    iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  hiChronology	220	None	replace
2640	[BUG]  [BUGGY]  int  iLeapMonth  =  dataItem.getLeapMonthOfYear();  [CE]  cannot  find  symbol  dataItem  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  dataItem.getLeapMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  dataItem.getLeapMonthOfYear();	  int    iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  dataItem	220	None	replace
2641	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth(),  pointOfMonth);  [CE]  cannot  find  symbol  pointOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth(),  pointOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth(),  pointOfMonth);	  iChronology    =    chronology.getChronology(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  pointOfMonth	284	None	replace
2642	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth(),  hourMonth);  [CE]  cannot  find  symbol  hourMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth(),  hourMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth(),  hourMonth);	  iChronology    =    chronology.getChronology(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  hourMonth	284	None	replace
2643	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  days;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  days;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth  ==  null?  chronology.dayOfMonth  :  days;	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth    ==    null?    chronology.dayOfMonth    :    dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	320	None	replace
2644	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMon  [CE]  ';'  expected  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMon  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMon	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMon    	non-compiled	[CE]  ';'  expected	13	None	replace
2645	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getLeapMonth()  [CE]  ';'  expected  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getLeapMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  leapMonth  =  chronology.getLeapMonth()	  if(iDayOfMonth!=    null)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    else    {    iDayOfMonth    =    chronology.getDayOfMon    	non-compiled	[CE]  ';'  expected	13	None	replace
2646	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN_MONTH).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN_MONTH).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN_MONTH).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	245	None	replace
2647	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  1).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  1).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  1).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	245	None	replace
2648	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  4).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  4).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  4).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	245	None	replace
2649	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  30).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  30).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  30).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	245	None	replace
2650	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  2).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  2).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  2).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	245	None	replace
2651	[BUG]  [BUGGY]  iMin  =  chronology.getMinDayOfMonth()  +  1;  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinDayOfMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinDayOfMonth()  +  1;	  iMin    =    chronology.getMinDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	139	None	replace
2652	[BUG]  [BUGGY]  MIN  =  chronology.getMinDayOfMonth();  [CE]  cannot  assign  a  value  to  final  variable  MIN  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  MIN  =  chronology.getMinDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	MIN  =  chronology.getMinDayOfMonth();	  iMin    =    chronology.getMinDayOfMonth();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  MIN	139	None	replace
2653	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  null  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  null  +  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  null  +  1);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    null);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	184	None	replace
2654	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  new  BasicChronology(chronology.dayOfMonth()));  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  new  BasicChronology(chronology.dayOfMonth()));  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  new  BasicChronology(chronology.dayOfMonth()));	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    null);    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	184	None	replace
2655	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getDaysInYearMonth();  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getDaysInYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getDaysInYearMonth();	  int    leapMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	82	None	replace
2656	[BUG]  [BUGGY]  iChronology  =  Chronology.dayOfMonth;  [CE]  cannot  find  symbol  Chronology  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  Chronology.dayOfMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  Chronology.dayOfMonth;	  iChronology    =    chronology.dayOfYear;    	non-compiled	[CE]  cannot  find  symbol  Chronology	34	None	replace
2657	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(dataset);  [CE]  cannot  find  symbol  dataset  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(dataset);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(dataset);	  iChronology    =    chronology.getChronology(chronology);    	non-compiled	[CE]  cannot  find  symbol  dataset	286	None	replace
2658	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeUtils.currentTimeMillis());  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeUtils.currentTimeMillis());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeUtils.currentTimeMillis());	  iChronology    =    chronology.getChronology(chronology);    	non-compiled	[CE]  cannot  find  symbol	286	None	replace
2659	[BUG]  [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  iDayOfMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth    ==    chronology.dayOfMonth)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	274	None	replace
2660	[BUG]  [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iJoinMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iJoinMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iJoinMonth  =  chronology.getDayOfMonth();  }	  if(iDayOfMonth    ==    chronology.dayOfMonth)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	274	None	replace
2661	[BUG]  [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  iDayOfMonth  =  chronology.getDayOfMonth()  [CE]  ';'  expected  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  iDayOfMonth  =  chronology.getDayOfMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  iDayOfMonth  =  chronology.getDayOfMonth()	  if(iDayOfMonth    ==    chronology.dayOfMonth)    {    BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth();    }    	non-compiled	[CE]  ';'  expected	274	None	replace
2662	[BUG]  [BUGGY]  iChronology  =  chronology.getDayOfMonth(this,  leapMonth);  [CE]  no  suitable  method  found  for  getDayOfMonth(BasicMonthOfYearDateTimeField,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDayOfMonth(this,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDayOfMonth(this,  leapMonth);	  iChronology    =    chronology.getDayOfMonth();    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(BasicMonthOfYearDateTimeField,int)	36	None	replace
2663	[BUG]  [BUGGY]  iChronology  =  chronology.getYear();  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getYear();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getYear();	  iChronology    =    chronology.getDayOfMonth();    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	36	None	replace
2664	[BUG]  [BUGGY]  iChronology  =  chronology.getDaysInYearMonth();  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDaysInYearMonth();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDaysInYearMonth();	  iChronology    =    chronology.getDayOfMonth();    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	36	None	replace
2665	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth  [CE]  ';'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC(),    leapMonth;    	non-compiled	[CE]  ';'  expected	130	None	replace
2666	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth);  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC(),    leapMonth;    	non-compiled	[CE]  ';'  expected	130	None	replace
2667	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth.getInstance(DateTimeFieldType.dayOfYear());  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth.getInstance(DateTimeFieldType.dayOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth.getInstance(DateTimeFieldType.dayOfYear());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfYear());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	145	None	replace
2668	[BUG]  [BUGGY]  iChronology  =  chronology.findChronology(DateTimeFieldType.dayOfYear());  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.findChronology(DateTimeFieldType.dayOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.findChronology(DateTimeFieldType.dayOfYear());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfYear());    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
2669	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.currentTimeMillis();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.currentTimeMillis();	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	176	None	replace
2670	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getLastDayOfMonth());  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getLastDayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getLastDayOfMonth());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
2671	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getMinuteMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getMinuteMillisPerMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getMinuteMillisPerMonth());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
2672	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getMaxYear());  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getMaxYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getMaxYear());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
2673	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getParent());  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getParent());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getParent());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
2674	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getLastModified());  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getLastModified());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getLastModified());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol	196	None	replace
2675	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(true,  null);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(true,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(true,  null);	  iChronology    =    chronology.getChronology(true);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
2676	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(true,  false);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(true,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(true,  false);	  iChronology    =    chronology.getChronology(true);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
2677	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getLeapMonth(chronology);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getLeapMonth(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getLeapMonth(chronology);	  int    leapMonth    =    iChronology.getLeapMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	127	None	replace
2678	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.hourOfMonth(),  dayOfMonth);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.hourOfMonth(),  dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.hourOfMonth(),  dayOfMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	302	None	replace
2679	[BUG]  [BUGGY]  int  min  =  chronology.getMinYearMonth();  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  chronology.getMinYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMinYearMonth();	  int    min    =    chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
2680	[BUG]  [BUGGY]  this.dayOfMonth  =  DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  this.dayOfMonth  =  DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	this.dayOfMonth  =  DateTimeFieldType.dayOfMonth(),  leapMonth);	  this.dayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  ';'  expected	93	None	replace
2681	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(false);  [CE]  no  suitable  method  found  for  withUTC(boolean)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(false);	  iChronology    =    chronology.withUTC(true);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(boolean)	204	None	replace
2682	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(true,  MIN);  [CE]  no  suitable  method  found  for  withUTC(boolean,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(true,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(true,  MIN);	  iChronology    =    chronology.withUTC(true);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(boolean,int)	204	None	replace
2683	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(0,  true);  [CE]  no  suitable  method  found  for  withUTC(int,boolean)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(0,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(0,  true);	  iChronology    =    chronology.withUTC(true);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(int,boolean)	204	None	replace
2684	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(false,  true);  [CE]  no  suitable  method  found  for  withUTC(boolean,boolean)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(false,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(false,  true);	  iChronology    =    chronology.withUTC(true);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(boolean,boolean)	204	None	replace
2685	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.year);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.year);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.year);	  iChronology    =    chronology.getBasicChronology(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	17	None	replace
2686	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.weekMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.weekMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.weekMonth);	  iChronology    =    chronology.getBasicChronology(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	17	None	replace
2687	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.hourMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.hourMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.dayOfMonth,  this.hourMonth);	  iChronology    =    chronology.getBasicChronology(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	17	None	replace
2688	[BUG]  [BUGGY]  int  min  =  (this.dayOfMonth!=  null?  this.dayOfMonth.getMinYear()  :  0);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  (this.dayOfMonth!=  null?  this.dayOfMonth.getMinYear()  :  0);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  (this.dayOfMonth!=  null?  this.dayOfMonth.getMinYear()  :  0);	  int    min    =    this.dayOfMonth.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	118	None	replace
2689	[BUG]  [BUGGY]  int  min  =(this.dayOfMonth  ==  null?  this.dayOfMonth.getMinYear()  :  0);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =(this.dayOfMonth  ==  null?  this.dayOfMonth.getMinYear()  :  0);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =(this.dayOfMonth  ==  null?  this.dayOfMonth.getMinYear()  :  0);	  int    min    =    this.dayOfMonth.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	118	None	replace
2690	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1,  leapMonth);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1,  leapMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	172	None	replace
2691	[BUG]  [BUGGY]  iMonth  =  iChronology.getMonthOfYear()  *  leapMonth;  [CE]  cannot  find  symbol  iMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  iChronology.getMonthOfYear()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  iChronology.getMonthOfYear()  *  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iMonth	47	None	replace
2692	[BUG]  [BUGGY]  iMonth  =  chronology.getYearOfYear()  *  leapMonth;  [CE]  cannot  find  symbol  iMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getYearOfYear()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getYearOfYear()  *  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iMonth	47	None	replace
2693	[BUG]  [BUGGY]  iMonth  =  chronology.getMonthOfYear()  *  leapMonth  +  1;  [CE]  cannot  find  symbol  iMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMonthOfYear()  *  leapMonth  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonthOfYear()  *  leapMonth  +  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iMonth	47	None	replace
2694	[BUG]  [BUGGY]  iMonth  =  this.chronology.getMonthOfYear()  *  leapMonth;  [CE]  cannot  find  symbol  iMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  this.chronology.getMonthOfYear()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  this.chronology.getMonthOfYear()  *  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iMonth	47	None	replace
2695	[BUG]  [BUGGY]  iMonth  =  chronology.getMonthOfYear()  *  jumpMonth;  [CE]  cannot  find  symbol  iMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMonthOfYear()  *  jumpMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonthOfYear()  *  jumpMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iMonth	47	None	replace
2696	[BUG]  [BUGGY]  iMonth  =  chronology.getMonthOfYear()  /  leapMonth;  [CE]  cannot  find  symbol  iMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMonthOfYear()  /  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonthOfYear()  /  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iMonth	47	None	replace
2697	[BUG]  [BUGGY]  iLeapMonth  =  this.dayOfMonth.getLeapMonth();  [CE]  cannot  find  symbol  dayOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  this.dayOfMonth.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  this.dayOfMonth.getLeapMonth();	  iLeapMonth    =    leapMonth.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	2	None	replace
2698	[BUG]  [BUGGY]  iMin  =  (this.chronology!=  null?  this.chronology.getMinYear()  :  Math.min(this.dayOfMonth,  leapMonth));  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  (this.chronology!=  null?  this.chronology.getMinYear()  :  Math.min(this.dayOfMonth,  leapMonth));  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  (this.chronology!=  null?  this.chronology.getMinYear()  :  Math.min(this.dayOfMonth,  leapMonth));	  iMin    =    this.chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	214	None	replace
2699	[BUG]  [BUGGY]  iMin  =  (this.chronology!=  null?  this.chronology.getMinYear()  :  Math.min(0,  this.chronology.getMinYear()));  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  (this.chronology!=  null?  this.chronology.getMinYear()  :  Math.min(0,  this.chronology.getMinYear()));  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  (this.chronology!=  null?  this.chronology.getMinYear()  :  Math.min(0,  this.chronology.getMinYear()));	  iMin    =    this.chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	214	None	replace
2700	[BUG]  [BUGGY]  iMin  =  (this.chronology!=  null?  this.chronology.getMinYear()  :  Math.min(this.year,  this.dayOfMonth));  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  (this.chronology!=  null?  this.chronology.getMinYear()  :  Math.min(this.year,  this.dayOfMonth));  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  (this.chronology!=  null?  this.chronology.getMinYear()  :  Math.min(this.year,  this.dayOfMonth));	  iMin    =    this.chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	214	None	replace
2701	[BUG]  [BUGGY]  if(iLeapMonth  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.dayOfMonth  [CE]  ')'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.dayOfMonth  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.dayOfMonth	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getHeapMonth();    	non-compiled	[CE]  ')'  expected	162	None	replace
2702	[BUG]  [BUGGY]  if(iLeapMonth  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.dayOfMonth()  [CE]  ')'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.dayOfMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.dayOfMonth()	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getHeapMonth();    	non-compiled	[CE]  ')'  expected	162	None	replace
2703	[BUG]  [BUGGY]  if(iLeapMonth  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  else  {  break;  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  else  {  break;  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  else  {  break;  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getHeapMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	162	None	replace
2704	[BUG]  [BUGGY]  if(iLeapMonth  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  else  {  throw  new  IllegalFieldValueException( "Date  [CE]  unclosed  string  literal  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  else  {  throw  new  IllegalFieldValueException( "Date  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getHeapMonth();  }  else  {  throw  new  IllegalFieldValueException( "Date	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getHeapMonth();    	non-compiled	[CE]  unclosed  string  literal	162	None	replace
2705	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth,  chronology.getDateTimeMillis();  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth,  chronology.getDateTimeMillis();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth,  chronology.getDateTimeMillis();	  iLeapMonth    =    leapMonth,    chronology.getLeapMonth();    	non-compiled	[CE]  ';'  expected	4	None	replace
2706	[BUG]  [BUGGY]  int  iMin  =  chronology.getMinYear(switchMonth);  [CE]  cannot  find  symbol  switchMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  chronology.getMinYear(switchMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  chronology.getMinYear(switchMonth);	  iMin    =    chronology.getMinYear(switchMonth);    	non-compiled	[CE]  cannot  find  symbol  switchMonth	60	None	replace
2707	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear(yearsInYear,  leapMonth);  [CE]  cannot  find  symbol  iMin  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear(yearsInYear,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear(yearsInYear,  leapMonth);	  iMin    =    chronology.getMinYear(switchMonth);    	non-compiled	[CE]  cannot  find  symbol  iMin	60	None	replace
2708	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(chronology,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear(chronology,  dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(chronology,  dayOfMonth);	  int    min    =    iChronology.getMinYear(chronology);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	310	None	replace
2709	[BUG]  [BUGGY]  int  min  =  chronology.getMinYear(chronology);  [CE]  method  getMinYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  chronology.getMinYear(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  chronology.getMinYear(chronology);	  int    min    =    iChronology.getMinYear(chronology);    	non-compiled	[CE]  method  getMinYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	310	None	replace
2710	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(chronology,  1);  [CE]  method  getMinYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear(chronology,  1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(chronology,  1);	  int    min    =    iChronology.getMinYear(chronology);    	non-compiled	[CE]  method  getMinYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	310	None	replace
2711	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(chronology,  30);  [CE]  method  getMinYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear(chronology,  30);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(chronology,  30);	  int    min    =    iChronology.getMinYear(chronology);    	non-compiled	[CE]  method  getMinYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	310	None	replace
2712	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(chronology,  hourMonth);  [CE]  cannot  find  symbol  hourMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear(chronology,  hourMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(chronology,  hourMonth);	  int    min    =    iChronology.getMinYear(chronology);    	non-compiled	[CE]  cannot  find  symbol  hourMonth	310	None	replace
2713	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(chronology,  31);  [CE]  method  getMinYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear(chronology,  31);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(chronology,  31);	  int    min    =    iChronology.getMinYear(chronology);    	non-compiled	[CE]  method  getMinYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	310	None	replace
2714	[BUG]  [BUGGY]  float  iLeapMonth  =  iChronology.monthOfYear();  [CE]  incompatible  types  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  float  iLeapMonth  =  iChronology.monthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	float  iLeapMonth  =  iChronology.monthOfYear();	  int    iLeapMonth    =    iChronology.monthOfYear();    	non-compiled	[CE]  incompatible  types	109	None	replace
2715	[BUG]  [BUGGY]  Integer  iLeapMonth  =  chronology.monthOfYear();  [CE]  incompatible  types  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iLeapMonth  =  chronology.monthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iLeapMonth  =  chronology.monthOfYear();	  int    iLeapMonth    =    iChronology.monthOfYear();    	non-compiled	[CE]  incompatible  types	109	None	replace
2716	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.monthOfYear()  +  leapMonth;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.monthOfYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.monthOfYear()  +  leapMonth;	  int    iLeapMonth    =    iChronology.monthOfYear();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	109	None	replace
2717	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  1,  leapMonth;  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  +  1,  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  +  1,  leapMonth;	  iChronology    =    chronology.dayOfMonth()    +    1;    	non-compiled	[CE]  ';'  expected	199	None	replace
2718	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  [1];  [CE]  array  required,  but  DateTimeField  found  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  [1];  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  [1];	  iChronology    =    chronology.dayOfMonth()    +    1;    	non-compiled	[CE]  array  required,  but  DateTimeField  found	199	None	replace
2719	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getMaxYear());  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getMaxYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getMaxYear());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
2720	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getMinYear());  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getMinYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth  +  1,  chronology.getMinYear());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth    +    1);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
2721	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMONTH);  [CE]  cannot  find  symbol  leapMONTH  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMONTH);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMONTH);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    jumpMonth);    	non-compiled	[CE]  cannot  find  symbol  leapMONTH	182	None	replace
2722	[BUG]  [BUGGY]  DayTimeFieldType  dayOfMonth  =  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  DayTimeFieldType  dayOfMonth  =  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	DayTimeFieldType  dayOfMonth  =  DateTimeFieldType.dayOfMonth();	  dayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
2723	[BUG]  [BUGGY]  DayOfMonth  iMonth  =  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  DayOfMonth  iMonth  =  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	DayOfMonth  iMonth  =  DateTimeFieldType.dayOfMonth();	  dayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
2724	[BUG]  [BUGGY]  TagOfMonth  =  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  TagOfMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  TagOfMonth  =  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	TagOfMonth  =  DateTimeFieldType.dayOfMonth();	  dayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  TagOfMonth	94	None	replace
2725	[BUG]  [BUGGY]  days  =  DateTimeFieldType.dayOfMonth();  [CE]  cannot  find  symbol  days  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  days  =  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	days  =  DateTimeFieldType.dayOfMonth();	  dayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  days	94	None	replace
2726	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(dataset,  chronology);  [CE]  cannot  find  symbol  dataset  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(dataset,  chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(dataset,  chronology);	  iChronology    =    chronology.getBasicChronology(chronology);    	non-compiled	[CE]  cannot  find  symbol  dataset	329	None	replace
2727	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear()  +  leapMonth  *  Math.min(iChronology.getMinYear());  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear()  +  leapMonth  *  Math.min(iChronology.getMinYear());  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear()  +  leapMonth  *  Math.min(iChronology.getMinYear());	  iMin    =    iChronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iMin	56	None	replace
2728	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear()  +  leapMonth,  chronology.getDayOfMonth();  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear()  +  leapMonth,  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear()  +  leapMonth,  chronology.getDayOfMonth();	  iMin    =    iChronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  ';'  expected	56	None	replace
2729	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear()  +  leapMonth,  chronology.getHeaderMillisPerMonth();  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear()  +  leapMonth,  chronology.getHeaderMillisPerMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear()  +  leapMonth,  chronology.getHeaderMillisPerMonth();	  iMin    =    iChronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  ';'  expected	56	None	replace
2730	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear()  +  leapMonth,  chronology.getLeapMonth();  [CE]  ';'  expected  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear()  +  leapMonth,  chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear()  +  leapMonth,  chronology.getLeapMonth();	  iMin    =    iChronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  ';'  expected	56	None	replace
2731	[BUG]  [BUGGY]  iMin  =  iChronology.getMinYear()  +  leapMonth,  chronology.getLeapMonth());  [CE]  ';'  expected  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinYear()  +  leapMonth,  chronology.getLeapMonth());  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinYear()  +  leapMonth,  chronology.getLeapMonth());	  iMin    =    iChronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  ';'  expected	56	None	replace
2732	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeFieldType.dayOfMonth);	  iChronology    =    chronology.getChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	26	None	replace
2733	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.monthOfYear());  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.monthOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeFieldType.monthOfYear());	  iChronology    =    chronology.getChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
2734	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.monthOfYear);  [CE]  cannot  find  symbol  monthOfYear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeFieldType.monthOfYear);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeFieldType.monthOfYear);	  iChronology    =    chronology.getChronology(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  monthOfYear	26	None	replace
2735	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  chronology  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  chronology  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  leapMonth),  chronology	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    leapMonth)    	non-compiled	[CE]  ';'  expected	75	None	replace
2736	[BUG]  [BUGGY]  int  iDayOfMonth  =  DateTimeFieldType.dayOfMonth();  [CE]  incompatible  types  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iDayOfMonth  =  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iDayOfMonth  =  DateTimeFieldType.dayOfMonth();	  iDayOfMonth    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  incompatible  types	212	None	replace
2737	[BUG]  [BUGGY]  if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	14	None	replace
2738	[BUG]  [BUGGY]  if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  }  else  {  [CE]  illegal  start  of  expression  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  }  else  {  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  }  else  {	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth()    +    leapMonth;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
2739	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	14	None	replace
2740	[BUG]  [BUGGY]  if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  iDayOfMonth  =  chronology.getDayOfMonth()  +  leapMonth;  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	14	None	replace
2741	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  *  leapMonth;  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  *  leapMonth;  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.getDayOfMonth()  *  leapMonth;  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.getDayOfMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	14	None	replace
2742	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  41);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  41);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  41);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    40);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	171	None	replace
2743	[BUG]  [BUGGY]  Integer  iLeapMonth  =  chronology.getLeapMonth()  -  1;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iLeapMonth  =  chronology.getLeapMonth()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iLeapMonth  =  chronology.getLeapMonth()  -  1;	  int    iLeapMonth    =    iChronology.getLeapMonth()    -    1;    	non-compiled	[CE]  cannot  find  symbol	218	None	replace
2744	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  /  1;  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  /  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth()  /  1;	  int    iLeapMonth    =    iChronology.getLeapMonth()    -    1;    	non-compiled	[CE]  cannot  find  symbol	218	None	replace
2745	[BUG]  [BUGGY]  Int  iLeapMonth  =  chronology.getLeapMonth()  -  1;  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Int  iLeapMonth  =  chronology.getLeapMonth()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Int  iLeapMonth  =  chronology.getLeapMonth()  -  1;	  int    iLeapMonth    =    iChronology.getLeapMonth()    -    1;    	non-compiled	[CE]  cannot  find  symbol	218	None	replace
2746	[BUG]  [BUGGY]  int  iLeapMonth  =  data.getLeapMonth()  -  1;  [CE]  cannot  find  symbol  data  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  data.getLeapMonth()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  data.getLeapMonth()  -  1;	  int    iLeapMonth    =    iChronology.getLeapMonth()    -    1;    	non-compiled	[CE]  cannot  find  symbol  data	218	None	replace
2747	[BUG]  [BUGGY]  Integer  iLeapMonth  =  chronology.getLeapMonth()  +  1;  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iLeapMonth  =  chronology.getLeapMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iLeapMonth  =  chronology.getLeapMonth()  +  1;	  int    iLeapMonth    =    iChronology.getLeapMonth()    +    1;    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
2748	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  *  1;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  *  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth()  *  1;	  int    iLeapMonth    =    iChronology.getLeapMonth()    +    1;    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
2749	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(false,  hourMonth);  [CE]  cannot  find  symbol  hourMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(false,  hourMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(false,  hourMonth);	  iChronology    =    chronology.getInstance(false);    	non-compiled	[CE]  cannot  find  symbol  hourMonth	156	None	replace
2750	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(false,  dataArea);  [CE]  cannot  find  symbol  dataArea  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(false,  dataArea);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(false,  dataArea);	  iChronology    =    chronology.getInstance(false);    	non-compiled	[CE]  cannot  find  symbol  dataArea	156	None	replace
2751	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(false,  MIN);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(false,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(false,  MIN);	  iChronology    =    chronology.getInstance(false);    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
2752	[BUG]  [BUGGY]  int  iMin  =  interval.getMinMonth();  [CE]  cannot  find  symbol  interval  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  interval.getMinMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  interval.getMinMonth();	  iMin    =    interval.getMinMonth();    	non-compiled	[CE]  cannot  find  symbol  interval	317	None	replace
2753	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth(edgeMonth);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth(edgeMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getDayOfMonth(edgeMonth);	  int    leapMonth    =    iChronology.getDayOfMonth(chronology);    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	237	None	replace
2754	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth(stackMonth);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth(stackMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getDayOfMonth(stackMonth);	  int    leapMonth    =    iChronology.getDayOfMonth(chronology);    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	237	None	replace
2755	[BUG]  [BUGGY]  Integer  iMonth  =  chronology.getMonthOfYear();  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iMonth  =  chronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iMonth  =  chronology.getMonthOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	42	None	replace
2756	[BUG]  [BUGGY]  iMonth  =  chronology.getMonthOfYear(strMonth);  [CE]  cannot  find  symbol  iMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMonthOfYear(strMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonthOfYear(strMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMonth	42	None	replace
2757	[BUG]  [BUGGY]  iMax  =  chronology.getMinYear()  *  Math.min(iMax,  leapMonth);  [CE]  variable  iMax  might  not  have  been  initialized  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMax  =  chronology.getMinYear()  *  Math.min(iMax,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMax  =  chronology.getMinYear()  *  Math.min(iMax,  leapMonth);	  iMax    =    chronology.getMinYear();    	non-compiled	[CE]  variable  iMax  might  not  have  been  initialized	61	None	replace
2758	[BUG]  [BUGGY]  iMax  =  chronology.getMinYear()  *  Math.max(1,  leapMonth);  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMax  =  chronology.getMinYear()  *  Math.max(1,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMax  =  chronology.getMinYear()  *  Math.max(1,  leapMonth);	  iMax    =    chronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	61	None	replace
2759	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(chronology);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth(chronology);	  iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	208	None	replace
2760	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(priority);  [CE]  cannot  find  symbol  priority  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(priority);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth(priority);	  iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  priority	208	None	replace
2761	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(true);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonth(true);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonth(true);	  iLeapMonth    =    iChronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol	208	None	replace
2762	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(true,  MIN);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(true,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(true,  MIN);	  iChronology    =    chronology.getInstance(true);    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
2763	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(true,  true);  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(true,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(true,  true);	  iChronology    =    chronology.getInstance(true);    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
2764	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  new  BasicChronology[]  {  this  }  );  [CE]  incompatible  types  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  new  BasicChronology[]  {  this  }  );  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this,  new  BasicChronology[]  {  this  }  );	  iChronology    =    chronology.getBasicChronology(this);    	non-compiled	[CE]  incompatible  types	327	None	replace
2765	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  new  BasicChronology(DateTimeFieldType.dayOfMonth()));  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  new  BasicChronology(DateTimeFieldType.dayOfMonth()));  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this,  new  BasicChronology(DateTimeFieldType.dayOfMonth()));	  iChronology    =    chronology.getBasicChronology(this);    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	327	None	replace
2766	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  MIN);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this,  MIN);	  iChronology    =    chronology.getBasicChronology(this);    	non-compiled	[CE]  cannot  find  symbol	327	None	replace
2767	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  new  BasicChronology[]  {  null  }  );  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  new  BasicChronology[]  {  null  }  );  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this,  new  BasicChronology[]  {  null  }  );	  iChronology    =    chronology.getBasicChronology(this);    	non-compiled	[CE]  cannot  find  symbol	327	None	replace
2768	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  new  BasicChronology(chronology));  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  new  BasicChronology(chronology));  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this,  new  BasicChronology(chronology));	  iChronology    =    chronology.getBasicChronology(this);    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	327	None	replace
2769	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonthOfYear()  *  leapMonth;  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonthOfYear()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonthOfYear()  *  leapMonth;	  int    iLeapMonth    =    chronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol	279	None	replace
2770	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonthOfYear(secondMonth);  [CE]  cannot  find  symbol  secondMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonthOfYear(secondMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonthOfYear(secondMonth);	  int    iLeapMonth    =    chronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  secondMonth	279	None	replace
2771	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  null,  chronology);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  null,  chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  null,  chronology);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    null);    	non-compiled	[CE]  cannot  find  symbol	195	None	replace
2772	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  new  BasicChronology(chronology.dayOfMonth()));  [CE]  BasicChronology  is  abstract;  cannot  be  instantiated  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  new  BasicChronology(chronology.dayOfMonth()));  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  new  BasicChronology(chronology.dayOfMonth()));	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    null);    	non-compiled	[CE]  BasicChronology  is  abstract;  cannot  be  instantiated	195	None	replace
2773	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  null,  chronology.getMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  null,  chronology.getMillisPerMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  null,  chronology.getMillisPerMonth());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    null);    	non-compiled	[CE]  cannot  find  symbol	195	None	replace
2774	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth  +  chronology.dayOfMonth.getLeapMonth();  [CE]  cannot  find  symbol  dayOfMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth  +  chronology.dayOfMonth.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth  +  chronology.dayOfMonth.getLeapMonth();	  iLeapMonth    =    leapMonth    +    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	293	None	replace
2775	[BUG]  [BUGGY]  Integer  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth;  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth;	  int    iLeapMonth    =    iChronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
2776	[BUG]  [BUGGY]  Int  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Int  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Int  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth;	  int    iLeapMonth    =    iChronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
2777	[BUG]  [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth()  *  1;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  chronology.getDayOfMonth()  *  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  chronology.getDayOfMonth()  *  1;	  int    leapMonth    =    iChronology.getDayOfMonth()    -    1;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	86	None	replace
2778	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  -  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  -  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  -  1;	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	244	None	replace
2779	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth();	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	244	None	replace
2780	[BUG]  [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BaseChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  1;	  BaseChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	244	None	replace
2781	[BUG]  [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth()  *  DateTimeFieldType.dayOfMonth();  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth()  *  DateTimeFieldType.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iField  =  DateTimeFieldType.dayOfMonth()  *  DateTimeFieldType.dayOfMonth();	  int    iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	91	None	replace
2782	[BUG]  [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth();  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iField  =  DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth();	  int    iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  ';'  expected	91	None	replace
2783	[BUG]  [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth(),  chronology.getMonthOfYear();  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iField  =  DateTimeFieldType.dayOfMonth(),  chronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iField  =  DateTimeFieldType.dayOfMonth(),  chronology.getMonthOfYear();	  int    iField    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  ';'  expected	91	None	replace
2784	[BUG]  [BUGGY]  int  min  =  getMinYear();  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  getMinYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  getMinYear();	  int    min    =    dataArea.getMinYear();    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
2785	[BUG]  [BUGGY]  iLeapMonth  =  iChronology  +  leapMonth,  chronology.getLeapMonth();  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology  +  leapMonth,  chronology.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology  +  leapMonth,  chronology.getLeapMonth();	  iLeapMonth    =    leapMonth    +    iChronology.getLeapMonth();    	non-compiled	[CE]  ';'  expected	5	None	replace
2786	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iChronology,  MIN);  [CE]  no  suitable  method  found  for  withUTC(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(iChronology,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iChronology,  MIN);	  iChronology    =    chronology.withUTC(iChronology);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(BasicChronology,int)	203	None	replace
2787	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this,  MIN);  [CE]  no  suitable  method  found  for  withUTC(BasicMonthOfYearDateTimeField,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this,  MIN);	  iChronology    =    chronology.withUTC(iChronology);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(BasicMonthOfYearDateTimeField,int)	203	None	replace
2788	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(iChronology,  1);  [CE]  no  suitable  method  found  for  withUTC(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(iChronology,  1);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(iChronology,  1);	  iChronology    =    chronology.withUTC(iChronology);    	non-compiled	[CE]  no  suitable  method  found  for  withUTC(BasicChronology,int)	203	None	replace
2789	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(0,  leapMonth);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth(0,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth(0,  leapMonth);	  int    leapMonth    =    iChronology.getDayOfMonth(true);    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	239	None	replace
2790	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth,  null);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth()  -  leapMonth,  null);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth()    -    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	144	None	replace
2791	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this,  intervallogy.millisOfDay());  [CE]  cannot  find  symbol  intervallogy  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this,  intervallogy.millisOfDay());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this,  intervallogy.millisOfDay());	  iChronology    =    chronology.getChronology(this.millisOfDay());    	non-compiled	[CE]  cannot  find  symbol  intervallogy	266	None	replace
2792	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this,  dataArea.millisOfDay());  [CE]  cannot  find  symbol  dataArea  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this,  dataArea.millisOfDay());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this,  dataArea.millisOfDay());	  iChronology    =    chronology.getChronology(this.millisOfDay());    	non-compiled	[CE]  cannot  find  symbol  dataArea	266	None	replace
2793	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this,  new  Integer(this.millisOfDay()));  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this,  new  Integer(this.millisOfDay()));  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this,  new  Integer(this.millisOfDay()));	  iChronology    =    chronology.getChronology(this.millisOfDay());    	non-compiled	[CE]  cannot  find  symbol	266	None	replace
2794	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this,  new  MonthOfYear(this.millisOfDay()));  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this,  new  MonthOfYear(this.millisOfDay()));  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this,  new  MonthOfYear(this.millisOfDay()));	  iChronology    =    chronology.getChronology(this.millisOfDay());    	non-compiled	[CE]  cannot  find  symbol	266	None	replace
2795	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this,  the.millisOfDay());  [CE]  cannot  find  symbol  the  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this,  the.millisOfDay());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this,  the.millisOfDay());	  iChronology    =    chronology.getChronology(this.millisOfDay());    	non-compiled	[CE]  cannot  find  symbol  the	266	None	replace
2796	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this,  new  MonthOfYear());  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this,  new  MonthOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this,  new  MonthOfYear());	  iChronology    =    chronology.getChronology(this.millisOfDay());    	non-compiled	[CE]  cannot  find  symbol	266	None	replace
2797	[BUG]  [BUGGY]  iLeapMonth  =  Math.max(iChronology.dayOfMonth,  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  Math.max(iChronology.dayOfMonth,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  Math.max(iChronology.dayOfMonth,  leapMonth);	  iLeapMonth    =    iChronology.dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	209	None	replace
2798	[BUG]  [BUGGY]  iLeapMonth  =  chronology.dayOfMonth;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  chronology.dayOfMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  chronology.dayOfMonth;	  iLeapMonth    =    iChronology.dayOfMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	209	None	replace
2799	[BUG]  [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth();  }  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	292	None	replace
2800	[BUG]  [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth();  }  else  {  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth();  }  else  {  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth();  }  else  {	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  illegal  start  of  expression	292	None	replace
2801	[BUG]  [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth();  }  else  {  i  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth();  }  else  {  i  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth();  }  else  {  i	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  illegal  start  of  expression	292	None	replace
2802	[BUG]  [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth();  }  else  {  throw  new  IllegalFieldValueException( "Date  [CE]  unclosed  string  literal  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth();  }  else  {  throw  new  IllegalFieldValueException( "Date  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth();  }  else  {  throw  new  IllegalFieldValueException( "Date	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  unclosed  string  literal	292	None	replace
2803	[BUG]  [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withoutUTC();  iLeapMonth  =  chronology.getLeapMonth();  }  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withoutUTC();  iLeapMonth  =  chronology.getLeapMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withoutUTC();  iLeapMonth  =  chronology.getLeapMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	292	None	replace
2804	[BUG]  [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth()  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth()	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  ';'  expected	292	None	replace
2805	[BUG]  [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth();  }  else  {  int  leapMonth  =  [CE]  illegal  start  of  expression  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth();  }  else  {  int  leapMonth  =  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth();  }  else  {  int  leapMonth  =	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  illegal  start  of  expression	292	None	replace
2806	[BUG]  [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  }  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	292	None	replace
2807	[BUG]  [BUGGY]  Integer  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;	  int    iLeapMonth    =    iChronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
2808	[BUG]  [BUGGY]  iMonth  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  [CE]  cannot  find  symbol  iMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getdayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMonth	46	None	replace
2809	[BUG]  [BUGGY]  iMonth  =  iChronology.getDayOfMonth();  [CE]  cannot  find  symbol  iMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  iChronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  iChronology.getDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getdayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMonth	46	None	replace
2810	[BUG]  [BUGGY]  iMonth  =  DateTimeUtils.getChronology(chronology).getdayOfMonth();  [CE]  cannot  find  symbol  iMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  DateTimeUtils.getChronology(chronology).getdayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  DateTimeUtils.getChronology(chronology).getdayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getdayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMonth	46	None	replace
2811	[BUG]  [BUGGY]  iMonth  =  DateTimeUtils.getChronology(chronology);  [CE]  cannot  find  symbol  iMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  DateTimeUtils.getChronology(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  DateTimeUtils.getChronology(chronology);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getdayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMonth	46	None	replace
2812	[BUG]  [BUGGY]  int  iLeapMonth  =  (this.iChronology!=  null?  this.iChronology.getLeapMonth()  :  leapMonth);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  (this.iChronology!=  null?  this.iChronology.getLeapMonth()  :  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  (this.iChronology!=  null?  this.iChronology.getLeapMonth()  :  leapMonth);	  int    iLeapMonth    =    this.iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	289	None	replace
2813	[BUG]  [BUGGY]  int  iLeapMonth  =(this.iChronology!=  null)?  this.iChronology.getLeapMonth()  :  leapMonth;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =(this.iChronology!=  null)?  this.iChronology.getLeapMonth()  :  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =(this.iChronology!=  null)?  this.iChronology.getLeapMonth()  :  leapMonth;	  int    iLeapMonth    =    this.iChronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol	289	None	replace
2814	[BUG]  [BUGGY]  int  iLeapMonth  =  (this.iChronology!=  null?  this.iChronology.getLeapMonth()  :  leapMonth;  [CE]  ')'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  (this.iChronology!=  null?  this.iChronology.getLeapMonth()  :  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  (this.iChronology!=  null?  this.iChronology.getLeapMonth()  :  leapMonth;	  int    iLeapMonth    =    this.iChronology.getLeapMonth();    	non-compiled	[CE]  ')'  expected	289	None	replace
2815	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iChronology)?  chronology.getChronology(iChronology):  chronology.getChronology();  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iChronology)?  chronology.getChronology(iChronology):  chronology.getChronology();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iChronology)?  chronology.getChronology(iChronology):  chronology.getChronology();	  iChronology    =    chronology.getChronology(iChronology).getChronology();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
2816	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(iChronology)?  chronology.getChronology(chronology):  chronology.getChronology();  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(iChronology)?  chronology.getChronology(chronology):  chronology.getChronology();  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(iChronology)?  chronology.getChronology(chronology):  chronology.getChronology();	  iChronology    =    chronology.getChronology(iChronology).getChronology();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
2817	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth);  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth);	  int    iLeapMonth    =    chronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  ';'  expected	124	None	replace
2818	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth();  }  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	67	None	replace
2819	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth();  }  else  {  iMin  =  chronology.getMinDayOfMonth();  }  [CE]  cannot  find  symbol  iMin  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth();  }  else  {  iMin  =  chronology.getMinDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth();  }  else  {  iMin  =  chronology.getMinDayOfMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	67	None	replace
2820	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth();  }  else  {  iMin  =  chronology.getMinDayOfMonth()  +  1;  }  [CE]  cannot  find  symbol  iMin  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth();  }  else  {  iMin  =  chronology.getMinDayOfMonth()  +  1;  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth();  }  else  {  iMin  =  chronology.getMinDayOfMonth()  +  1;  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	67	None	replace
2821	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth();  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  [CE]  illegal  start  of  expression  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth();  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth();  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
2822	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth();  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CE]  cannot  find  symbol  iMin  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth();  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth();  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	67	None	replace
2823	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth();  }  else  {  iMin  =  chronology.getMinDayOfMonth()  +  leapMonth;  }  [CE]  cannot  find  symbol  iMin  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth();  }  else  {  iMin  =  chronology.getMinDayOfMonth()  +  leapMonth;  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth();  }  else  {  iMin  =  chronology.getMinDayOfMonth()  +  leapMonth;  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMin	67	None	replace
2824	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.dayOfMonth  [CE]  ')'  expected  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.dayOfMonth  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinDayOfMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.dayOfMonth	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinDayOfMonth();    	non-compiled	[CE]  ')'  expected	67	None	replace
2825	[BUG]  [BUGGY]  int  iLeapMonth  =  (this.chronology!=  null?  this.chronology.getLeapMonth()  :  leapMonth);  [CE]  cannot  find  symbol  chronology  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  (this.chronology!=  null?  this.chronology.getLeapMonth()  :  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  (this.chronology!=  null?  this.chronology.getLeapMonth()  :  leapMonth);	  int    iLeapMonth    =    this.chronology.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  chronology	125	None	replace
2826	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  dayOfMonth);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  dayOfMonth);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	297	None	replace
2827	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  jumpMonth);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  jumpMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  jumpMonth);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	297	None	replace
2828	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  30);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  30);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  30);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	297	None	replace
2829	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.MIN_VALUE);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.MIN_VALUE);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.MIN_VALUE);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	297	None	replace
2830	[BUG]  [BUGGY]  iLeapMonth  =  hiChronology.getLeapMonth()  +  leapMonth;  [CE]  cannot  find  symbol  hiChronology  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  hiChronology.getLeapMonth()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  hiChronology.getLeapMonth()  +  leapMonth;	  iLeapMonth    =    iChronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  hiChronology	1	None	replace
2831	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  timeZone);  [CE]  cannot  find  symbol  timeZone  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  timeZone);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  timeZone);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    pointOfMonth);    	non-compiled	[CE]  cannot  find  symbol  timeZone	303	None	replace
2832	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  plungeMonth);  [CE]  cannot  find  symbol  plungeMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  plungeMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),  plungeMonth);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth(),    pointOfMonth);    	non-compiled	[CE]  cannot  find  symbol  plungeMonth	303	None	replace
2833	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	43	None	replace
2834	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	43	None	replace
2835	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  else  {  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  else  {  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  else  {  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	43	None	replace
2836	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    +    leapMonth;    	non-compiled	[CE]  ';'  expected	43	None	replace
2837	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  [CE]  illegal  start  of  expression  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    +    leapMonth;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
2838	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  else  {  iMonth  =  chronology.getMonthOfYear()  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  else  {  iMonth  =  chronology.getMonthOfYear()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  else  {  iMonth  =  chronology.getMonthOfYear()	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    +    leapMonth;    	non-compiled	[CE]  ';'  expected	43	None	replace
2839	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  else  {  iMax  =  chronology.getMinYear();  iLeapMonth  =  leapMonth;  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  else  {  iMax  =  chronology.getMinYear();  iLeapMonth  =  leapMonth;  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  else  {  iMax  =  chronology.getMinYear();  iLeapMonth  =  leapMonth;  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	43	None	replace
2840	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  else  {  iMonth  =  chronology.getMonthOfYear()  +  leapMonth  [CE]  ';'  expected  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  else  {  iMonth  =  chronology.getMonthOfYear()  +  leapMonth  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  chronology.getMonthOfYear()  +  leapMonth;  }  else  {  iMonth  =  chronology.getMonthOfYear()  +  leapMonth	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    +    leapMonth;    	non-compiled	[CE]  ';'  expected	43	None	replace
2841	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  *  MIN;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  *  MIN;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  *  MIN;	  iChronology    =    chronology.dayOfMonth()    *    leapMonth;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	112	None	replace
2842	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  iChronology);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(DateTimeZone.UTC,  iChronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(DateTimeZone.UTC,  iChronology);	  iChronology    =    chronology.getChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	27	None	replace
2843	[BUG]  [BUGGY]  iMonth  =  chronology.getMillisOfYear();  [CE]  cannot  find  symbol  iMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMillisOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMillisOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN);    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iMonth	270	None	replace
2844	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth,  MIN);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth,  MIN);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()  +  leapMonth,  MIN);	  iChronology    =    chronology.getDateTimeField(DateTimeFieldType.dayOfMonth()    +    leapMonth);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	69	None	replace
2845	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(true,  null);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(true,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(true,  null);	  iChronology    =    chronology.getBasicChronology(true);    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
2846	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(true,  false);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(true,  false);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(true,  false);	  iChronology    =    chronology.getBasicChronology(true);    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
2847	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(true,  true);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(true,  true);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(true,  true);	  iChronology    =    chronology.getBasicChronology(true);    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
2848	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getMinYear();  iMin  =  chronology.getMinYear()  +  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getMinYear();  iMin  =  chronology.getMinYear()  +  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getMinYear();  iMin  =  chronology.getMinYear()  +  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	62	None	replace
2849	[BUG]  [BUGGY]  iLeapMonth  =  chronology.getLeapMonth()  *  Math.max(iLeapMonth,  leapMonth);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  chronology.getLeapMonth()  *  Math.max(iLeapMonth,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  chronology.getLeapMonth()  *  Math.max(iLeapMonth,  leapMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
2850	[BUG]  [BUGGY]  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth  +  1;  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth  +  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
2851	[BUG]  [BUGGY]  iLeapMonth  =  chronology.getLeapMonth()  *  Math.min(iMax,  leapMonth);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  chronology.getLeapMonth()  *  Math.min(iMax,  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  chronology.getLeapMonth()  *  Math.min(iMax,  leapMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth()    *    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
2852	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth  *  Math.max(iChronology.getDayOfMonth());  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth  *  Math.max(iChronology.getDayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  +  leapMonth  *  Math.max(iChronology.getDayOfMonth());	  iChronology    =    chronology.withUTC()    +    leapMonth;    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	52	None	replace
2853	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth,  iMax;  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth,  iMax;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  +  leapMonth,  iMax;	  iChronology    =    chronology.withUTC()    +    leapMonth;    	non-compiled	[CE]  ';'  expected	52	None	replace
2854	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth,  iHeapMonth;  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()  +  leapMonth,  iHeapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()  +  leapMonth,  iHeapMonth;	  iChronology    =    chronology.withUTC()    +    leapMonth;    	non-compiled	[CE]  ';'  expected	52	None	replace
2855	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  this.chronology);  [CE]  cannot  find  symbol  chronology  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this,  this.chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this,  this.chronology);	  iChronology    =    chronology.getBasicChronology(this.chronology);    	non-compiled	[CE]  cannot  find  symbol  chronology	328	None	replace
2856	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(this.chronology,  null);  [CE]  cannot  find  symbol  chronology  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(this.chronology,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(this.chronology,  null);	  iChronology    =    chronology.getBasicChronology(this.chronology);    	non-compiled	[CE]  cannot  find  symbol  chronology	328	None	replace
2857	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this,.millisOfDay());  [CE]  illegal  start  of  expression  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this,.millisOfDay());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this,.millisOfDay());	  iChronology    =    chronology.getInstance(this.millisOfDay());    	non-compiled	[CE]  illegal  start  of  expression	259	None	replace
2858	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this,  intervallogy.millisOfDay());  [CE]  cannot  find  symbol  intervallogy  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this,  intervallogy.millisOfDay());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this,  intervallogy.millisOfDay());	  iChronology    =    chronology.getInstance(this.millisOfDay());    	non-compiled	[CE]  cannot  find  symbol  intervallogy	259	None	replace
2859	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(this,  dataArea.millisOfDay());  [CE]  cannot  find  symbol  dataArea  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(this,  dataArea.millisOfDay());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(this,  dataArea.millisOfDay());	  iChronology    =    chronology.getInstance(this.millisOfDay());    	non-compiled	[CE]  cannot  find  symbol  dataArea	259	None	replace
2860	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  *  2);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  *  2);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth  *  2);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth    +    1);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	168	None	replace
2861	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN_MONTH);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN_MONTH);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN_MONTH);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	177	None	replace
2862	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  1);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN,  1);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    MIN);    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	177	None	replace
2863	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  hourMonth);  [CE]  cannot  find  symbol  hourMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  hourMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  hourMonth);	  iChronology    =    chronology.getInstance(DateTimeUtils.currentTimeMillis());    	non-compiled	[CE]  cannot  find  symbol  hourMonth	298	None	replace
2864	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  minute);  [CE]  cannot  find  symbol  minute  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  minute);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  minute);	  iChronology    =    chronology.getInstance(DateTimeUtils.currentTimeMillis());    	non-compiled	[CE]  cannot  find  symbol  minute	298	None	replace
2865	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  seconds);  [CE]  cannot  find  symbol  seconds  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  seconds);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  seconds);	  iChronology    =    chronology.getInstance(DateTimeUtils.currentTimeMillis());    	non-compiled	[CE]  cannot  find  symbol  seconds	298	None	replace
2866	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  minuteMonth);  [CE]  cannot  find  symbol  minuteMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  minuteMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeUtils.currentTimeMillis(),  minuteMonth);	  iChronology    =    chronology.getInstance(DateTimeUtils.currentTimeMillis());    	non-compiled	[CE]  cannot  find  symbol  minuteMonth	298	None	replace
2867	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth  +  leapMonth);  [CE]  ';'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth  +  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth  +  leapMonth);	  iChronology    =    chronology.dayOfMonth    +    leapMonth;    	non-compiled	[CE]  ';'  expected	35	None	replace
2868	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth  +  leapMonths;  [CE]  cannot  find  symbol  dayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth  +  leapMonths;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth  +  leapMonths;	  iChronology    =    chronology.dayOfMonth    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	35	None	replace
2869	[BUG]  [BUGGY]  int  iLeapMonth  =  pointOfMonth.getLeapMonth();  [CE]  cannot  find  symbol  pointOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  pointOfMonth.getLeapMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  pointOfMonth.getLeapMonth();	  int    iLeapMonth    =    iFieldType.getLeapMonth();    	non-compiled	[CE]  cannot  find  symbol  pointOfMonth	181	None	replace
2870	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(false,  dataArea);  [CE]  cannot  find  symbol  dataArea  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(false,  dataArea);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(false,  dataArea);	  iChronology    =    chronology.getBasicChronology(false);    	non-compiled	[CE]  cannot  find  symbol  dataArea	226	None	replace
2871	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  +  leapMonth  *  DateTimeConstants.MILLIS_PER_DAY;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  +  leapMonth  *  DateTimeConstants.MILLIS_PER_DAY;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth()  +  leapMonth  *  DateTimeConstants.MILLIS_PER_DAY;	  int    leapMonth    =    iChronology.getDayOfMonth()    +    leapMonth;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	83	None	replace
2872	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  +  leapMonth  *  DateTimeConstants.MILLIS_PER_MONTH;  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getDayOfMonth()  +  leapMonth  *  DateTimeConstants.MILLIS_PER_MONTH;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getDayOfMonth()  +  leapMonth  *  DateTimeConstants.MILLIS_PER_MONTH;	  int    leapMonth    =    iChronology.getDayOfMonth()    +    leapMonth;    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	83	None	replace
2873	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(null,  this);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(null,  this);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(null,  this);	  iChronology    =    chronology.getChronology(null);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
2874	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth),  chronology  [CE]  ';'  expected  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth),  chronology  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMonth),  chronology	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth)    	non-compiled	[CE]  ';'  expected	102	None	replace
2875	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth  *  MIN;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth  *  MIN;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth  *  MIN;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	132	None	replace
2876	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth  /  10;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth  /  10;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth  /  10;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    +    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	132	None	replace
2877	[BUG]  [BUGGY]  int  iMonth  =  chronology.getMonthOfYear(chronology);  [CE]  no  suitable  method  found  for  getMonthOfYear(BasicChronology)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMonth  =  chronology.getMonthOfYear(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMonth  =  chronology.getMonthOfYear(chronology);	  int    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(BasicChronology)	269	None	replace
2878	[BUG]  [BUGGY]  int  min  =  interval.getMaxYear();  [CE]  cannot  find  symbol  interval  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  interval.getMaxYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  interval.getMaxYear();	  int    min    =    iChronology.getMaxYear();    	non-compiled	[CE]  cannot  find  symbol  interval	123	None	replace
2879	[BUG]  [BUGGY]  iMonth  =  chronology.dayOfMonth();  this.chronology  =  DateTimeUtils.getChronology(chronology);  [CE]  cannot  find  symbol  iMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.dayOfMonth();  this.chronology  =  DateTimeUtils.getChronology(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.dayOfMonth();  this.chronology  =  DateTimeUtils.getChronology(chronology);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMonth	45	None	replace
2880	[BUG]  [BUGGY]  int  iMonth  =  chronology.dayOfMonth();  [CE]  incompatible  types  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMonth  =  chronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMonth  =  chronology.dayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  incompatible  types	45	None	replace
2881	[BUG]  [BUGGY]  iMonth  =  iChronology.dayOfMonth();  [CE]  cannot  find  symbol  iMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  iChronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  iChronology.dayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMonth	45	None	replace
2882	[BUG]  [BUGGY]  iMonth  =  this.chronology.dayOfMonth();  [CE]  cannot  find  symbol  iMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  this.chronology.dayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  this.chronology.dayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMonth	45	None	replace
2883	[BUG]  [BUGGY]  iMonth  =  DateTimeUtils.getDayOfMonth(chronology);  [CE]  cannot  find  symbol  iMonth  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  DateTimeUtils.getDayOfMonth(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  DateTimeUtils.getDayOfMonth(chronology);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMonth	45	None	replace
2884	[BUG]  [BUGGY]  iMonth  =  DateTimeUtils.getChronology(chronology.dayOfMonth());  [CE]  cannot  find  symbol  iMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  DateTimeUtils.getChronology(chronology.dayOfMonth());  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  DateTimeUtils.getChronology(chronology.dayOfMonth());	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iMonth	45	None	replace
2885	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth,  0,  leapMonth);  [CE]  ';'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth,  0,  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth,  0,  leapMonth);	  iChronology    =    chronology.dayOfMonth,    leapMonth);    	non-compiled	[CE]  ';'  expected	294	None	replace
2886	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth,  leapMonth)+  1;  [CE]  ';'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth,  leapMonth)+  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth,  leapMonth)+  1;	  iChronology    =    chronology.dayOfMonth,    leapMonth);    	non-compiled	[CE]  ';'  expected	294	None	replace
2887	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.weekMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.weekMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  this.weekMonth);	  iChronology    =    chronology.getChronology(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	29	None	replace
2888	[BUG]  [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.year);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getChronology(this.dayOfMonth,  this.year);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getChronology(this.dayOfMonth,  this.year);	  iChronology    =    chronology.getChronology(this.dayOfMonth,    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	29	None	replace
2889	[BUG]  [BUGGY]  int  leapMonth  =  iChronology.getYearMonth(chronology);  [CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  leapMonth  =  iChronology.getYearMonth(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  leapMonth  =  iChronology.getYearMonth(chronology);	  int    leapMonth    =    iChronology.getYearMonth();    	non-compiled	[CE]  variable  leapMonth  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	238	None	replace
2890	[BUG]  [BUGGY]  Integer  iLeapMonth  =  chronology.getWeeksInYearMonth();  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iLeapMonth  =  chronology.getWeeksInYearMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iLeapMonth  =  chronology.getWeeksInYearMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getWeeksInYearMonth();    	non-compiled	[CE]  cannot  find  symbol	236	None	replace
2891	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  1,  leapMonth;  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  1,  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  -  1,  leapMonth;	  iChronology    =    chronology.dayOfMonth(),    leapMonth;    	non-compiled	[CE]  ';'  expected	111	None	replace
2892	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth  *  MIN;  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth(),  leapMonth  *  MIN;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth(),  leapMonth  *  MIN;	  iChronology    =    chronology.dayOfMonth(),    leapMonth;    	non-compiled	[CE]  ';'  expected	111	None	replace
2893	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMONTH);  [CE]  cannot  find  symbol  leapMONTH  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMONTH);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  leapMONTH);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    jumpMonth);    	non-compiled	[CE]  cannot  find  symbol  leapMONTH	193	None	replace
2894	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth,  iLeapMonth;  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth,  iLeapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  -  leapMonth,  iLeapMonth;	  iChronology    =    chronology.dayOfMonth()    -    leapMonth;    	non-compiled	[CE]  ';'  expected	113	None	replace
2895	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth,  MIN  -  leapMonth;  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth,  MIN  -  leapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  -  leapMonth,  MIN  -  leapMonth;	  iChronology    =    chronology.dayOfMonth()    -    leapMonth;    	non-compiled	[CE]  ';'  expected	113	None	replace
2896	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth,  iLeapMonth);  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth,  iLeapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  -  leapMonth,  iLeapMonth);	  iChronology    =    chronology.dayOfMonth()    -    leapMonth;    	non-compiled	[CE]  ';'  expected	113	None	replace
2897	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth,  MIN;  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth,  MIN;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  -  leapMonth,  MIN;	  iChronology    =    chronology.dayOfMonth()    -    leapMonth;    	non-compiled	[CE]  ';'  expected	113	None	replace
2898	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth,  iHeapMonth;  [CE]  ';'  expected  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  -  leapMonth,  iHeapMonth;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  -  leapMonth,  iHeapMonth;	  iChronology    =    chronology.dayOfMonth()    -    leapMonth;    	non-compiled	[CE]  ';'  expected	113	None	replace
2899	[BUG]  [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	234	None	replace
2900	[BUG]  [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  iDayOfMonth  =  chronology.dayOfMonth()  [CE]  ';'  expected  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  iDayOfMonth  =  chronology.dayOfMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  iDayOfMonth  =  chronology.dayOfMonth()	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  ';'  expected	234	None	replace
2901	[BUG]  [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  chronology.dayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	234	None	replace
2902	[BUG]  [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  iDayOfMonth  =  chronology.dayOfMonth  [CE]  ';'  expected  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  iDayOfMonth  =  chronology.dayOfMonth  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iDayOfMonth  =  chronology.dayOfMonth();  }  else  {  iDayOfMonth  =  chronology.dayOfMonth	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iDayOfMonth    =    chronology.dayOfMonth();    	non-compiled	[CE]  ';'  expected	234	None	replace
2903	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(iHeader);  [CE]  cannot  find  symbol  iHeader  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(iHeader);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(iHeader);	  iChronology    =    chronology.withBasicChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol  iHeader	19	None	replace
2904	[BUG]  [BUGGY]  iChronology  =  chronology.withBasicChronology(iChronology,  null);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withBasicChronology(iChronology,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withBasicChronology(iChronology,  null);	  iChronology    =    chronology.withBasicChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
2905	[BUG]  [BUGGY]  iMonth  =  chronology.getMonthOfYear(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  iMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMonthOfYear(DateTimeFieldType.dayOfMonth());  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonthOfYear(DateTimeFieldType.dayOfMonth());	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfDay();    	non-compiled	[CE]  cannot  find  symbol  iMonth	44	None	replace
2906	[BUG]  [BUGGY]  iMonth  =  chronology.getMonthOfYear(DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  iMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMonthOfYear(DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonthOfYear(DateTimeFieldType.dayOfMonth(),  leapMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfDay();    	non-compiled	[CE]  cannot  find  symbol  iMonth	44	None	replace
2907	[BUG]  [BUGGY]  int  iMonth  =  chronology.getMonthOfDay();  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMonth  =  chronology.getMonthOfDay();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMonth  =  chronology.getMonthOfDay();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfDay();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
2908	[BUG]  [BUGGY]  iMonth  =  chronology.getMonthOfYear(DateTimeFieldType.dayOfMonth);  [CE]  cannot  find  symbol  iMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMonthOfYear(DateTimeFieldType.dayOfMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonthOfYear(DateTimeFieldType.dayOfMonth);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfDay();    	non-compiled	[CE]  cannot  find  symbol  iMonth	44	None	replace
2909	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(secondMonth);  [CE]  incompatible  types  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(secondMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(secondMonth);	  iChronology    =    chronology.withUTC()?    null    :    chronology.withUTC();    	non-compiled	[CE]  incompatible  types	50	None	replace
2910	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(this);  [CE]  incompatible  types  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(this);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC()?  null  :  chronology.withUTC(this);	  iChronology    =    chronology.withUTC()?    null    :    chronology.withUTC();    	non-compiled	[CE]  incompatible  types	50	None	replace
2911	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getStandardZone());  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getStandardZone());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getStandardZone());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getZone());    	non-compiled	[CE]  cannot  find  symbol	306	None	replace
2912	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  dataContext.getZone());  [CE]  cannot  find  symbol  dataContext  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  dataContext.getZone());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  dataContext.getZone());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getZone());    	non-compiled	[CE]  cannot  find  symbol  dataContext	306	None	replace
2913	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getRawZone());  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getRawZone());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getRawZone());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getZone());    	non-compiled	[CE]  cannot  find  symbol	306	None	replace
2914	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getSecondOfMinute());  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getSecondOfMinute());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getSecondOfMinute());	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    timeZone.getZone());    	non-compiled	[CE]  cannot  find  symbol	306	None	replace
2915	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastMonth()  +  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLastMonth()  +  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLastMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	235	None	replace
2916	[BUG]  [BUGGY]  Integer  iLeapMonth  =  chronology.getLastMonth();  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iLeapMonth  =  chronology.getLastMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iLeapMonth  =  chronology.getLastMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLastMonth();    	non-compiled	[CE]  cannot  find  symbol	235	None	replace
2917	[BUG]  [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  }  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
2918	[BUG]  [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth;  }  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth;  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth;  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
2919	[BUG]  [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  }  else  {  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  }  else  {  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  }  else  {	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
2920	[BUG]  [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getLeapMonth();  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  }  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getLeapMonth();  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).getLeapMonth();  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
2921	[BUG]  [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  }  else  {  throw  new  IllegalFieldValueException( "Date  [CE]  unclosed  string  literal  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  }  else  {  throw  new  IllegalFieldValueException( "Date  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  }  else  {  throw  new  IllegalFieldValueException( "Date	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  unclosed  string  literal	159	None	replace
2922	[BUG]  [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth();  }  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iLeapMonth!=  chronology.getLeapMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getLeapMonth()    +    leapMonth;    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
2923	[BUG]  [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth,  this.year);  [CE]  cannot  find  symbol  dayOfMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.withUTC(this.dayOfMonth,  this.year);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.withUTC(this.dayOfMonth,  this.year);	  iChronology    =    chronology.withUTC(this.dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	201	None	replace
2924	[BUG]  [BUGGY]  int  dayOfMonth  =  chronology.getDayOfMonth();  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  dayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  dayOfMonth  =  chronology.getDayOfMonth();	  iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	9	None	replace
2925	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMaxYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	66	None	replace
2926	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  iMin  =  chronology.getMinYear();  }  [CE]  cannot  find  symbol  iMin  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  iMin  =  chronology.getMinYear();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  iMin  =  chronology.getMinYear();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMaxYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	66	None	replace
2927	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  iMin  =  chronology.getMinYear();  iMax  =  chronology.getAverageMillisPerMonth()  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  iMin  =  chronology.getMinYear();  iMax  =  chronology.getAverageMillisPerMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  iMin  =  chronology.getMinYear();  iMax  =  chronology.getAverageMillisPerMonth()	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMaxYear();    	non-compiled	[CE]  ';'  expected	66	None	replace
2928	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  iMin  =  chronology.getMinYear();  iMax  =  chronology.getMaxMonth()  [CE]  ';'  expected  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  iMin  =  chronology.getMinYear();  iMax  =  chronology.getMaxMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  iMin  =  chronology.getMinYear();  iMax  =  chronology.getMaxMonth()	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMaxYear();    	non-compiled	[CE]  ';'  expected	66	None	replace
2929	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  iMin  =  chronology.getMinYear();  iMax  =  chronology.getMaxYear()  [CE]  ';'  expected  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  iMin  =  chronology.getMinYear();  iMax  =  chronology.getMaxYear()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  iMin  =  chronology.getMinYear();  iMax  =  chronology.getMaxYear()	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMaxYear();    	non-compiled	[CE]  ';'  expected	66	None	replace
2930	[BUG]  [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  iMin  =  chronology.getMonthOfYear();  }  [CE]  cannot  find  symbol  iMin  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  iMin  =  chronology.getMonthOfYear();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iMin  ==  0)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  }  else  {  iMin  =  chronology.getMonthOfYear();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMaxYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	66	None	replace
2931	[BUG]  [BUGGY]  iChronology  =  chronology.findDateTimeField(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.findDateTimeField(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.findDateTimeField(DateTimeFieldType.dayOfMonth());	  iChronology    =    iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
2932	[BUG]  [BUGGY]  iChronology  =  chronology.addDayOfMonth(DateTimeFieldType.dayOfMonth());  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.addDayOfMonth(DateTimeFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.addDayOfMonth(DateTimeFieldType.dayOfMonth());	  iChronology    =    iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
2933	[BUG]  [BUGGY]  iChronology  =  chronology.getDateTimeField(DurationFieldType.dayOfMonth());  [CE]  cannot  find  symbol  DurationFieldType  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getDateTimeField(DurationFieldType.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getDateTimeField(DurationFieldType.dayOfMonth());	  iChronology    =    iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  DurationFieldType	70	None	replace
2934	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1,  chronology.withUTC());  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1,  chronology.withUTC());  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1,  chronology.withUTC());	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	131	None	replace
2935	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  100,  leapMonth).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  100,  leapMonth).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  100,  leapMonth).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	131	None	replace
2936	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  indent).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  indent).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  indent).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	131	None	replace
2937	[BUG]  [BUGGY]  int  iMin  =  chronology.getMinYear()  +  2;  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  chronology.getMinYear()  +  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  chronology.getMinYear()  +  2;	  int    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	141	None	replace
2938	[BUG]  [BUGGY]  int  iMin  =  chronology.getMinYears();  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  chronology.getMinYears();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  chronology.getMinYears();	  int    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
2939	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  31,  31);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  31,  31);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  31,  31);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    31);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	169	None	replace
2940	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  31)+  1;  [CE]  cannot  find  symbol  DateTimeZone  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  31)+  1;  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  31)+  1;	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    31);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	169	None	replace
2941	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  33);  [CE]  cannot  find  symbol  DateTimeZone  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  33);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeZone.UTC,  leapMonth,  33);	  iChronology    =    chronology.getInstance(DateTimeZone.UTC,    leapMonth,    31);    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	169	None	replace
2942	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this).withUTC();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this).withUTC();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this).withUTC();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    false).withUTC();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	246	None	replace
2943	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfYear!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfYear());  [CE]  cannot  find  symbol  dayOfYear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfYear!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfYear!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfYear());	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth!=    null?    chronology.dayOfMonth    :    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  dayOfYear	319	None	replace
2944	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.year!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());  [CE]  cannot  find  symbol  year  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.year!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.year!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.dayOfMonth());	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth!=    null?    chronology.dayOfMonth    :    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  year	319	None	replace
2945	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.monthOfYear());  [CE]  cannot  find  symbol  dayOfMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.monthOfYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth()  ||  chronology.dayOfMonth!=  null?  chronology.dayOfMonth  :  new  BasicChronology(chronology.monthOfYear());	  iChronology    =    chronology.dayOfMonth()    ||    chronology.dayOfMonth!=    null?    chronology.dayOfMonth    :    new    BasicChronology(chronology.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	319	None	replace
2946	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(true);  [CE]  method  getMinYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear(true);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(true);	  int    min    =    iChronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  method  getMinYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	191	None	replace
2947	[BUG]  [BUGGY]  int  min  =  iChronology.getMinYear(period);  [CE]  cannot  find  symbol  period  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  min  =  iChronology.getMinYear(period);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  min  =  iChronology.getMinYear(period);	  int    min    =    iChronology.getMinYear(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  period	191	None	replace
2948	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  &  leapMonth;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  &  leapMonth;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  &  leapMonth;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC()    -    leapMonth;    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	134	None	replace
2949	[BUG]  [BUGGY]  iLeapMonth  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  DateTimeUtils.getChronology(chronology).getDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iLeapMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
2950	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	233	None	replace
2951	[BUG]  [BUGGY]  if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	233	None	replace
2952	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	233	None	replace
2953	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  illegal  start  of  expression  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	233	None	replace
2954	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  [CE]  illegal  start  of  expression  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	233	None	replace
2955	[BUG]  [BUGGY]  if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  [CE]  illegal  start  of  expression  [FE]                                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	233	None	replace
2956	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth()  [CE]  ';'  expected  [FE]                                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth()	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  ';'  expected	233	None	replace
2957	[BUG]  [BUGGY]  if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  [CE]  illegal  start  of  expression  [FE]                                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	233	None	replace
2958	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(priority);  [CE]  cannot  find  symbol  priority  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(priority);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth(priority);	  int    iLeapMonth    =    chronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  priority	280	None	replace
2959	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(min);  [CE]  cannot  find  symbol  min  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(min);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth(min);	  int    iLeapMonth    =    chronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  min	280	None	replace
2960	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(flushMonth);  [CE]  cannot  find  symbol  flushMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(flushMonth);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iLeapMonth  =  chronology.getLeapMonth(flushMonth);	  int    iLeapMonth    =    chronology.getLeapMonth(dayOfMonth);    	non-compiled	[CE]  cannot  find  symbol  flushMonth	280	None	replace
2961	[BUG]  [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  plungeMonth);  [CE]  cannot  find  symbol  plungeMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  plungeMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getInstance(DateTimeFieldType.dayOfMonth(),  plungeMonth);	  iChronology    =    chronology.getInstance(DateTimeFieldType.dayOfMonth(),    hourMonth);    	non-compiled	[CE]  cannot  find  symbol  plungeMonth	305	None	replace
2962	[BUG]  [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getMonthOfYear()  +  1;  [CE]  incompatible  types  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getMonthOfYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iChronology  =  DateTimeUtils.getChronology(chronology);  iMonth  =  iChronology.getMonthOfYear()  +  1;	  Integer    iChronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    iChronology.getMonthOfYear();    	non-compiled	[CE]  incompatible  types	262	None	replace
2963	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(iChronology).getBasicChronology(chronology);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(iChronology).getBasicChronology(chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(iChronology).getBasicChronology(chronology);	  iChronology    =    chronology.getBasicChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
2964	[BUG]  [BUGGY]  iChronology  =  chronology.getBasicChronology(iChronology,  null);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.getBasicChronology(iChronology,  null);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.getBasicChronology(iChronology,  null);	  iChronology    =    chronology.getBasicChronology(iChronology);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
2965	[BUG]  [BUGGY]  int  iMonth  =  chronology.getMonthOfYear(1);  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMonth  =  chronology.getMonthOfYear(1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMonth  =  chronology.getMonthOfYear(1);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear(1);    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	271	None	replace
2966	[BUG]  [BUGGY]  Integer  iMonth  =  chronology.getMonthOfYear(1);  [CE]  variable  iChronology  might  not  have  been  initialized  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  Integer  iMonth  =  chronology.getMonthOfYear(1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	Integer  iMonth  =  chronology.getMonthOfYear(1);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear(1);    	non-compiled	[CE]  variable  iChronology  might  not  have  been  initialized	271	None	replace
2967	[BUG]  [BUGGY]  iMonth  =  this.chronology.getMonthOfYear(1);  [CE]  cannot  find  symbol  iMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  this.chronology.getMonthOfYear(1);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  this.chronology.getMonthOfYear(1);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear(1);    	non-compiled	[CE]  cannot  find  symbol  iMonth	271	None	replace
2968	[BUG]  [BUGGY]  iMonth  =  chronology.getMonthOfYear(3);  [CE]  cannot  find  symbol  iMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMonthOfYear(3);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonthOfYear(3);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear(1);    	non-compiled	[CE]  cannot  find  symbol  iMonth	271	None	replace
2969	[BUG]  [BUGGY]  iMonth  =  chronology.getMonthOfYear(0);  [CE]  cannot  find  symbol  iMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMonthOfYear(0);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonthOfYear(0);	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear(1);    	non-compiled	[CE]  cannot  find  symbol  iMonth	271	None	replace
2970	[BUG]  [BUGGY]  iLeapMonth  =  iChronology.getLeapMonthOfYear(chronology);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  iChronology.getLeapMonthOfYear(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  iChronology.getLeapMonthOfYear(chronology);	  iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
2971	[BUG]  [BUGGY]  iLeapMonth  =  leapMonth,  chronology.getLeapMonthOfYear();  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iLeapMonth  =  leapMonth,  chronology.getLeapMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iLeapMonth  =  leapMonth,  chronology.getLeapMonthOfYear();	  iLeapMonth    =    iChronology.getLeapMonthOfYear();    	non-compiled	[CE]  ';'  expected	210	None	replace
2972	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).monthOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).monthOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).monthOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).dayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	135	None	replace
2973	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth()  +  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dayOfMonth()  +  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).dayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	135	None	replace
2974	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dateTime();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dateTime();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).dateTime();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).dayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	135	None	replace
2975	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).hourOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).hourOfMonth();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).hourOfMonth();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).dayOfMonth();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	135	None	replace
2976	[BUG]  [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth());  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth());	  iChronology    =    this.chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	146	None	replace
2977	[BUG]  [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  chronology  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());	  iChronology    =    this.chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  chronology	146	None	replace
2978	[BUG]  [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getMillisPerMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getMillisPerMonth());	  iChronology    =    this.chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
2979	[BUG]  [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology);  [CE]  cannot  find  symbol  chronology  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology);	  iChronology    =    this.chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  chronology	146	None	replace
2980	[BUG]  [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getMinuteMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getMinuteMillisPerMonth());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getMinuteMillisPerMonth());	  iChronology    =    this.chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
2981	[BUG]  [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getMinYear());  [CE]  cannot  find  symbol  chronology  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getMinYear());  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  this.chronology.getInstance(DateTimeFieldType.dayOfMonth(),  chronology.getMinYear());	  iChronology    =    this.chronology.getInstance(DateTimeFieldType.dayOfMonth());    	non-compiled	[CE]  cannot  find  symbol  chronology	146	None	replace
2982	[BUG]  [BUGGY]  iChronology  =  chronology.monthOfYear(),  dayOfMonth);  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.monthOfYear(),  dayOfMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.monthOfYear(),  dayOfMonth);	  iChronology    =    chronology.monthOfYear();    	non-compiled	[CE]  ';'  expected	37	None	replace
2983	[BUG]  [BUGGY]  int  iMin  =  chronology.getMinMonth()  +  2;  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  int  iMin  =  chronology.getMinMonth()  +  2;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	int  iMin  =  chronology.getMinMonth()  +  2;	  iMin    =    iChronology.getMinMonth()    +    2;    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
2984	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	232	None	replace
2985	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	232	None	replace
2986	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.dayOfMonth)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	232	None	replace
2987	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  [CE]  illegal  start  of  expression  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	232	None	replace
2988	[BUG]  [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  [CE]  illegal  start  of  expression  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth!=  chronology.getDayOfMonth())  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  illegal  start  of  expression	232	None	replace
2989	[BUG]  [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth()  [CE]  ';'  expected  [FE]                                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth()  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	if(iDayOfMonth  ==  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iDayOfMonth  =  chronology.getDayOfMonth();  }  else  {  iDayOfMonth  =  chronology.getDayOfMonth()	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology,    leapMonth);    iDayOfMonth    =    chronology.getDayOfMonth();    	non-compiled	[CE]  ';'  expected	232	None	replace
2990	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinInYear()  +  1;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinInYear()  +  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinInYear()  +  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinInYear();    	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	252	None	replace
2991	[BUG]  [BUGGY]  iMin  =  iChronology.getMinInYear();  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  iChronology.getMinInYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  iChronology.getMinInYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinInYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	252	None	replace
2992	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth);  [CE]  cannot  find  symbol  jumpMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),  jumpMonth);	  iChronology    =    chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  jumpMonth	324	None	replace
2993	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.hourOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.hourOfMonth(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.hourOfMonth(),  leapMonth);	  iChronology    =    chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	324	None	replace
2994	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.weekOfYear(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.weekOfYear(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.weekOfYear(),  leapMonth);	  iChronology    =    chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	324	None	replace
2995	[BUG]  [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.monthOfYear(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.monthOfYear(),  leapMonth);  [BUGGY]      iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iChronology  =  chronology.dayOfMonth().getInstance(DateTimeFieldType.monthOfYear(),  leapMonth);	  iChronology    =    chronology.dayOfMonth().getInstance(DateTimeFieldType.dayOfMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	324	None	replace
2996	[BUG]  [BUGGY]  iVar  =  chronology.getMonthOfYear();  [CE]  cannot  find  symbol  iVar  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iVar  =  chronology.getMonthOfYear();  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iVar  =  chronology.getMonthOfYear();	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    iMonth    =    chronology.getMonthOfYear();    	non-compiled	[CE]  cannot  find  symbol  iVar	267	None	replace
2997	[BUG]  [BUGGY]  iMonth  =  chronology.getMonthOfYear()  *  1;  [CE]  cannot  find  symbol  iMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMonth  =  chronology.getMonthOfYear()  *  1;  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMonth  =  chronology.getMonthOfYear()  *  1;	  BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMonth    =    chronology.getMonthOfYear()    +    1;    	non-compiled	[CE]  cannot  find  symbol  iMonth	268	None	replace
2998	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear(this.iChronology);  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  chronology.getMinYear(this.iChronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  chronology.getMinYear(this.iChronology);	  iMin    =    this.iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	55	None	replace
2999	[BUG]  [BUGGY]  iMin  =  this.iChronology.getMinYear(chronology);  [CE]  cannot  find  symbol  iMin  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());      [BUGGY]  iMin  =  this.iChronology.getMinYear(chronology);  [BUGGY]      iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	52	52	8	replace	iMin  =  this.iChronology.getMinYear(chronology);	  iMin    =    this.iChronology.getMinYear();    	non-compiled	[CE]  cannot  find  symbol  iMin	55	None	replace
